{"version":3,"sources":["helpers/constants.js","redux/ActionTypes.js","helpers/funcs.js","data/script.js","redux/ActionCreators.js","components/CustomModalComponent.js","components/PlayerComponent.js","components/NPCManagerComponent.js","components/GameObjectManagerComponent.js","components/MapComponent.js","data/skins.js","data/gameobjects.js","data/Maps/town_center.js","data/Levels/1/_home.js","data/Maps/home.js","data/Levels/1/_bakery.js","data/Maps/bakery.js","data/Maps/town_north.js","data/Maps/cave.js","data/Maps/hell.js","data/Levels/1/_town_north.js","data/Levels/1/_cave.js","data/Levels/1/_hell.js","data/Maps/town_south.js","data/Maps/library.js","data/Maps/gameroom.js","data/Levels/1/_library.js","data/Levels/1/_gameroom.js","data/Maps/hotel.js","data/Levels/1/index.js","data/Levels/1/_town_center.js","data/Levels/1/_town_south.js","data/Levels/1/_hotel.js","components/ConversationDisplayComponent.js","components/InventoryComponent.js","components/LoadingComponent.js","components/BattleComponent.js","components/StatsComponent.js","components/WorldComponent.js","components/MainMenuComponent.js","components/PlayerSelectComponent.js","data/resourcepaths.js","components/MainComponent.js","redux/player.js","redux/map.js","redux/viewport.js","redux/npc.js","redux/gameobject.js","redux/dialog.js","redux/inventory.js","redux/statemanager.js","redux/battle.js","redux/ConfigureStore.js","App.js","serviceWorker.js","index.js"],"names":["LEFT","RIGHT","UP","DOWN","ARROW_KEYCODES","SPACE_KEY","PICKUP_KEY","INVENTORY_KEY","SAVE_KEY","ENTER_KEY","ESC_KEY","VALID_KEYCODES","concat","PICKABLES","BOSS","GANG_MEMBER","SAVED_GAME","LEVEL_COLORS","L1","L2","L3","L4","L5","L6","AUDIO_PATH","IMAGES_PATH","MAPS_BASE","CHARACTER_SPRITES_BASE","PROPS_PATH","DRIP_SOUND","BEEP_SOUND","BEEP_2_SOUND","BEEP_3_SOUND","BEEP_LONG_SOUND","PICK_SOUND","LASER_SOUND","MAIN_MENU_MUSIC","TOWN_CENTER_MUSIC","TOWN_NORTH_MUSIC","TOWN_SOUTH_MUSIC","HOME_MUSIC","BAKERY_MUSIC","HOTEL_MUSIC","LIBRARY_MUSIC","GAMEROOM_MUSIC","CAVE_MUSIC","HELL_MUSIC","BATTLE_MUSIC","BATTLE_BOSS_MUSIC","BATTLE_GM_MUSIC","BATTLE_END_MUSIC","ADD_MAP","BASE_FONT_SIZE","getViewportDim","screenWidth","screenHeight","width","height","viewportdim","Math","min","getFontSize","multiplier","mapToViewport","mappos","mapstart","tileToMapCoordinates","tile","TILE_SIZE","mapCoordinatesToTiles","position","intervalList","customSetInterval","func","delay","npcid","id","setInterval","clearIntervals","props","Object","keys","i","length","clearInterval","timeoutList","customSetTimeout","setTimeout","getValue","stateparam","payloadparam","centerBgImg","image","color","size","backgroundColor","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","solidBorder","radius","border","borderRadius","getKeyDiv","keycode","fontSize","style","padding","display","getLevelColor","level","getWinPercColor","winperc","playSoundEffect","src","Audio","play","PLAYERDIALOGS","Frank","follows","starts","battleAccept","battleAsk","battleWin","battleLose","Dad","Joey","Ace","Tia","Nathan","John","Samantha","Eden","Tracer","Sean","Gambit","Chop","Molly","Jordan","Grindel","Tori","Ghissu","Razor","Prick","LT","Rose","Snyder","Kaloo","Goku","Misty","Trigger","Max","Maty","Damon","Tegan","Hunt","Fattu","Rock","Paper","Scissors","Beast","NPCDIALOGS","battleAcceptNeverDefeated","battleDeclineDefeated","battleDecline","observeMapBoundaries","newpos","mapwidth","mapheight","observeIdleNPC","npcList","filter","npc","isAnimating","observeAnimatingNPC","nextPosition","getNewPostion","oldpos","direction","movementSize","window","alert","getNewOrigin","start","getNPC","npclist","UpdatePlayerPosition","keyCode","dispatch","getState","player","VIEWPORT_WIDTH","viewport","viewportDims","VIEWPORT_HEIGHT","mapend","end","map","steps","skin","walkSpriteCount","movemap","frameMovementSize","UpdatePlayerDirectionAction","tiles","row","col","abs","observeImpassible","idlenpc","list","animatingnpc","UpdatePlayerAnimationAction","camera","viewportPos","observeCamera","viewportWidth","viewportHeight","mapScrollable","requestAnimationFrame","animatePlayer","nearbyNPC","UpdateNearbyNPCAction","battle","battleFlag","ForceBattleConversation","talkFlag","ForceNonBattleConversation","UpdatePlayerPositionAction","UpdateOriginAction","frameInterval","nearByNPC","checkNearbyIdleNPC","objects","getObjectForPickup","gameobjects","UpdateNearbyGameObjAction","nearbyGameObj","portals","getPortal","UpdateNearbyPortalAction","nearbyPortal","getPositionEquality","pos1","pos2","gameobject","includes","type","getOppositeDirection","checkNearbyIdlePlayer","npcpos","observeIdlePlayer","playerpos","checkBattleEligibilty","playerlevel","npclevel","checkBossBattleEligibilty","defeatedGangMembersList","battlerType","defeatedGangMembers","oppdirection","UpdateNPCDirectionAction","SetConversationStatus","name","dialogs","dialog","replace","UpdateNPCPosition","npcId","stationary","interacting","inBattle","isWaiting","performance","now","lastUpdated","waitInterval","ResetNPCWaiting","curdirection","pathArr","defaultDirection","pathIdx","pathDir","newdirection","oldirection","getNewDirection","observePlayer","UpdateNPCAnimationAction","animateNPC","UpdateNPCPositionAction","AddMap","secondary","LoadingMapAction","start_x","start_y","end_x","end_y","playerPosition","oldState","sm","statemanager","mapBg","Image","onload","AddMapAction","StartBattle","payload","BattleGetRandomMove","maxMove","floor","random","BattleGetNextMove","markovMatrix","lastMove","nextMove","predictedMoveIdx","reduce","maxIdx","currVal","currIdx","arr","move","BattleGetWinningMove","BattleMoveIndexToStr","BattleHandleMove","playerMove","playermove","npcmove","playerMarkovMatrix","playerLastMove","npcMove","winner","summary","playername","npcname","BattleSummary","UpdateBattleStatsAction","finalWinner","CheckBattleWinner","newexp","exp","getPlayerNewExp","score","newlevel","getPlayerLevel","EndBattle","gangMember","playerLevel","npcLevel","max","lives","battleWinner","updatedPlayerStats","CloseBattle","gameobjId","portal","origin","person1","person2","battleConversation","ResetConversationStatus","NextDialogAction","AddObjecttoInventory","object","SaveStateInitAction","SaveStateAction","state","SaveStateEndAction","RestoreStateAction","currentMapInfo","prevStates","mapinfo","RestoreStateFromDiskAction","getMergedNPCList","base","diff","diffnpc","defeatedCount","vpstart","vpend","ActionTypes","audioSrc","bgStyle","bgcolor","bordercolor","CustomModal","left","top","transform","zIndex","show","flexDirection","justifyContent","alignItems","fontFamily","margin","onClick","confirmLink","icon","faCheckSquare","cancelLink","faWindowClose","PlayerSprite","playerStyle","isNaN","walkIndex","spriteLocation","playermarkerstyle","className","faCaretDown","Player","handleKeyDown","bind","toggleExitModalState","showExitModal","addEventListener","this","removeEventListener","setState","event","frozen","preventDefault","stopImmediatePropagation","updatePlayerPosition","updateConversation","initiateConversation","pickupObject","toggleInventory","checkPortalAndEnter","handleBack","Component","connect","speakerIdx","dialogIdx","gobj","saveStateandAddMap","target","cpyPrevStates","pop","currentMap","currentGameobjects","currentMapNPCBattleStatus","checkandRestoreMap","NPC","battlerMarkerIcon","faExclamation","self","faSkull","updateNPCPosition","moveInterval","npcStyle","battlemarkerstylebase","messagestylebase","textAlign","faEnvelope","NPCManager","NPCObj","key","GameObject","objStyle","srcpos","rotate","effects","GameObjectManager","GameObj","Map","ref","loop","volume","html5","SKINS","player_1","player_2","prof","friend_1","friend_2","friend_3","friend_4","friend_5","friend_6","friend_7","friend_8","friend_9","kid_1","kid_2","kid_3","nurse","chef","bully_1","crush_1","crush_2","crush_3","crush_4","tribe_1","tribe_2","tribe_3","tribe_4","tribe_5","boss","whitepuppy","brownpuppy","blackcat","whitecat","orangecat","baby","ITEMS_URL","PORTAL_URL","ENTER_URL","LEAVE_URL","GAMEOBJECTS","PORTALS","townCenter","_home","_bakery","battleMusic","townNorth","cave","hell","_townNorth","townSouth","library","gameroom","_library","hotel","Dialog","animateConversation","timeout","content","idx","objref","animate","innerHTML","substring","p1","p2","isOpen","person","cleanBoard","clearTimeout","POS","right","overflowWrap","bottom","ConversationDisplay","InventoryItem","imageStyle","divSize","count","InventoryRow","countObj","item","GetInventoryItemCounts","inventorylist","rendergameobjects","gameobj","boxShadow","writingMode","textOrientation","InventoryDialog","inventoryStyle","inventory","Inventory","Loading","alt","msg","HealthBar","blink","hb","classList","add","remove","marginRight","currhealth","maxhealth","PlayerInfo","reverse","alignSelf","maxLives","MoveDiv","push","imgStyle","Summary","text","p","animateText","BattleEnd","continue","winnerStr","winnerClass","levelColor","initialStats","levelArrow","closeBattle","from","to","speed","cont","opacity","marginBottom","marginTop","BattleIntro","BattleArena","select","focus","disabled","submitMove","value","lastWinner","defaultValue","overflowY","Battle","inIntro","endIntro","UI_COMPONENT","AUDIO_COMPONENT","music","inEnd","parseInt","AwareComponent","instruction","targetname","action","getPortalInstruction","Stats","handleSaveBtnClick","saveGame","num","borderLeft","borderRight","borderTop","won","lost","round","paddingLeft","faSave","saveStateToLocalStorage","npcAnimating","serializedState","JSON","stringify","localStorage","setItem","err","World","initViewport","loadgame","loadGameFromDisk","loadMap","worldStyle","overflow","isLoading","savingState","Fragment","getItem","parse","dims","checkSavedGame","MenuBtn","basestyle","disbaledstyle","title","MainMenu","startNewGame","loadGame","SELECT_URL","CharacterPane","click","option","selected","bgColor","PlayerSelect","handleCharacterClick","handleNameChange","validateAndSend","character","errmsg","test","startNewJourney","initPlayerInfo","startJourney","marginLeft","borderBottom","htmlFor","onChange","skinIdx","SetPlayerInfoAction","RESOURCES","Main","loading","menu","playerselect","world","screenDim","screen","bg","handleStartNewGame","handleLoadGame","handleStartJourney","renderMenu","pictureUrls","callback","j","loaded","img","preloadPictures","PlayerSelectComponent","INITIAL_STATE","getUpdatedGangMembersList","newGangMember","newDefeatedGangMembers","HEALER","CURRENCY","EATABLE","squareMatrix","n","matrix","Array","fill","getLives","currRound","rootReducer","combineReducers","statecpy","cpyMatrix","ConfigureStore","createStore","composeWithDevTools","applyMiddleware","thunk","App","store","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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AK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAC7G,CAAG,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAC7G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAI,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAM,EAAK,EAAI,GAAK,GAAK,GAAM,EAAK,GAC7G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAI,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAM,GAC7G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAC7G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,G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","file":"static/js/main.80d3e43a.chunk.js","sourcesContent":["export const TILE_SIZE = 80;\r\nexport const TOTAL_MOVEMENT_SIZE = TILE_SIZE;\r\n\r\nexport const LEFT = \"LEFT\";\r\nexport const RIGHT = \"RIGHT\";\r\nexport const UP = \"UP\";\r\nexport const DOWN = \"DOWN\";\r\nexport const SPRITE_LOC_DOWN = 0;\r\nexport const SPRITE_LOC_UP = 3;\r\nexport const SPRITE_LOC_LEFT = 2;\r\nexport const SPRITE_LOC_RIGHT = 1;\r\n\r\nexport const ARROW_KEYCODES = [37, 38, 39, 40];\r\nexport const SPACE_KEY = [32];\r\nexport const PICKUP_KEY = [80]; /* P */\r\nexport const INVENTORY_KEY = [73]; /* I */\r\nexport const SAVE_KEY = [69]; /* E */\r\nexport const ENTER_KEY = [13]; /* ENTER */\r\nexport const ESC_KEY = [27]; /* R */\r\n\r\nexport const VALID_KEYCODES = ARROW_KEYCODES.concat(SPACE_KEY, PICKUP_KEY, INVENTORY_KEY, SAVE_KEY, ENTER_KEY, ESC_KEY);\r\n\r\nexport const PASSIBLE_INDEX = 5;\r\n\r\nexport const HEALER = \"HEALER\";\r\nexport const EATABLE = \"EATABLE\";\r\nexport const CURRENCY = \"CURRENCY\";\r\nexport const PORTAL = \"PORTAL\";\r\nexport const PICKABLES = [HEALER,EATABLE,CURRENCY];\r\n\r\nexport const ROCK = 0;\r\nexport const PAPER = 1;\r\nexport const SCISSORS = 2;\r\n\r\n\r\nexport const BATTLE_ELIGIBILITY_THRESHOLD = 1;\r\nexport const BATTLE_NUM_GANG_MEMBERS = 5;\r\nexport const BOSS_BATTLE_LEVEL = 6;\r\n\r\nexport const BOSS = \"BOSS\";\r\nexport const GANG_MEMBER = \"GANG_MEMBER\";\r\nexport const NON_GANG_MEMBER = \"NON_GANG_MEMBER\";\r\n\r\n\r\nexport const SAVED_GAME = \"SAVED GAME\";\r\n\r\nexport const LOADGAME = \"LOADGAME\";\r\nexport const NEWGAME = \"NEWGAME\";\r\n\r\nexport const MAIN_MENU = \"/menu\";\r\nexport const WORLD_BASE = \"/world\"\r\n\r\nexport const PORTAL_ENTER = \"enter\";\r\nexport const PORTAL_LEAVE = \"leave\";\r\n\r\nexport const MAX_LEVEL = 6;\r\nexport const LEVEL_COLORS =  {\r\n    L1: \"MediumSeaGreen\",\r\n    L2: \"RoyalBlue\",\r\n    L3: \"Turquoise\",\r\n    L4: \"darkorange\",\r\n    L5: \"red\",\r\n    L6: \"gold\"\r\n};\r\n\r\nconst ASSETS_PATH = \"assets\";\r\nconst AUDIO_PATH = `${ASSETS_PATH}/audio`;\r\nexport const IMAGES_PATH = `${ASSETS_PATH}/images`;\r\nexport const MAPS_BASE = `${IMAGES_PATH}/maps`;\r\nexport const CHARACTER_SPRITES_BASE = `${IMAGES_PATH}/80/characters`;\r\nexport const PROPS_PATH = `${IMAGES_PATH}/80/objectsAndProps`;\r\n\r\nexport const DRIP_SOUND = `${AUDIO_PATH}/effects/drip.wav`;\r\nexport const BEEP_SOUND = `${AUDIO_PATH}/effects/beep.wav`;\r\nexport const BEEP_2_SOUND = `${AUDIO_PATH}/effects/beep2.wav`;\r\nexport const BEEP_3_SOUND = `${AUDIO_PATH}/effects/beep3.wav`;\r\nexport const BEEP_LONG_SOUND = `${AUDIO_PATH}/effects/longbeep.wav`;\r\nexport const PICK_SOUND = `${AUDIO_PATH}/effects/getcoin.wav`;\r\nexport const LASER_SOUND = `${AUDIO_PATH}/effects/laser.wav`;\r\n\r\nexport const MAIN_MENU_MUSIC = `${AUDIO_PATH}/MainMenu.mp3`;\r\nexport const TOWN_CENTER_MUSIC = `${AUDIO_PATH}/TownCenter.mp3`;\r\nexport const TOWN_NORTH_MUSIC = `${AUDIO_PATH}/TownSouth.mp3`;\r\nexport const TOWN_SOUTH_MUSIC = `${AUDIO_PATH}/TownSouth.mp3`;\r\nexport const HOME_MUSIC = `${AUDIO_PATH}/Home.mp3`;\r\nexport const BAKERY_MUSIC = `${AUDIO_PATH}/Bakery.mp3`;\r\nexport const HOTEL_MUSIC = `${AUDIO_PATH}/Hotel.mp3`;\r\nexport const LIBRARY_MUSIC = `${AUDIO_PATH}/Library.mp3`;\r\nexport const GAMEROOM_MUSIC = `${AUDIO_PATH}/GameRoom.mp3`;\r\nexport const CAVE_MUSIC = `${AUDIO_PATH}/Cave.mp3`;\r\nexport const HELL_MUSIC = `${AUDIO_PATH}/Hell.mp3`;\r\nexport const BATTLE_MUSIC = `${AUDIO_PATH}/Battle.mp3`;\r\nexport const BATTLE_BOSS_MUSIC = `${AUDIO_PATH}/BattleBoss.mp3`;\r\nexport const BATTLE_GM_MUSIC = `${AUDIO_PATH}/BattleGangMember.mp3`;\r\nexport const BATTLE_END_MUSIC = `${AUDIO_PATH}/BattleEnd.mp3`;","export const INIT_VIEWPORT_DIMS = \"INIT_VIEWPORT_DIMS\";\r\nexport const SET_PLAYER_INFO = \"SET_PLAYER_INFO\";\r\nexport const UPDATE_PLAYER_POSITION = \"UPDATE_PLAYER_POSITION\";\r\nexport const UPDATE_PLAYER_DIRECTION = \"UPDATE_PLAYER_DIRECTION\";\r\nexport const UPDATE_PLAYER_ANIMATION = \"UPDATE_PLAYER_ANIMATION\";\r\nexport const UPDATE_NEARBY_NPC = \"UPDATE_NEARBY_NPC\";\r\nexport const UPDATE_NEARBY_GAMEOBJ = \"UPDATE_NEARBY_GAMEOBJ\";\r\nexport const UPDATE_NEARBY_PORTAL = \"UPDATE_NEARBY_PORTAL\";\r\n\r\nexport const ADD_MAP = \"ADD_MAP\";\r\nexport const MAP_LOADING = \"MAP_LOADING\";\r\nexport const UPDATE_MAP_ORIGIN = \"UPDATE_MAP_ORIGIN\";\r\n\r\nexport const UPDATE_NPC_POSITION = \"UPDATE_NPC_POSITION\";\r\nexport const UPDATE_NPC_DIRECTION = \"UPDATE_NPC_DIRECTION\";\r\nexport const UPDATE_NPC_ANIMATION = \"UPDATE_NPC_ANIMATION\";\r\nexport const RESET_NPC_WAITING = \"RESET_NPC_WAITING\";\r\n\r\nexport const SET_DIALOG_STATUS = \"SET_DIALOG_STATUS\";\r\nexport const RESET_DIALOG_STATUS = \"RESET_DIALOG_STATUS\";\r\nexport const NEXT_DIALOG = \"NEXT_DIALOG\";\r\n\r\nexport const TOGGLE_INVENTORY_DISPLAY = \"TOGGLE_INVENTORY_DISPLAY\";\r\nexport const ADD_OBJECT_TO_INVENTORY = \"ADD_OBJECT_TO_INVENTORY\";\r\n\r\nexport const SAVE_STATE_INITIATED = \"SAVE_STATE_INITIATED\";\r\nexport const SAVE_STATE = \"SAVE_STATE\";\r\nexport const SAVE_STATE_END = \"SAVE_STATE_END\";\r\nexport const RESTORE_STATE = \"RESTORE_STATE\";\r\nexport const RESTORE_STATE_FROM_DISK = \"RESTORE_STATE_FROM_DISK\";\r\n\r\nexport const START_BATTLE = \"START_BATTLE\";\r\nexport const END_BATTLE_INTRO = \"END_BATTLE_INTRO\";\r\nexport const SUBMIT_MOVES = \"SUBMIT_MOVES\";\r\nexport const END_BATTLE = \"END_BATTLE\";\r\nexport const CLOSE_BATTLE = \"CLOSE_BATTLE\";\r\n\r\nexport const START_NEW_JOURNEY = \"START_NEW_JOURNEY\";","import React from 'react';\r\nimport { MAX_LEVEL, LEVEL_COLORS } from './constants';\r\n\r\nexport const getRounded = (num) => {\r\n    return isNaN(num)? 0: Math.round(num);\r\n}\r\n\r\nlet BASE_FONT_SIZE = 10;\r\n\r\nexport const getViewportDim = (screenWidth, screenHeight) => {\r\n    const width = [960, 1200, 1440];\r\n    const height = [640, 720, 800];\r\n    let viewportdim = [];\r\n    if(screenWidth < 1200) {\r\n        viewportdim[0] = width[0];\r\n        BASE_FONT_SIZE = 8;\r\n    } else if(screenWidth < 1440) {\r\n        viewportdim[0] = width[1];\r\n        BASE_FONT_SIZE = 9;\r\n    } else {\r\n        viewportdim[0] = width[2];\r\n        BASE_FONT_SIZE = 10;\r\n    } \r\n    \r\n    if(screenHeight < 720) {\r\n        viewportdim[1] = height[0];\r\n        BASE_FONT_SIZE = Math.min(BASE_FONT_SIZE, 8);\r\n    } else if(screenHeight < 800) {\r\n        viewportdim[1] = height[1];\r\n        BASE_FONT_SIZE = Math.min(BASE_FONT_SIZE, 9);\r\n    } else {\r\n        viewportdim[1] = height[2];\r\n        BASE_FONT_SIZE = Math.min(BASE_FONT_SIZE, 10);\r\n    } \r\n    return viewportdim;\r\n}\r\n\r\nexport const getFontSize = (multiplier = 1) => {\r\n    return BASE_FONT_SIZE*multiplier;\r\n}\r\n\r\nexport const viewportToMap = (viewportpos, mapstart) => {\r\n    return([viewportpos[0] + (-1*mapstart[0]),viewportpos[1] + (-1*mapstart[1])]);\r\n}\r\n\r\n\r\nexport const mapToViewport = (mappos, mapstart) => {\r\n    return([mappos[0] + mapstart[0],mappos[1] + mapstart[1]]);\r\n}\r\n\r\nexport const tileToMapCoordinates = (tile, TILE_SIZE) => {\r\n    return([tile[1]*TILE_SIZE, tile[0]*TILE_SIZE]);\r\n}\r\n\r\nexport const mapCoordinatesToTiles = (position, TILE_SIZE) => {\r\n    return([position[1]/TILE_SIZE, position[0]/TILE_SIZE]);\r\n}\r\n\r\nexport let intervalList = {};\r\n\r\nexport const customSetInterval = (func, delay, npcid) => {\r\n    const id = setInterval(func, delay);\r\n    intervalList[\"_\"+npcid] = id;\r\n}\r\n\r\nexport const clearIntervals = () => {\r\n    var props = Object.keys(intervalList);\r\n    for (var i = 0; i < props.length; i++) {\r\n        clearInterval(intervalList[props[i]]);\r\n        delete intervalList[props[i]];\r\n    }\r\n}\r\n\r\nexport let timeoutList = {};\r\n\r\nexport const customSetTimeout = (func, delay, npcid) => {\r\n    const id = setTimeout(func, delay);\r\n    timeoutList[\"_\"+npcid] = id;\r\n}\r\n\r\nexport const clearTimeouts = () => {\r\n    var props = Object.keys(timeoutList);\r\n    for (var i = 0; i < props.length; i++) {\r\n        clearTimeout(timeoutList[props[i]]);\r\n        delete timeoutList[props[i]];\r\n    }\r\n}\r\n\r\nexport const printMatrix = (matrix) => {\r\n    let print = \"\";\r\n    for(let i=0; i<matrix.length;i++) {\r\n        for(let j=0; j<matrix[0].length;j++) {\r\n            print+=matrix[i][j]+\" ,\";\r\n        }\r\n        print+=\"\\n\";\r\n    }\r\n    console.log(print);\r\n}\r\n\r\nexport const getValue = (stateparam, payloadparam) => {\r\n    return(payloadparam!=null ? payloadparam: stateparam);\r\n}\r\n\r\nexport const centerBgImg = (image, color='white', size='contain') => {\r\n    return({\r\n        backgroundColor: color,\r\n        backgroundImage: `url('${image}')`, \r\n        backgroundRepeat: 'no-repeat', \r\n        backgroundPosition:'center',\r\n        backgroundSize: size,\r\n    });\r\n}\r\n\r\nexport const solidBorder = (size, color, radius) => {\r\n    return({\r\n        border: `${size}px solid ${color}`,\r\n        borderRadius: `${radius}px`,\r\n    });\r\n}\r\n\r\n\r\nexport const getKeyDiv = (keycode, fontSize=getFontSize(1.5)) => {\r\n    return(\r\n    <div style={{padding:'3px', border: '1px inset grey', borderRadius:'5px', backgroundColor:'white', display: 'inline-block', fontSize:`${fontSize}px`, color:'#5d5f5b' }}>\r\n        <div style={{backgroundColor:'lightgrey'}}>{keycode}</div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport const getLevelColor = (level) => {\r\n   if(level<1 || level>MAX_LEVEL) \r\n        return \"white\";\r\n    return(LEVEL_COLORS[`L${level}`]);\r\n}\r\n\r\nexport const getWinPercColor = (winperc) => {\r\n    if(winperc < 25)\r\n        return 'Red';\r\n    else if(winperc < 50) \r\n        return 'Crimson';\r\n    else if(winperc < 75)\r\n        return 'SpringGreen';\r\n    else \r\n        return 'ForestGreen'\r\n }\r\n\r\n export const playSoundEffect = (src) => {\r\n     const click = new Audio(src);\r\n     click.play();\r\n }\r\n\r\n export const preloadPictures = function(pictureUrls, callback) {\r\n    let i,\r\n        j,\r\n        loaded = 0;\r\n\r\n    for (i = 0, j = pictureUrls.length; i < j; i++) {\r\n        (function (img, src) {\r\n            img.onload = function () {                               \r\n                if (++loaded >= pictureUrls.length && callback) {\r\n                    callback();\r\n                }\r\n            };\r\n            img.src = src;\r\n        } (new Image(), pictureUrls[i]));\r\n    }\r\n};\r\n","export const PLAYERDIALOGS = {\r\n    Frank: {\r\n        follows:[\"Hey Frank! I'm great.\", \r\n                 \"I'm a bit busy with my engineering exams. What about you?\", \r\n                 \"Oh wow! That's awesome.\", \r\n                 \"Ohh, thanks for informing :). I'll probably go now.\", \r\n                 \"BBye, Takecare.\"],\r\n        starts:[\"Hey! Whatsup!\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Dad: {\r\n        follows:[\"It feels great to be back home. You look worried dad. Is everything fine?\", \r\n                 \"Yeah! The town seems a bit different. Someone refused to play Roshambo with me coz I was not on his level! I didn't get it.\",\r\n                 \"Markov tribe? That's an interesting name. And what are the new rules?\",\r\n                 \"And...\",\r\n                 \"Okay! Now I get it. But this isn't great for our town. We always had a 'free Roshambo for all' motto.\",\r\n                 \"How can we do that?\",\r\n                 \"I can do that dad. But I need some practice.\",\r\n                 \"Okay dad! I'll go and practice now. Big task ahead.\",\r\n                 \"Even I missed him. I'll surely play with him.\",\r\n                 \"Thats amazing! I'll grab an Eclair from there.\",\r\n                ],\r\n        starts:[\"Hey Dad! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Joey: {\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Okay Joey. Let's battle!\"],\r\n        battleAsk:[\"Hey Joey! you wanna play?\"],\r\n        battleWin:[\"Nevermind....\"],\r\n        battleLose:[\"I always let you win.\"],\r\n    },\r\n\r\n    Ace: {\r\n        follows:[\"I missed you too.....\"],\r\n        starts:[\"Ace!! Come here....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Tia: {\r\n        follows:[\"Hey Tia! I'm great. Came here to get some eclairs.\", \r\n                 \"Why so? I see the bakery is open.\", \r\n                 \"Its not their bakery! why are we being forced to battle him?\", \r\n                 \"Okay, I'll go inside and defeat him.\",\r\n                 \"Sure, I'll do that. See you!\",\r\n                ],\r\n        starts:[\"Hey Tia! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Nathan: {\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Yeah sure, lets go!\"],\r\n        battleAsk:[\"Hey! do you wanna battle?\"],\r\n        battleWin:[\"Thanks mate!\"],\r\n        battleLose:[\"I'll be back in no time. See you then.\"],\r\n    },\r\n\r\n    John: {\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Yeah sure, lets go!\"],\r\n        battleAsk:[\"Hey! do you wanna battle?\"],\r\n        battleWin:[\"Thanks mate!\"],\r\n        battleLose:[\"I'll be back in no time. See you then.\"],\r\n    },\r\n\r\n    Samantha: {\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Yeah sure, who doesn't like a freebie ;)\"],\r\n        battleAsk:[\"Hey! do you wanna battle?\"],\r\n        battleWin:[\"Thanks! I think I am ready to defeat him.\", \"Great! Now I have 2 reasons to defeat him haha.\"],\r\n        battleLose:[\"I'll be back in no time. See you then.\"],\r\n    },\r\n\r\n    Eden:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"I'm $PLAYERNAME. I'm not new, you are new here. Btw, I came here for an eclair.\",\r\n                      \"Really? I thought I need to have a Roshambo battle with you. Guess you are not that bad.\",\r\n                      \"And I thought for a moment that the tribe isn't that bad. Nevertheless, I can defeat you, pretty easily.\",\r\n                      \"Yup, lets go!!!\"],\r\n        battleAsk:[\"I want to challenge you for a battle!\"],\r\n        battleWin:[\"I'll take care of your boss later. I need my eclair now. Step aside.\", \r\n                   \"But you said so. And I believed you!\",\r\n                   \"F*** man. What else can I expect from the tribe! Where can I find your boss?\",\r\n                   \"Ughhhhhh.\"],\r\n        battleLose:[\"I'll be back in no time. \"],\r\n    },\r\n\r\n    Tracer: {\r\n        follows:[\"Hey Tracer. I'm looking for the tribe boss. Do you know where he lives?\",\r\n                 \"North? How do you know?\",\r\n                 \"And I'm John Snow. Stop joking. Are you sure about this info?\",\r\n                 \"No... sadly :( I'll probably go to the north.\",\r\n                 \"Thanks :) Hopefully.\"\r\n                ],\r\n        starts:[\"Hey Tracer! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Sean: {\r\n        follows:[\"Hey Sean. I'm great. Hows your business?\",\r\n                 \"Why? What happened?\",\r\n                 \"Tell me!\",\r\n                 \"Who is Gambit? Why didn't you call police for help?\",\r\n                 \"I knew it. A tribe member doing what tribe members do best, bully others. I'll teach him a lesson by defeating him in a Roshambo battle.\",\r\n                 \"Don't decide the winner before the battle. Atleast I want to try.\",\r\n                 \"Yup, I will. Thanks.\"\r\n                ],\r\n        starts:[\"Hey Sean! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Gambit:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"No, this isn't your property. This is my friend Sean's property.\",\r\n                      \"I've got big hands as well. I challenge you for a Roshambo battle.\",\r\n                      \"One tribe defeated is one tribe less. Lets go\"],\r\n        battleAsk:[\"I want to challenge you for a battle!\"],\r\n        battleWin:[\"Not for long. I'll soon defeat your boss.\"],\r\n        battleLose:[\"I'm pretty sure you cheated. I'll be back.\"],\r\n    },\r\n\r\n    Chop:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Do I have a choice?\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"You are pretty good. I got lucky.\"],\r\n        battleLose:[\"No! I underestimated you. See you next time.\"],\r\n    },\r\n\r\n    Molly: {\r\n        follows:[\"Hey Molly. Why are you outside the library?\",\r\n                 \"Have they occupied the library as well? I thought its just the bakery and the chinese van.\",\r\n                 \"Don't worry. I'll soon defeat their boss.\",\r\n                 \"Really! I didn't know that. I should go inside and battle them. Wish me luck.\",\r\n                 \"Thanks!\"],\r\n        starts:[\"Hey Molly! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Jordan: {\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Yeah sure, lets go!\"],\r\n        battleAsk:[\"Hey! do you wanna battle?\"],\r\n        battleWin:[\"Thanks mate!\"],\r\n        battleLose:[\"I'll be back in no time. See you then.\"],\r\n    },\r\n\r\n    Grindel:{\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Do I have a choice?\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"You are pretty good. I got lucky.\"],\r\n        battleLose:[\"No! I underestimated you. See you next time.\"],\r\n    },\r\n\r\n    Tori:{\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Definitely! I need to practice as well.\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"Losers will be losers\"],\r\n        battleLose:[\"I underestimated you. See you next time.\"],\r\n    },\r\n\r\n    Ghissu: {\r\n        follows:[\"Hey Ghissu. Done with all the ghisai?\",\r\n                 \"Molly told me the tribe has occupied the library as well. I'm looking for them.\",\r\n                 \"Atleast you have a source of entertainment now. Haha. Jokes aside, where are they?\",\r\n                 \"I should have known. Thanks! See you after the battle.\",\r\n                 \"Haha. Bbye.\"],\r\n        starts:[\"Hey Ghissu! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Razor:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Its a public TV, you can't watch something private here.\",\r\n                      \"Not for long. Soon I'll defeat your boss.\",\r\n                      \"You stole words from my mouth. I accept the challenge.\",\r\n                      \"Stop talking and start battling!\"],\r\n        battleAsk:[\"I want to challenge you for a battle!\"],\r\n        battleWin:[\"Not for long. I'll soon defeat your boss.\"],\r\n        battleLose:[\"I'm pretty sure you cheated.\", \"I'll be back in no time.\"],\r\n    },\r\n\r\n    Prick:{\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Definitely! I need to practice as well.\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"Losers will be losers\"],\r\n        battleLose:[\"I underestimated you. See you next time.\"],\r\n    },\r\n\r\n    LT: {\r\n        follows:[\"Okay... I get it.\"],\r\n        starts:[\"Hey! Can I play?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Rose: {\r\n        follows:[\"Are they tribe members?\",\r\n                 \"As expected. Okay, I'll try to get her back.\",\r\n                 \"No problem.\"],\r\n        starts:[\"Hey! Did you get sparkle back?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n\r\n    Snyder:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Stop disturbing the dog. Leave her alone!\",\r\n                      \"Just like I'll teach your boss a lesson?\", \r\n                      \"I'll soon defeat him in Roshambo. But, let me defeat you first!\",\r\n                      \"If I win, you free the dog!\",\r\n                      \"Challenge accepted!\"],\r\n        battleAsk:[\"I want to challenge you for a battle.\"],\r\n        battleWin:[\"Not for long. I'll soon defeat your boss.\"],\r\n        battleLose:[\"I'm pretty sure you cheated.\", \"I'll be back in no time.\"],\r\n    },\r\n\r\n    Kaloo: {\r\n        follows:[\"Okay....\"],\r\n        starts:[\"Awwww......kaloooooo.\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Goku: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww......cutie. Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Misty: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww....Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Trigger: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww......cutie. Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Max:{\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Definitely! I need to practice as well.\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"Losers will be losers\"],\r\n        battleLose:[\"You got real skills mate!\"],\r\n    },\r\n\r\n\r\n    Maty: {\r\n        follows:[\"Hey Maty! Yeah. How have you been?\", \r\n                 \"On my quest to defeat the tribe boss.\",\r\n                 \"Thanks :)! I should go and defeat him.\",\r\n                 \"Hehe. Thanks!\"],\r\n        starts:[\"Hey Maty!\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Damon:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Do I have a choice?\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"You are pretty good. I got lucky.\"],\r\n        battleLose:[\"No! I underestimated you. See you next time.\"],\r\n    },\r\n\r\n\r\n    Tegan:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"No! I was looking for you.\",\r\n                      \"So that I can defeat you first, before your boss!\",\r\n                      \"Challenge accepted! Let me throw you out of our town haha.\"],\r\n        battleAsk:[\"I want to challenge you for a battle!\"],\r\n        battleWin:[\"Not for long. I'll soon defeat your boss.\"],\r\n        battleLose:[\"I'm pretty sure you cheated.\", \"I'll be back in no time.\"],\r\n    },\r\n\r\n    Hunt:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Do I have a choice?\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"You are pretty good. I got lucky.\"],\r\n        battleLose:[\"No! I underestimated you. See you next time.\"],\r\n    },\r\n\r\n\r\n    Fattu: {\r\n        follows:[\"Why? The tribe boss isn't inside?\",\r\n                 \"She!??! WTF. I'm going in.\",\r\n                 \"Don't worry about me.\"],\r\n        starts:[\"Hey Fattu!\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Rock: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww......cutie. Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Paper: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww......cutie. Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Scissors: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww......cutie. Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Beast:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Looking for the tribe boss. I want to battle her in Roshambo. Do you where is she?\",\r\n                      \"Ohh, my bad. How can I miss the biggest clue lol. Btw I'm $PLAYERNAME. I came here to challenge you for a Roshambo battle.\",\r\n                      \"There can be, like petting your cute cats.\",\r\n                      \"Yeah, they don't seem friendly, just like you.\",\r\n                      \"Yeah! Let's go!\"],\r\n        battleAsk:[\"I want to challenge you for a battle!\"],\r\n        battleWin:[\"Really? You aren't mad?\",\r\n                   \"You're not as bad as I expected tbh.\",\r\n                   \"So?? Am I the boss now? How does it work? How can I reset the rules?\",\r\n                   \"I thought so. I thought that was the story of the game! When is the Roshambo championship?\",\r\n                   \"He???\",\r\n                   \"Wow. And what about my Eclairs?\",\r\n                   \"Fuck it!\"],\r\n        battleLose:[\"I'll be back with more practice\"],\r\n    },\r\n}\r\n\r\nexport const NPCDIALOGS = {\r\n    Frank:{\r\n        starts: [\"Hey $PLAYERNAME! Whatsup.\", \"Long time no see. Where are you these days?\", \r\n                \"I'm preparing for this year's RoShamBo competition.\", \r\n                \"BTW, your father is waiting for you inside. You should go and meet him.\", \r\n                \"Sure, see you.\"],\r\n        follows: [\"I'm great. You talked to your father right!\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Dad:{\r\n        starts: [\"Hey kiddo! Glad you're back. It feels great seeing you!\",\r\n                 \"Did you notice anything weird outside?\", \r\n                 \"Its the markov tribe! Their boss won the Roshambo championship last year. Since then they have imposed new Roshambo rules in the town.\",\r\n                 \"Now there is a level system in Roshambo. Every Roshambo player starts at level 1 and can go till level 5.\",\r\n                 \"You can only battle a player who is at a lower or same level or 1 level higher than yours.\",\r\n                 \"Yes, and thats why we need to overthrow this tribe.\",\r\n                 \"We need to defeat their boss, only then we can remove these horrible rules.\",\r\n                 \"Thats my kid! Look around the town for some Roshambo battlers for practice. Battle them to gain exp and level up.\",\r\n                 \"Your baby brother missed you! Don't forget to play with him.\",\r\n                 \"Btw, your favourite Big Chill cakery has opened nearby. You should check it out.\"\r\n                ],\r\n        follows: [\"Key kiddo! You should probably go and defeat the tribe!\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Joey:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"I wanna play!!!\"],\r\n        battleAcceptNeverDefeated:[\"Yayayayay! I'll defeat you again!\"],\r\n        battleDeclineDefeated:[\"I don't like playing with you!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice\"],\r\n        battleLose:[\"You cheated!!!!\"],\r\n        battleWin: [\"I'm the best!!\"],\r\n    },\r\n\r\n    Ace:{\r\n        starts: [\"...\"],\r\n        follows: [\"Huff...I missed you..Huff....\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n\r\n    Tia:{\r\n        starts: [\"Hey $PLAYERNAME! Whatsup!\", \r\n                 \"You won't be able to get anything from here.\", \r\n                 \"There is a markov tribe member inside. If you want an eclair, you need to defeat him in Roshambo first.\", \r\n                 \"Everything belongs to them now. They have weird rules tbh.\",\r\n                 \"I hope you have enough practice. You can battle my friend Samantha, she is inside the bakery.\"\r\n                ],\r\n        follows: [\"I hope you defeat the tribe member.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Nathan:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"You won't be able to defeat me. Do you have the guts to battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice\"],\r\n        battleLose:[\"You are great! Cheers!.\"],\r\n        battleWin: [\"You're aweful. You need to practice.\"],\r\n    },\r\n\r\n    John:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"You won't be able to defeat me. Do you have the guts to battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice\"],\r\n        battleLose:[\"You are great! Cheers!.\"],\r\n        battleWin: [\"You're aweful. You need to practice.\"],\r\n    },\r\n\r\n    Samantha:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey! Do you wanna battle? Winner gets a swiss roll :p\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"I can't afford another brownie lol!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice\"],\r\n        battleLose:[\"You are great! Now you need to defeat the tribe member to get the free swiss roll. Hehe.\",\r\n                     \"Really! You'll get a brownie as well if you defeat him.\"],\r\n        battleWin: [\"Gosh! You're aweful. You need to practice. I don't think I'll ever get the swiss roll lol.\"],\r\n    },\r\n\r\n    Eden:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey you! I think you're new here.\",\r\n                    \"Just an eclair? You can have one.\",\r\n                    \"No, I was kidding. You need to defeat me in Roshambo first.\",\r\n                    \"I like defeating overconfident kids, lets go!\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"I don't have time for losers!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go, battle and level up.\"],\r\n        battleLose:[\"You have defeated me, but you won't be able to defeat our boss.\", \r\n                    \"If you think you can get your eclair now, you are a fool!\",\r\n                    \"Ah, I lied. You need to defeat our boss in order to change the rules. Hahahahaha.\",\r\n                    \"Find him yourself. All the best. Hahahahahahahaha.\"],\r\n        battleWin: [\"Typical overconfident kid. You can never defeat me, nevermind our boss!!\"],\r\n    },\r\n\r\n    Tracer:{\r\n        starts: [\"Hey $PLAYERNAME! Where are you heading towards?\", \r\n                 \"I heard he lives in a cave somewhere in the north.\", \r\n                 \"I'm the master of whisperers. Haha.\", \r\n                 \"Hehe. Do you have any other option?\", \r\n                 \"All the best. May the luck be with you.\"],\r\n        follows: [\"Ohh, you are still alive!\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Sean:{\r\n        starts: [\"Hey $PLAYERNAME! Long time no see?\", \r\n                 \"Ummm...not great.\",\r\n                 \"Ummm....\",\r\n                 \"Gambit and his bully friends are not allowing me to run my business!\", \r\n                 \"He is a tribe member. That't why nobody is willing to help me.\", \r\n                 \"He's on level 4, I don't think you can defeat him. I don't want to give you any trouble.\", \r\n                 \"Okay, your call. But, be careful.\"],\r\n        follows: [\"Be careful of the tribe, $PLAYERNAME.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Gambit:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey kid! Stop wandering around here. This is tribe's property!\",\r\n                    \"Your big mouth will lead you into trouble.\",\r\n                    \"I can defeat you in 2 minutes. Challenge accepted.\"],\r\n        battleAcceptNeverDefeated:[\"Again? Save your self respect!\"],\r\n        battleDeclineDefeated:[\"Go and battle our boss now!\"],\r\n        battleDecline:[\"You need to level up, loser!\"],\r\n        battleLose:[\"You got lucky. Nevermind, this town still belongs to us!\"],\r\n        battleWin: [\"You were a total waste of time.\"],\r\n    },\r\n\r\n    Chop:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Do you wanna test your Roshambo skills against a real player?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"Today is not my day. I should get some rest.\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    Molly:{\r\n        starts: [\"Hey $PLAYERNAME. Glad you are here.\",\r\n                 \"There's a lot of noise inside. The tribe members you know.\",\r\n                 \"They are everywhere. We need to get rid of them.\",\r\n                 \"First you need to defeat all of the tribe members. Only then you can battle their boss. I hope you knew this.\",\r\n                 \"All the best! May the luck be with you.\"],\r\n        follows: [\"Not great. I hope you defeat the tribe soon.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Jordan:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"You won't be able to defeat me. Do you have the guts to battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice\"],\r\n        battleLose:[\"You are great! Cheers!.\"],\r\n        battleWin: [\"You're aweful. You need to practice.\"],\r\n    },\r\n\r\n    Grindel:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Do you wanna test your Roshambo skills against a real player?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"Today is not my day. I should get some rest.\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    Tori:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Test your Roshambo skills against a real player. Battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"I need to study now!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"So lucky you are! So lucky you are!\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    Ghissu:{\r\n        starts: [\"Hey $PLAYERNAME! Whatsup!\", \r\n                 \"No! still 4th revision remaining. BTW, what are you doing here?\", \r\n                 \"Yeah, they play all sorts of horrible music here, and particularly during daytime.\",\r\n                 \"In the gameroom, first floor.\",\r\n                 \"Hopefully your Roshambo is better than your sense of humour.\"\r\n                ],\r\n        follows: [\"Hey! Get lost now. I have to study.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Razor:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey! Stop disturbing me! I watching something important.\",\r\n                    \"Don't teach me the rules. I make the rules here.\",\r\n                    \"Stop day dreaming you idiot. I challenge you for a Roshambo battle.\",\r\n                    \"You won't dare to speak a word against the tribe after this.\"],\r\n        battleAcceptNeverDefeated:[\"Again? Save your self respect!\"],\r\n        battleDeclineDefeated:[\"You don't have friends? Leave me alone now!\"],\r\n        battleDecline:[\"You need to level up, loser!\"],\r\n        battleLose:[\"You got lucky. Nevermind, this town still belongs to us!\"],\r\n        battleWin: [\"You were a total waste of time.\", \"Now shut up and FO!\"],\r\n    },\r\n\r\n    Prick:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey kid! Do you wanna battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"So lucky you are! So lucky you are!\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    LT:{\r\n        starts: [\"Hey you! Don't disturb Razor. He doesn't like interruptions in between a movie.\"],\r\n        follows: [\"Get lost from here.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Rose:{\r\n        starts: [\"Hey! Please help me get my sparkle back. Snyder and his friend are not letting her go.\",\r\n                 \"Yes.\",\r\n                 \"Thanks!\"],\r\n        follows: [\"She' still with them! :(\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Snyder:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey you! stop disturbing us.\",\r\n                    \"This isn't your dog, so stop bothering. Stay away from us, otherwise we'll teach you a lesson.\",\r\n                    \"Hahahahaha. You can't touch even him!\",\r\n                    \"Really? Challenge accepted!\",\r\n                    \"If you lose, you stay away from us!\"],\r\n        battleAcceptNeverDefeated:[\"Again? Save your self respect!\"],\r\n        battleDeclineDefeated:[\"We don't have time for you now.\"],\r\n        battleDecline:[\"You need to level up, loser!\"],\r\n        battleLose:[\"You got lucky. Nevermind, this town still belongs to us!\"],\r\n        battleWin: [\"You were a total waste of time.\", \"Now get lost!\"],\r\n    },\r\n\r\n    Kaloo:{\r\n        starts: [\"Meoww...\"],\r\n        follows: [\"....Meow.....Fuck off.....Meow...\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Goku:{\r\n        starts: [\"Meoww...Meoww...\"],\r\n        follows: [\"Grhhhhhh.....\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Misty:{\r\n        starts: [\"Meoww...Meoww...\"],\r\n        follows: [\"Grhhhhhh.....\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Trigger:{\r\n        starts: [\"Meoww....You'll die...Meoww....\"],\r\n        follows: [\"Grhhhhhh.....Step aside.....\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Max:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey! Do you wanna battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"So lucky you are! So lucky you are!\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    \r\n\r\n    Maty:{\r\n        starts: [\"Hey $PLAYERNAME! Long time!\", \r\n                 \"I'm great! Never seen you on this side of town before?\", \r\n                 \"You're living dangerously. Btw, you can find one of the tribe members near the hammock by the pool.\",\r\n                 \"Yeah. Before he creates more havoc near the hammock lol. All the best\"],\r\n        follows: [\"Hey $PLAYERNAME. I hope you defeat the boss.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n    \r\n    Damon:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Do you wanna test your Roshambo skills against a real player?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"Today is not my day. I should get some rest.\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    Tegan:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey kid! I heard you are looking for the tribe boss.\", \r\n                    \"Me? Why?\",\r\n                    \"Keep dreaming kid. I challenge you for a battle. Let me bring you down to earth haha.\"],\r\n        battleAcceptNeverDefeated:[\"Again? Save your self respect unless you want to go underground lol.\"],\r\n        battleDeclineDefeated:[\"I don't have time for you!\"],\r\n        battleDecline:[\"You need to level up, loser!\"],\r\n        battleLose:[\"You got lucky. Nevermind, this town still belongs to us!\"],\r\n        battleWin: [\"You were a total waste of time.\", \"Now shut up and FO!\"],\r\n    },\r\n\r\n\r\n    Hunt:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Do you wanna test your Roshambo skills against a real player?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"Today is not my day. I should get some rest.\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    Fattu:{\r\n        starts: [\"Dude! Stop here. Don't go inside.\",\r\n                 \"She is. Thats why.\",\r\n                 \"You will definitely die, sexist.\"],\r\n        follows:[\"You are still alive!\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Rock:{\r\n        starts: [\"Meoww....You'll die...Meoww....\"],\r\n        follows: [\"Meoww...Hail Markov...Meoww...\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Paper:{\r\n        starts: [\"Meoww....You'll die...Meoww....\"],\r\n        follows: [\"Meoww..Markov greater Bayesian....Meoww...\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Scissors:{\r\n        starts: [\"Meoww....You'll die...Meoww....\"],\r\n        follows: [\"Meoww...Hail Markov...Meoww...\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Beast:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey! What are you doing here?\",\r\n                    \"Is there anyone else over here wearing a semi-naked vamp costume? I'm the boss and my name is Beast.\",\r\n                    \"I know. There can be no other reason for you to be here.\",\r\n                    \"Oh you like cats? The black one is Rock, the white one is Paper and the ginger one is Scissors. Stay away from them.\",\r\n                    \"I thought you were here for the battle. Just being professional.\"],\r\n        battleAcceptNeverDefeated:[\"I hope you are prepared this time.\"],\r\n        battleDeclineDefeated:[\"Neh, not now. See you at the championships!\"],\r\n        battleDecline:[\"You need to defeat all my tribe members first! Plus you need to be on Level 5.\"],\r\n        battleLose:[\"You defeated me all fair and square. Kudos to you.\",\r\n                     \"No, you are a deserving winner. And I'm not a sore loser.\",\r\n                     \"Now I feel much better lol.\",\r\n                     \"You cannot just reset the rules! You need to defeat me in the Roshambo championship. You thought you could be the tribe boss on the basis of a friendly battle?\",\r\n                     \"Next year. He needs to start coding for the that.\",\r\n                     \"The developer of this game.\",\r\n                     \"Ask the developer.\"],\r\n        battleWin: [\"You really thought you got a chance here lol.\"],\r\n    },\r\n    \r\n}","import * as ActionTypes from './ActionTypes';\r\nimport { TOTAL_MOVEMENT_SIZE, LEFT, RIGHT, UP, DOWN, TILE_SIZE,\r\n        PASSIBLE_INDEX, PORTAL, ROCK, PAPER, SCISSORS, SAVED_GAME, PORTAL_LEAVE, PORTAL_ENTER, BATTLE_ELIGIBILITY_THRESHOLD, PICKABLES, BATTLE_NUM_GANG_MEMBERS, BOSS, GANG_MEMBER, NON_GANG_MEMBER, DRIP_SOUND, LASER_SOUND, PICK_SOUND} from '../helpers/constants';\r\nimport { tileToMapCoordinates, mapToViewport, mapCoordinatesToTiles, customSetTimeout, clearIntervals, playSoundEffect } from '../helpers/funcs';\r\nimport { PLAYERDIALOGS, NPCDIALOGS } from '../data/script';\r\n\r\n\r\nconst observeMapBoundaries = (newpos, mapwidth, mapheight) => {\r\n    return (newpos[0]>=0 && newpos[0]<=mapwidth - TILE_SIZE) &&\r\n            (newpos[1]>=0 && newpos[1]<=mapheight - TILE_SIZE);\r\n}\r\n\r\nconst observeImpassible = (tiles, newpos) => {\r\n    const tile = mapCoordinatesToTiles(newpos, TILE_SIZE);\r\n    const row = tile[0], col = tile[1];\r\n    return (Math.abs(tiles[row][col]) <= PASSIBLE_INDEX);\r\n}\r\n\r\nconst observeCamera = (position, direction, mapstart, camera) => {\r\n    const viewportPos = mapToViewport(position, mapstart);\r\n    if(direction===LEFT || direction===RIGHT)\r\n        return (viewportPos[0] >= camera[0][0]) && (viewportPos[0] <= camera[0][1])\r\n    else if(direction===UP || direction===DOWN)\r\n        return (viewportPos[1] >= camera[1][0]) && (viewportPos[1] <= camera[1][1])\r\n}\r\n\r\nconst observeIdleNPC = (newpos, npcList) => {\r\n    const npclist = npcList.filter( npc => {\r\n        if(!npc.isAnimating)\r\n            return (newpos[0] === npc.position[0]) && (newpos[1] === npc.position[1]);\r\n        else\r\n            return false;\r\n    });\r\n\r\n    return npclist;\r\n}\r\n\r\nconst observeAnimatingNPC = (newpos, npcList) => {\r\n    const npclist = npcList.filter( npc => {\r\n        if(npc.isAnimating)\r\n            return (newpos[0] === npc.nextPosition[0]) && (newpos[1] === npc.nextPosition[1]);\r\n        else \r\n            return false;\r\n    });\r\n\r\n    return npclist;\r\n}\r\n\r\nconst observeIdlePlayer = (newpos, player) => {\r\n    if(!player.isAnimating) \r\n        return (newpos[0] === player.position[0]) && (newpos[1] === player.position[1]);\r\n    else\r\n        return false;\r\n}\r\n\r\nconst observePlayer = (newpos, player) => {\r\n    if(!player.isAnimating) \r\n        return !((newpos[0] === player.position[0]) && (newpos[1] === player.position[1]));\r\n    else\r\n        return !((newpos[0] === player.nextPosition[0]) && (newpos[1] === player.nextPosition[1]));\r\n}\r\n\r\nconst mapScrollable = (direction, mapstart, mapend, viewportWidth, viewportHeight) => {\r\n    switch(direction) {\r\n        case LEFT:\r\n            return (mapstart[0] < 0);\r\n        case UP:\r\n            return (mapstart[1] < 0);\r\n        case RIGHT:\r\n            return (mapend[0] > viewportWidth);\r\n        case DOWN:\r\n            return (mapend[1] > viewportHeight);\r\n        default:\r\n            return false;\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst getNewPostion = (oldpos, direction, movementSize) => {\r\n    switch(direction) {\r\n        case LEFT:\r\n            return [oldpos[0]-movementSize, oldpos[1]];\r\n        case RIGHT:\r\n            return [oldpos[0]+movementSize, oldpos[1]];\r\n        case UP:\r\n            return [oldpos[0], oldpos[1] - movementSize];\r\n        case DOWN:\r\n            return [oldpos[0], oldpos[1] + movementSize];\r\n        default:\r\n            window.alert(\"Something went wrong! Please relaunch the game.\");\r\n    }\r\n}\r\n\r\nconst getNewOrigin = (start, direction, movementSize) => {\r\n    switch(direction) {\r\n        case LEFT:\r\n            return [start[0]+movementSize, start[1]];\r\n        case RIGHT:\r\n            return [start[0]-movementSize, start[1]];\r\n        case UP:\r\n            return [start[0], start[1] + movementSize];\r\n        case DOWN:\r\n            return [start[0], start[1] - movementSize];\r\n        default:\r\n                window.alert(\"Something went wrong! Please relaunch the game.\");\r\n    }\r\n}\r\n\r\n\r\nconst getNPC = (npclist, npcid) => {\r\n    return(npclist.filter(npc => npc.id===npcid)[0]);\r\n}\r\n\r\n\r\nexport const UpdatePlayerPosition = (keyCode) => (dispatch, getState) => {\r\n    const player = getState().player;\r\n    const VIEWPORT_WIDTH = getState().viewport.viewportDims[0], VIEWPORT_HEIGHT = getState().viewport.viewportDims[1];\r\n    let oldpos = player.position, newpos = [];\r\n    let mapstart = getState().viewport.start, mapend = getState().viewport.end;\r\n    const map = getState().map;\r\n    let direction, steps = player.skin.walkSpriteCount, movemap=false;\r\n    const frameMovementSize = TOTAL_MOVEMENT_SIZE/steps;\r\n\r\n    if(keyCode === 37) {\r\n        direction = LEFT;\r\n        newpos = getNewPostion(oldpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    } else if(keyCode === 39) {\r\n        direction = RIGHT;\r\n        newpos = getNewPostion(oldpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    } else if(keyCode === 38) {\r\n        direction = UP;\r\n        newpos = getNewPostion(oldpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    } else if(keyCode === 40) {\r\n        direction = DOWN;\r\n        newpos = getNewPostion(oldpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    }\r\n\r\n    if(player.direction!==direction)\r\n        dispatch(UpdatePlayerDirectionAction(direction));\r\n\r\n    if(observeMapBoundaries(newpos, map.width, map.height) && observeImpassible(getState().map.tiles, newpos)) {\r\n        const idlenpc = observeIdleNPC(newpos, getState().npc.list);\r\n        const animatingnpc = observeAnimatingNPC(newpos, getState().npc.list);\r\n        if(idlenpc.length === 0 && animatingnpc.length===0) {\r\n            dispatch(UpdatePlayerAnimationAction(true, newpos));\r\n                if(observeCamera(oldpos, direction, mapstart, getState().viewport.camera) && mapScrollable(direction, mapstart, mapend, VIEWPORT_WIDTH, VIEWPORT_HEIGHT)) {\r\n                    movemap = true;\r\n                    requestAnimationFrame(animatePlayer);\r\n                } else {\r\n                    movemap=false;\r\n                    requestAnimationFrame(animatePlayer);\r\n                }\r\n        } else if(idlenpc.length > 0) {\r\n            if(player.nearbyNPC!==idlenpc[0].id) {\r\n                dispatch(UpdateNearbyNPCAction(idlenpc[0].id));\r\n                if(idlenpc[0].battle && !idlenpc[0].battleFlag) {\r\n                    dispatch(ForceBattleConversation(getState().player, idlenpc[0]));\r\n                } else if(!idlenpc[0].talkFlag) {\r\n                    dispatch(ForceNonBattleConversation(getState().player, idlenpc[0]));\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        const idlenpc = observeIdleNPC(newpos, getState().npc.list);\r\n        if(idlenpc.length > 0) {\r\n            if(player.nearbyNPC!==idlenpc[0].id) {\r\n                dispatch(UpdateNearbyNPCAction(idlenpc[0].id));\r\n                if(idlenpc[0].battle && !idlenpc[0].battleFlag) {\r\n                    dispatch(ForceBattleConversation(getState().player, idlenpc[0]));\r\n                } else if(!idlenpc[0].talkFlag) {\r\n                    dispatch(ForceNonBattleConversation(getState().player, idlenpc[0]));\r\n                }\r\n            }\r\n        }else {\r\n            if(player.nearbyNPC!==null) {\r\n                dispatch(UpdateNearbyNPCAction());\r\n            }\r\n        }\r\n    }\r\n\r\n    function animatePlayer() {\r\n        if(steps === 0) {\r\n            dispatch(UpdatePlayerAnimationAction(false));\r\n            //console.log(mapCoordinatesToTiles(getState().player.position, TILE_SIZE));\r\n            const nearByNPC = checkNearbyIdleNPC(getState().player.position, getState().player.direction, getState().npc.list);\r\n            if(nearByNPC.length) {\r\n                dispatch(UpdateNearbyNPCAction(nearByNPC[0].id));\r\n                if(nearByNPC[0].battle && !nearByNPC[0].battleFlag) {\r\n                    dispatch(ForceBattleConversation(getState().player, nearByNPC[0]));\r\n                } else if(!nearByNPC[0].talkFlag) {\r\n                    dispatch(ForceNonBattleConversation(getState().player, nearByNPC[0]));\r\n                }\r\n            } else if(player.nearbyNPC!==null) {\r\n                dispatch(UpdateNearbyNPCAction());\r\n            }\r\n\r\n            const objects = getObjectForPickup(getState().player.position, getState().gameobjects);\r\n            if(objects.length) {\r\n                dispatch(UpdateNearbyGameObjAction(objects[0].id)); \r\n            } else if(player.nearbyGameObj!==null) {\r\n                dispatch(UpdateNearbyGameObjAction());\r\n            }\r\n\r\n            const portals = getPortal(getState().player.position, getState().gameobjects);\r\n            if(portals.length) {\r\n                dispatch(UpdateNearbyPortalAction(portals[0]));\r\n            } else if(player.nearbyPortal!==null) {\r\n                dispatch(UpdateNearbyPortalAction());\r\n            }\r\n            return;\r\n        } \r\n        newpos = getNewPostion(oldpos, direction, frameMovementSize);\r\n        dispatch(UpdatePlayerPositionAction(newpos));\r\n        oldpos = newpos;\r\n        if(movemap) {\r\n            mapstart = getNewOrigin(mapstart, direction, frameMovementSize);\r\n            dispatch(UpdateOriginAction(mapstart));\r\n        }\r\n        steps--;\r\n        setTimeout(function() {requestAnimationFrame(animatePlayer)}, player.frameInterval);\r\n    }\r\n}\r\n\r\nconst getPositionEquality = (pos1, pos2) => (pos1[0]===pos2[0] && pos1[1]===pos2[1])\r\n\r\nconst getObjectForPickup = (position, gameobjects) => {\r\n    return(gameobjects.filter(gameobject => PICKABLES.includes(gameobject.type.type)  && getPositionEquality(position, gameobject.position)))\r\n}\r\n\r\nexport const PickupGameObject = () => (dispatch, getState) => {\r\n    const player = getState().player;\r\n    const gameobject = player.nearbyGameObj!==null? getState().gameobjects.filter( gobj => gobj.id === player.nearbyGameObj ): null;\r\n    if(gameobject!==null) {\r\n        playSoundEffect(PICK_SOUND);\r\n        dispatch(AddObjecttoInventory(gameobject[0]));\r\n        dispatch(UpdateNearbyGameObjAction()); \r\n    }\r\n}\r\n\r\nconst getOppositeDirection = (direction) => {\r\n    switch(direction) {\r\n        case UP: return DOWN;\r\n        case RIGHT: return LEFT;\r\n        case DOWN: return UP;\r\n        case LEFT: return RIGHT;\r\n        default:\r\n            window.alert(\"Something went wrong! Please relaunch the game.\");\r\n    }\r\n}\r\n\r\nconst checkNearbyIdlePlayer = (npcpos, direction, player) => {\r\n    const nextPosition = getNewPostion(npcpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    return observeIdlePlayer(nextPosition, player);\r\n}\r\n\r\nconst checkNearbyIdleNPC = (playerpos, direction, npcList) => {\r\n    const nextPosition = getNewPostion(playerpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    const nearByNPC = observeIdleNPC(nextPosition, npcList);\r\n    return nearByNPC;\r\n}\r\n\r\nconst checkBattleEligibilty = (playerlevel, npclevel) => {\r\n    return(npclevel - playerlevel <= BATTLE_ELIGIBILITY_THRESHOLD);\r\n}\r\n\r\nconst checkBossBattleEligibilty = (defeatedGangMembersList) => {\r\n    return(Object.keys(defeatedGangMembersList).length===BATTLE_NUM_GANG_MEMBERS);\r\n}\r\n\r\nconst ForceBattleConversation = (player, npc) => (dispatch, getState) => {\r\n    \r\n    const VIEWPORT_HEIGHT = getState().viewport.viewportDims[1];\r\n\r\n    if(!checkBattleEligibilty(player.battle.level, npc.level))\r\n        return;\r\n\r\n    if(npc.battlerType===BOSS) {\r\n        if(!checkBossBattleEligibilty(player.battle.defeatedGangMembers)) \r\n            return;\r\n    }\r\n   \r\n    const oppdirection = getOppositeDirection(player.direction);\r\n    if(npc.direction!==oppdirection) {\r\n        dispatch(UpdateNPCDirectionAction(npc.id, oppdirection));\r\n    }\r\n\r\n    dispatch(SetConversationStatus(npc.id, \r\n        {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n        {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAccept.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n        mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", true));\r\n}\r\n\r\nconst ForceNonBattleConversation = (player, npc) => (dispatch, getState) => {\r\n   \r\n    const VIEWPORT_HEIGHT = getState().viewport.viewportDims[1];\r\n    const oppdirection = getOppositeDirection(player.direction);\r\n\r\n    if(npc.direction!==oppdirection) {\r\n        dispatch(UpdateNPCDirectionAction(npc.id, oppdirection));\r\n    }\r\n    dispatch(SetConversationStatus(npc.id, \r\n        {name: npc.name, dialogs: NPCDIALOGS[npc.name].starts.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n        {name: player.name, dialogs: PLAYERDIALOGS[npc.name].follows.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))},\r\n        mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n}\r\n\r\nexport const InitiateConversation = () => (dispatch, getState) => {\r\n    const player = getState().player;\r\n    const npc = player.nearbyNPC!==null? getNPC(getState().npc.list, player.nearbyNPC):null;\r\n    const VIEWPORT_HEIGHT = getState().viewport.viewportDims[1];\r\n    if(npc && !npc.isAnimating) {\r\n        const oppdirection = getOppositeDirection(player.direction);\r\n        if(npc.direction!==oppdirection) {\r\n            dispatch(UpdateNPCDirectionAction(npc.id, oppdirection));\r\n        }\r\n        if(npc.battle) {\r\n            if(checkBattleEligibilty(player.battle.level, npc.level)) {\r\n                if(npc.battlerType===BOSS) {\r\n                    if(checkBossBattleEligibilty(player.battle.defeatedGangMembers)) {\r\n                        dispatch(SetConversationStatus(npc.id, \r\n                            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleAcceptNeverDefeated.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", true));\r\n                    } else {\r\n                        dispatch(SetConversationStatus(npc.id, \r\n                            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleDecline.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n                    }\r\n                \r\n                } else {\r\n                    if(npc.defeatedCount > 0) {\r\n                        dispatch(SetConversationStatus(npc.id, \r\n                            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            {name: npc.name, dialogs:  NPCDIALOGS[npc.name].battleDeclineDefeated.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n                    } else {\r\n                        dispatch(SetConversationStatus(npc.id, \r\n                            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleAcceptNeverDefeated.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", true));\r\n                    }\r\n                }\r\n            } else {\r\n                dispatch(SetConversationStatus(npc.id, \r\n                    {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                    {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleDecline.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                    mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n            }\r\n        } else {\r\n            dispatch(SetConversationStatus(npc.id, \r\n                                        {name: player.name, dialogs: npc.name in PLAYERDIALOGS? PLAYERDIALOGS[npc.name].starts.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name)): [\"Hey! Whatsup!\"]}, \r\n                                        {name: npc.name, dialogs: npc.name in NPCDIALOGS? NPCDIALOGS[npc.name].follows.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name)): [\"Ehh! Leave me alone!\"]}, \r\n                                        mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const UpdateConversation = () => (dispatch, getState) => {\r\n    const dialog = getState().dialog;\r\n    if(dialog.speakerIdx===0) {\r\n        dispatch(NextDialogAction());\r\n        return;\r\n    }\r\n\r\n    let nextcontentIdx = dialog.dialogIdx + 1;\r\n    if(nextcontentIdx<dialog.person1.dialogs.length) {\r\n        dispatch(NextDialogAction());\r\n    } else {\r\n        if(dialog.battleConversation) {\r\n            dispatch(StartBattle(getState().player, getNPC(getState().npc.list, dialog.npcId)));\r\n        }\r\n        dispatch(ResetConversationStatus(dialog.npcId));\r\n    }\r\n}\r\n\r\nconst getNewDirection = (oldpos, newpos, oldirection) => {\r\n    if(oldpos[0] === newpos[0]) {\r\n        if(oldpos[1] > newpos[1])\r\n            return UP;\r\n        else if(oldpos[1] < newpos[1])\r\n            return DOWN;\r\n        else return oldirection;\r\n    } else if(oldpos[1] === newpos[1]) {\r\n        if(oldpos[0] > newpos[0])\r\n            return LEFT;\r\n        else if(oldpos[0] < newpos[0])\r\n            return RIGHT;\r\n    } else return oldirection;\r\n}\r\n\r\nexport const UpdateNPCPosition = (npcId) => (dispatch, getState) => {\r\n    let npc = getNPC(getState().npc.list, npcId);\r\n    \r\n    if(npc.stationary ||  npc.isAnimating || npc.interacting || npc.inBattle)\r\n        return;\r\n    \r\n    if(npc.isWaiting) {\r\n        if((performance.now() - npc.lastUpdated) < npc.waitInterval) {\r\n            return;\r\n        }\r\n        else \r\n            dispatch(ResetNPCWaiting(npcId));\r\n    }\r\n        \r\n    let curdirection = npc.direction;\r\n    if(npc.pathArr.length < 2) {\r\n        if(curdirection!==npc.defaultDirection)\r\n            dispatch(UpdateNPCDirectionAction(npcId, npc.defaultDirection));\r\n        return;\r\n    } \r\n\r\n    let steps = npc.skin.walkSpriteCount, oldpos = npc.position;\r\n    const frameMovementSize = TOTAL_MOVEMENT_SIZE/steps;\r\n    let newpos = tileToMapCoordinates(npc.pathArr[npc.pathIdx + npc.pathDir], TILE_SIZE);\r\n    let newdirection = getNewDirection(oldpos, newpos, curdirection);\r\n    if(curdirection!==newdirection) {\r\n        dispatch(UpdateNPCDirectionAction(npcId, newdirection));\r\n    }\r\n\r\n    const map = getState().map;\r\n    \r\n    if(observeMapBoundaries(newpos, map.width, map.height)){\r\n\r\n        if(observePlayer(newpos, getState().player)) {\r\n            const idlenpc = observeIdleNPC(newpos, getState().npc.list);\r\n            const animatingnpc = observeAnimatingNPC(newpos, getState().npc.list);\r\n            if(idlenpc.length === 0 && animatingnpc.length===0) {\r\n                dispatch(UpdateNPCAnimationAction(npcId, true, newpos));\r\n                requestAnimationFrame(animateNPC)\r\n            }\r\n        } else {\r\n            if(getState().player.nearByNPC!==npc.id) {\r\n                if(getState().player.direction===getOppositeDirection(npc.direction)) {\r\n                    dispatch(UpdateNearbyNPCAction(npc.id));\r\n                    if(npc.battle && !npc.battleFlag) {\r\n                        dispatch(ForceBattleConversation(getState().player, npc));\r\n                    }else if(!npc.talkFlag) {\r\n                        dispatch(ForceNonBattleConversation(getState().player, npc));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function animateNPC() {\r\n        if(steps === 0) {\r\n            dispatch(UpdateNPCAnimationAction(npcId, false));\r\n            const player = getState().player;\r\n            let npc = getNPC(getState().npc.list, npcId);\r\n            if(checkNearbyIdlePlayer(npc.position, npc.direction, player)) {\r\n                if(player.direction===getOppositeDirection(npc.direction)) {\r\n                    dispatch(UpdateNearbyNPCAction(npc.id));\r\n                    if(npc.battle && !npc.battleFlag) {\r\n                        dispatch(ForceBattleConversation(getState().player, npc));\r\n                    }else if(!npc.talkFlag) {\r\n                        dispatch(ForceNonBattleConversation(getState().player, npc));\r\n                    }\r\n                }\r\n            } else if(player.nearbyNPC===npc.id) {\r\n                dispatch(UpdateNearbyNPCAction());\r\n            }\r\n            return;\r\n        } \r\n        newpos = getNewPostion(oldpos, newdirection, frameMovementSize);\r\n        dispatch(UpdateNPCPositionAction(npcId, newpos));\r\n        oldpos = newpos;\r\n        steps--;\r\n        customSetTimeout(function() {requestAnimationFrame(animateNPC)}, npc.frameInterval, npc.id);\r\n    }\r\n}\r\n\r\nconst getPortal = (position, gameobjects) => {\r\n    return(gameobjects.filter(gameobject => gameobject.type.type===PORTAL && getPositionEquality(position, gameobject.position)))\r\n}\r\n\r\nexport const CheckPortalAndEnter = () => (dispatch, getState) =>{\r\n    const player = getState().player;\r\n    const portal = player.nearbyPortal;\r\n    if(portal!==null) {\r\n        if(portal.type.name===PORTAL_ENTER) {\r\n    \r\n            dispatch(SaveStateInitAction());\r\n            clearIntervals();\r\n            \r\n            saveStateandAddMap();\r\n            \r\n                function saveStateandAddMap() { \r\n                    const npcList = getState().npc.list;\r\n                    const npcAnimating = npcList.filter( npc => npc.isAnimating);\r\n                    if(npcAnimating.length > 0) {\r\n                        setTimeout(saveStateandAddMap, 500);\r\n                    } else {\r\n                        dispatch(SaveStateAction(getState())); \r\n                        dispatch(AddMap(portal.target, true));\r\n                    }\r\n                }\r\n        } else if(portal.type.name===PORTAL_LEAVE) {\r\n            const cpyPrevStates = [...getState().statemanager.prevStates];\r\n            if(!cpyPrevStates.length)\r\n                return;\r\n\r\n            const oldState = cpyPrevStates.pop();\r\n            const currentMap = getState().map.name;\r\n            const currentGameobjects = getState().gameobjects.map( gameobject => {\r\n                return({\r\n                    ...gameobject,\r\n                    position: mapCoordinatesToTiles(gameobject.position, TILE_SIZE),});\r\n                });\r\n            const currentMapNPCBattleStatus = getState().npc.list.map( npc => {\r\n                return({ id: npc.id,\r\n                        battleFlag: npc.battleFlag,\r\n                        defeatedCount: npc.defeatedCount});\r\n                });\r\n            dispatch(SaveStateInitAction()); \r\n            clearIntervals();\r\n            checkandRestoreMap();\r\n                \r\n                function checkandRestoreMap() { \r\n                    const npcList = getState().npc.list;\r\n                    const npcAnimating = npcList.filter( npc => npc.isAnimating);\r\n                    if(npcAnimating.length > 0) {\r\n                        setTimeout(checkandRestoreMap, 500);\r\n                    } else {\r\n                        dispatch(LoadingMapAction());\r\n                        const mapBg = new Image();\r\n                        mapBg.onload = renderMap;\r\n                        mapBg.src = oldState.map.src;\r\n                        function renderMap(){\r\n                            dispatch(RestoreStateAction({map: currentMap, gameobjects: currentGameobjects, npc: currentMapNPCBattleStatus}, oldState, cpyPrevStates));\r\n                        }  \r\n                    }\r\n                }\r\n            }   \r\n    }\r\n}\r\n\r\nexport const SaveGameToDisk = () => (dispatch, getState) => {\r\n    \r\n    dispatch(SaveStateInitAction());\r\n    clearIntervals();\r\n    saveStateToLocalStorage();\r\n        \r\n    function saveStateToLocalStorage() { \r\n        const npcList = getState().npc.list;\r\n        const npcAnimating = npcList.filter( npc => npc.isAnimating);\r\n        if(npcAnimating.length > 0) {\r\n            setTimeout(saveStateToLocalStorage, 500);\r\n        } else {\r\n            try {\r\n                const serializedState = JSON.stringify(getState());\r\n                localStorage.setItem(SAVED_GAME, serializedState);\r\n                alert(\"Game saved successfully!\");\r\n              } catch (err) {\r\n                alert(\"Saving state failed! Try starting a new game.\");\r\n              } \r\n            dispatch(SaveStateEndAction());\r\n        }\r\n    }\r\n}\r\n\r\nexport const LoadGameFromDisk = () => (dispatch) => {\r\n    try {\r\n        const serializedState = localStorage.getItem(SAVED_GAME);\r\n    \r\n        if (serializedState === null) {\r\n          return undefined;\r\n        }\r\n    \r\n        const state =  JSON.parse(serializedState);\r\n        dispatch(LoadingMapAction());\r\n        const mapBg = new Image();\r\n        mapBg.onload = renderMap;\r\n        mapBg.src = state.map.src;\r\n        function renderMap(){\r\n            dispatch(RestoreStateFromDiskAction(state));\r\n        }  \r\n    \r\n      } catch (err) {\r\n            alert(\"Loading state failed. Start a new game!\");\r\n            return undefined;\r\n      }\r\n      return 1;\r\n}\r\n\r\nexport const AddMap = (level, secondary=false) => (dispatch, getState) => {\r\n    dispatch(LoadingMapAction());\r\n\r\n    const width = level.map.tiles[0].length*TILE_SIZE, height= level.map.tiles.length*TILE_SIZE;\r\n    const playerPosition = tileToMapCoordinates(level.player.position, TILE_SIZE);\r\n    const VIEWPORT_WIDTH = getState().viewport.viewportDims[0], VIEWPORT_HEIGHT = getState().viewport.viewportDims[1];\r\n    let start_x, start_y, end_x, end_y;\r\n    if(width <= VIEWPORT_WIDTH) {\r\n        start_x = VIEWPORT_WIDTH/2 - width/2;\r\n        end_x = start_x + width;\r\n    } else {\r\n        start_x = (VIEWPORT_WIDTH/2) - playerPosition[0] - TILE_SIZE;\r\n        start_x = start_x >=0? 0: start_x;\r\n        end_x = start_x + width;\r\n        if(end_x < VIEWPORT_WIDTH) {\r\n            end_x = VIEWPORT_WIDTH;\r\n            start_x = end_x - width;\r\n        }\r\n    }\r\n    if(height <= VIEWPORT_HEIGHT) {\r\n        start_y = VIEWPORT_HEIGHT/2 - height/2;\r\n        end_y = start_y + height;\r\n    } else {\r\n        start_y = (VIEWPORT_HEIGHT/2)-playerPosition[1] - TILE_SIZE;\r\n        start_y = start_y >=0? 0: start_y;\r\n        end_y = start_y + height\r\n        if(end_y < VIEWPORT_HEIGHT) {\r\n            end_y = VIEWPORT_HEIGHT;\r\n            start_y = end_y - height;\r\n        }\r\n    }\r\n    \r\n    let start = [ start_x, start_y ];\r\n    let end = [end_x, end_y];\r\n\r\n    let oldState = null;\r\n    if(secondary) {\r\n        const sm = getState().statemanager;\r\n        oldState = level.name in sm? sm[level.name]: null; \r\n    }\r\n\r\n    const mapBg = new Image();\r\n    mapBg.onload = renderMap;\r\n    mapBg.src = level.map.src;\r\n\r\n    function renderMap(){\r\n        dispatch(AddMapAction(level, width, height, playerPosition, start, end, oldState, secondary));\r\n    }\r\n}\r\n\r\n\r\nexport const SetPlayerInfoAction = (name, skinIdx) => {\r\n    return({\r\n        type: ActionTypes.SET_PLAYER_INFO,\r\n        payload : {\r\n            name,\r\n            skinIdx\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const StartNewJourneyAction = () => {\r\n    return({\r\n        type: ActionTypes.START_NEW_JOURNEY,\r\n    });\r\n}\r\n\r\n\r\nexport const InitViewportAction = (viewportDims) => {\r\n    const camera = [[(viewportDims[0]/2) - (TILE_SIZE*2), (viewportDims[0]/2) + (TILE_SIZE)], [(viewportDims[1]/2) - (TILE_SIZE*2), (viewportDims[1]/2) + (TILE_SIZE)]];\r\n    return({\r\n        type: ActionTypes.INIT_VIEWPORT_DIMS,\r\n        payload: {\r\n            viewportDims,\r\n            camera,\r\n        }\r\n    });\r\n}\r\n\r\n\r\nconst StartBattle = (player, npc) => {\r\n    return({\r\n        type: ActionTypes.START_BATTLE,\r\n        payload: {\r\n            player,\r\n            npc,\r\n        }\r\n    });\r\n} \r\n\r\nconst BattleGetRandomMove = (maxMove) => {\r\n    return (Math.floor(Math.random() * (maxMove+1)) % (maxMove+1));\r\n}\r\n\r\nconst BattleGetPredictedMoveIdx = (arr) => {\r\n    return(arr.reduce((maxIdx, currVal, currIdx, arr) => currVal > arr[maxIdx]? currIdx: maxIdx, 0));\r\n}\r\n\r\nconst BattleGetWinningMove = (move, maxMove) => {\r\n    switch(move) {\r\n        case ROCK: return PAPER;\r\n        case PAPER: return SCISSORS;\r\n        case SCISSORS: return ROCK;\r\n        default: return BattleGetRandomMove(maxMove);\r\n    }\r\n}\r\n\r\nconst BattleGetNextMove = (battlerType, markovMatrix, lastMove) => {\r\n    const maxMove = markovMatrix.length - 1;\r\n    let nextMove, predictedMoveIdx;\r\n    if(battlerType===NON_GANG_MEMBER ||  lastMove===null) {\r\n        nextMove = BattleGetRandomMove(maxMove);\r\n    } else {\r\n        predictedMoveIdx = BattleGetPredictedMoveIdx(markovMatrix[lastMove]);\r\n        if(markovMatrix[lastMove][predictedMoveIdx]===0) {\r\n            nextMove = BattleGetRandomMove(maxMove);\r\n        } else {\r\n            nextMove =  BattleGetWinningMove(predictedMoveIdx);\r\n        }\r\n    }\r\n    return nextMove;\r\n}\r\n\r\nconst BattleGetWinner = (playermove, npcmove) => {\r\n        if(playermove===ROCK) {\r\n            if(npcmove===SCISSORS) \r\n                return 1; //player won\r\n            else if(npcmove===PAPER)\r\n                return -1; //npc won\r\n            else \r\n                return 0 //draw\r\n        } else if(playermove===PAPER) {\r\n            if(npcmove===ROCK) \r\n                return 1; //player won\r\n            else if(npcmove===SCISSORS)\r\n                return -1; //npc won\r\n            else\r\n                return 0 //draw\r\n        } else if(playermove===SCISSORS) {\r\n            if(npcmove===PAPER)\r\n                return 1; //player won\r\n            else if(npcmove===ROCK)\r\n                return -1; //npc won\r\n            else\r\n                return 0 //draw\r\n        }\r\n}\r\n\r\nexport const BattleMoveIndexToStr = (move) => {\r\n    switch(move) {\r\n        case 0: return \"ROCK\";\r\n        case 1: return \"PAPER\";\r\n        case 2: return \"SCISSORS\";\r\n        default: return \"Undefined\";\r\n    }\r\n}\r\n\r\nconst BattleSummary = (playername, playermove, npcname, npcmove, winner) => {\r\n    const playerline = playername + \" chose \"+ BattleMoveIndexToStr(playermove) + \". \";\r\n    const npcline = npcname+ \" chose \"+ BattleMoveIndexToStr(npcmove)+\". \";\r\n    let winnerline; \r\n    if(winner===1) {\r\n        winnerline = playername + \" wins this round!\";\r\n    } else if(winner===-1) {\r\n        winnerline = npcname+ \" wins this round!\";\r\n    } else {\r\n        winnerline = \"Its a DRAW!\";\r\n    }\r\n    return(playerline+npcline+winnerline);\r\n}\r\n\r\nexport const BattleHandleMove = (playerMove) => (dispatch, getState) => {\r\n    \r\n    playSoundEffect(LASER_SOUND);\r\n    let battle = getState().battle;\r\n    const playerMarkovMatrix = battle.player.markovMatrix;\r\n    const playerLastMove = battle.player.lastMove;\r\n    const npcMove = BattleGetNextMove(battle.npc.battlerType, playerMarkovMatrix, playerLastMove);\r\n    const winner = BattleGetWinner(playerMove, npcMove);\r\n    const summary = BattleSummary(battle.player.name, playerMove, battle.npc.name, npcMove, winner);\r\n    dispatch(UpdateBattleStatsAction(playerMove, npcMove, winner, summary));\r\n\r\n    const finalWinner = CheckBattleWinner(getState().battle);\r\n    if(finalWinner!==0) {\r\n        battle = getState().battle;\r\n        let newexp = battle.player.exp + getPlayerNewExp(battle.player.score, battle.player.level, battle.npc.level, finalWinner);\r\n        let newlevel = getPlayerLevel(newexp);\r\n        setTimeout( function() { \r\n            dispatch(EndBattle(finalWinner, {newlevel, newexp, gangMember:finalWinner===1 && battle.npc.battlerType===GANG_MEMBER?battle.npc.name:null}, battle.npc.id));\r\n        }, 1200);\r\n    }\r\n}\r\n\r\nconst getPlayerNewExp = (score, playerLevel, npcLevel, winner) => {\r\n    const BASE_EXP = 5, LEVEL_MULTIPLIER = 10, WIN_BONUS=10;\r\n    if(winner===1)\r\n        return(BASE_EXP + score + Math.max((npcLevel - (playerLevel-1))*LEVEL_MULTIPLIER, LEVEL_MULTIPLIER) + WIN_BONUS);\r\n    else \r\n        return(BASE_EXP + score);\r\n}\r\n\r\nconst getPlayerLevel = (exp) => {\r\n    if(exp < 60) \r\n        return 1;\r\n    else if(exp < 180)\r\n        return 2;\r\n    else if(exp < 360)\r\n        return 3;\r\n    else if(exp < 540)\r\n        return 4;\r\n    else if(exp < 1000)\r\n        return 5;\r\n    else \r\n        return 6;\r\n}\r\n\r\nconst CheckBattleWinner = (battle) => {\r\n    if(battle.player.lives===0) {\r\n        return -1;\r\n    } else if(battle.npc.lives===0) {\r\n        return 1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nconst EndBattle = (battleWinner, updatedPlayerStats, npcId) => {\r\n    return({\r\n        type: ActionTypes.END_BATTLE,\r\n        payload: {\r\n            battleWinner,\r\n            player: updatedPlayerStats,\r\n            npcId,\r\n        }\r\n    });\r\n}\r\n\r\nexport const CloseBattleSequence = () => (dispatch, getState) => {\r\n    const npc = getNPC(getState().npc.list, getState().battle.npc.id), player = getState().player;\r\n    const VIEWPORT_HEIGHT=getState().viewport.viewportDims[1];\r\n    dispatch(CloseBattle());\r\n    \r\n    if(getState().battle.finalWinner===1) {\r\n        dispatch(SetConversationStatus(npc.id, \r\n            {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleLose.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleWin.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n    } else {\r\n        dispatch(SetConversationStatus(npc.id, \r\n            {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleWin.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleLose.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n    }\r\n    \r\n} \r\n\r\nconst CloseBattle = () => {\r\n    return({\r\n        type: ActionTypes.CLOSE_BATTLE,\r\n    });\r\n}\r\n\r\nexport const BattleEndIntro = () => {\r\n    return({\r\n        type: ActionTypes.END_BATTLE_INTRO,\r\n    });\r\n}\r\n\r\n\r\n\r\nconst UpdateBattleStatsAction = (playermove, npcmove, winner, summary) => {\r\n    return({\r\n        type: ActionTypes.SUBMIT_MOVES,\r\n        payload: {\r\n            playermove,\r\n            npcmove,\r\n            winner,\r\n            summary,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdatePlayerAnimationAction = (isAnimating, newpos = []) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_PLAYER_ANIMATION,\r\n        payload: {\r\n            isAnimating,\r\n            newpos,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdateNPCAnimationAction = (id, isAnimating, newpos = []) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_NPC_ANIMATION,\r\n        payload: {\r\n            id,\r\n            isAnimating,\r\n            newpos,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdatePlayerPositionAction = (position) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_PLAYER_POSITION,\r\n        payload: {\r\n            position,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdateNPCPositionAction = (npcId, position) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_NPC_POSITION,\r\n        payload: {\r\n            id: npcId,\r\n            position,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdatePlayerDirectionAction = (direction) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_PLAYER_DIRECTION,\r\n        payload: {\r\n            direction,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdateNearbyNPCAction = (npcId=null) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_NEARBY_NPC,\r\n        payload: {\r\n            npcId: npcId,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdateNearbyGameObjAction = (gameobjId=null) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_NEARBY_GAMEOBJ,\r\n        payload: {\r\n            id: gameobjId,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdateNearbyPortalAction = (portal=null) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_NEARBY_PORTAL,\r\n        payload: {\r\n           portal\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdateNPCDirectionAction = (npcId, direction) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_NPC_DIRECTION,\r\n        payload: {\r\n            id: npcId,\r\n            direction,\r\n        }\r\n    });\r\n}\r\n\r\nconst ResetNPCWaiting = (npcId) => {\r\n    return({\r\n        type: ActionTypes.RESET_NPC_WAITING,\r\n        payload: {\r\n            id: npcId,\r\n        }\r\n    });\r\n}\r\n\r\nexport const UpdateOriginAction = (origin) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_MAP_ORIGIN,\r\n        payload: {\r\n            origin\r\n        },\r\n    });\r\n}\r\n\r\n\r\nconst SetConversationStatus = (npcId, person1, person2, position, battleConversation) => {\r\n    playSoundEffect(DRIP_SOUND);\r\n    return({\r\n        type: ActionTypes.SET_DIALOG_STATUS,\r\n        payload: {\r\n            person1,\r\n            person2,\r\n            npcId,\r\n            position,\r\n            battleConversation,\r\n        }\r\n    });\r\n}\r\n\r\nconst ResetConversationStatus = (npcId) => {\r\n    return({\r\n        type: ActionTypes.RESET_DIALOG_STATUS,\r\n        payload: {\r\n            npcId,\r\n        }\r\n    });\r\n}\r\n\r\nconst NextDialogAction = () => {\r\n    playSoundEffect(DRIP_SOUND);\r\n    return({\r\n        type: ActionTypes.NEXT_DIALOG,\r\n    })\r\n}\r\n\r\nexport const ToggleInventory = () => {\r\n    playSoundEffect(PICK_SOUND);\r\n    return({\r\n        type: ActionTypes.TOGGLE_INVENTORY_DISPLAY,\r\n    })\r\n}\r\n\r\nconst AddObjecttoInventory = (object) => {\r\n    return({\r\n        type: ActionTypes.ADD_OBJECT_TO_INVENTORY,\r\n        payload: {\r\n            object,\r\n        }\r\n    });\r\n}\r\n\r\n\r\nconst SaveStateInitAction = () => {\r\n    return({\r\n        type: ActionTypes.SAVE_STATE_INITIATED,\r\n    })\r\n}\r\n\r\nconst SaveStateAction = (state) => {\r\n    return({\r\n        type: ActionTypes.SAVE_STATE,\r\n        payload: {\r\n            state,\r\n        }\r\n    })\r\n}\r\n\r\nconst SaveStateEndAction = () => {\r\n    return({\r\n        type: ActionTypes.SAVE_STATE_END,\r\n    })\r\n}\r\n\r\n\r\nconst RestoreStateAction = (currentMapInfo, state, prevStates) => {\r\n    return({\r\n        type: ActionTypes.RESTORE_STATE,\r\n        payload: {\r\n            mapinfo: currentMapInfo,\r\n            state,\r\n            prevStates,\r\n        }\r\n    })\r\n}\r\n\r\nconst RestoreStateFromDiskAction = (state) => {\r\n    return({\r\n        type: ActionTypes.RESTORE_STATE_FROM_DISK,\r\n        payload: {\r\n            state,\r\n        }\r\n    })\r\n}\r\n\r\nconst LoadingMapAction = () => {\r\n    return({\r\n        type: ActionTypes.MAP_LOADING,\r\n    });\r\n}\r\n\r\nconst getMergedNPCList = (base, diff) => {\r\n    let diffnpc = null;\r\n    return(base.map( npc => {\r\n                diffnpc = getNPC(diff, npc.id);\r\n                return({\r\n                    ...npc,\r\n                    battleFlag: diffnpc.battleFlag,\r\n                    defeatedCount: diffnpc.defeatedCount,\r\n                });\r\n            })\r\n    );\r\n}\r\n\r\nconst AddMapAction = (level, width, height ,playerPosition, vpstart, vpend, oldState, secondary) => { \r\n    return({\r\n        type: ActionTypes.ADD_MAP,\r\n        payload: {\r\n            secondary,\r\n            name: level.name,\r\n            tiles: level.map.tiles,\r\n            width,\r\n            height,\r\n            src: level.map.src,\r\n            audioSrc: level.map.audioSrc,\r\n            viewport: {\r\n                start: vpstart,\r\n                end: vpend,\r\n            },\r\n            player: {\r\n                ...level.player,\r\n                position: playerPosition,\r\n            },\r\n            npc: oldState? getMergedNPCList(level.npc, oldState.npc) : level.npc,\r\n            gameobjects: oldState? oldState.gameobjects: level.gameobjects.concat(level.portals),\r\n        },\r\n    });\r\n}","import React from 'react';\r\nimport { solidBorder, getFontSize } from '../helpers/funcs';\r\nimport { faCheckSquare, faWindowClose } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst bgStyle = (bgcolor, bordercolor) => {\r\n    return({\r\n        padding: '5px',\r\n        backgroundColor: bgcolor,\r\n        ...solidBorder(2, bordercolor, 5),\r\n    });\r\n}\r\n\r\nconst CustomModal = (props) => {\r\n    const style = {\r\n        position: 'absolute',\r\n        width: 600,\r\n        height: 250,\r\n        ...solidBorder(5, 'grey', 5), \r\n        left:'50%',\r\n        top:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        zIndex: 5,\r\n        backgroundColor:'whitesmoke',\r\n        display: props.show? \"flex\": \"none\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        fontFamily: 'gameboy',\r\n        fontSize: getFontSize(2.5),\r\n    };\r\n\r\n    return(\r\n        <div style={style}>\r\n            <p style={{color:'black'}}>Exit to Main Menu?</p>\r\n            <div style={{display:'flex', justifyContent:'space-between'}}>\r\n                <button style={{width:'230px',  fontFamily:'gameboy', fontSize: getFontSize(2.3), ...bgStyle('MediumSeaGreen', 'green'), margin:'10px'}} onClick={props.confirmLink}>\r\n                    Confirm <FontAwesomeIcon style={{color:\"white\"}} size=\"1x\" icon={faCheckSquare}/></button>\r\n                <button style={{width:'230px', fontFamily:'gameboy', fontSize: getFontSize(2.3), ...bgStyle('OrangeRed', 'red'), margin:'10px'}} onClick={props.cancelLink}>\r\n                    Cancel <FontAwesomeIcon style={{color:\"white\"}} size=\"1x\" icon={faWindowClose}/></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomModal;","import React, { Component } from 'react';\r\nimport { VALID_KEYCODES, ARROW_KEYCODES, SPACE_KEY, PICKUP_KEY, INVENTORY_KEY, TILE_SIZE, SAVE_KEY, ESC_KEY, BEEP_3_SOUND } from '../helpers/constants';\r\nimport { connect } from 'react-redux';\r\nimport { UpdatePlayerPosition, InitiateConversation, UpdateConversation, PickupGameObject, ToggleInventory, CheckPortalAndEnter } from '../redux/ActionCreators';\r\nimport { mapToViewport, playSoundEffect, getLevelColor } from '../helpers/funcs';\r\nimport CustomModal from './CustomModalComponent';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        player: state.player,\r\n    });\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return({\r\n        updatePlayerPosition: (keyCode) => { dispatch(UpdatePlayerPosition(keyCode)); },\r\n        initiateConversation: () => { dispatch(InitiateConversation()); },\r\n        updateConversation: () => { dispatch(UpdateConversation()); },\r\n        pickupObject: () => { dispatch(PickupGameObject()); },\r\n        toggleInventory: () => { dispatch(ToggleInventory()); },\r\n        checkPortalAndEnter: () => { dispatch(CheckPortalAndEnter()); },\r\n    });\r\n}\r\n\r\nconst PlayerSprite = (props) => {\r\n    \r\n    const position = mapToViewport(props.player.position, props.viewport.start);\r\n    const playerStyle = {\r\n        position: 'absolute',\r\n        width: props.player.skin.width,\r\n        height: props.player.skin.height, \r\n        backgroundImage: `url('${props.player.skin.src}/sprite.png')`,\r\n        left: isNaN(position[0] + TILE_SIZE/2 - props.player.skin.width/2) ? 0: position[0] + (TILE_SIZE/2 - props.player.skin.width/2),\r\n        top: isNaN(position[1] + TILE_SIZE/2 - props.player.skin.height/2) ? 0: position[1] + (TILE_SIZE/2 - props.player.skin.height/2),\r\n        backgroundPosition: `${props.player.walkIndex * props.player.skin.width}px ${props.player.spriteLocation * props.player.skin.height}px`,\r\n        zIndex: 2,\r\n    };\r\n\r\n    const playermarkerstyle = {\r\n        position: 'absolute',\r\n        width: 25,\r\n        height: 25, \r\n        left: position[0],\r\n        top:  position[1],\r\n        transform: 'translate(110%, -60%)',\r\n        display: !props.player.interacting? 'block': 'none',\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div id=\"player\" style={playerStyle} />\r\n            <div style={playermarkerstyle}>\r\n                <FontAwesomeIcon className=\"wind\" style={{color:getLevelColor(props.player.battle.level), position:'absolute', left:'50%', top:'50%'}} icon={faCaretDown} size=\"2x\"/>\r\n            </div>\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nclass Player extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.toggleExitModalState = this.toggleExitModalState.bind(this);\r\n        this.state = {\r\n            showExitModal: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n    }\r\n    \r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    toggleExitModalState() {\r\n        playSoundEffect(BEEP_3_SOUND)\r\n        this.setState({\r\n            showExitModal: !this.state.showExitModal,\r\n        })\r\n    }\r\n\r\n    handleKeyDown(event) {\r\n        if(this.props.player.isAnimating || this.props.player.frozen || this.props.player.inBattle)\r\n            return;\r\n        var keyCode = event.keyCode;\r\n        //console.log(keyCode);\r\n        if(VALID_KEYCODES.includes(keyCode)) {\r\n            //console.log(keyCode);\r\n            event.preventDefault();\r\n            event.stopImmediatePropagation();\r\n            if(ARROW_KEYCODES.includes(keyCode) && !this.props.player.interacting) {\r\n                this.props.updatePlayerPosition(keyCode);\r\n            } else if(SPACE_KEY.includes(keyCode)) {\r\n                if(!this.props.player.interacting)\r\n                    this.props.initiateConversation();\r\n                else\r\n                    this.props.updateConversation();\r\n            } else if(PICKUP_KEY.includes(keyCode) && !this.props.player.interacting) {\r\n                this.props.pickupObject();\r\n            } else if(INVENTORY_KEY.includes(keyCode)) {\r\n                this.props.toggleInventory();\r\n            } else if(SAVE_KEY.includes(keyCode) && !this.props.player.interacting) {\r\n                this.props.checkPortalAndEnter();\r\n            }  else if(ESC_KEY.includes(keyCode)) {\r\n                this.toggleExitModalState();\r\n            }\r\n        } \r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        return(\r\n            <div>\r\n                <PlayerSprite player={this.props.player} viewport={this.props.viewport}/>\r\n                <CustomModal show={this.state.showExitModal} confirmLink={this.props.handleBack} cancelLink={this.toggleExitModalState} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Player);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSkull, faExclamation, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { UpdateNPCPosition } from '../redux/ActionCreators';\r\nimport { TILE_SIZE, GANG_MEMBER, BOSS } from '../helpers/constants';\r\nimport { customSetInterval, intervalList, clearIntervals, getLevelColor, solidBorder } from '../helpers/funcs';\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        npc: state.npc,\r\n    });\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return({\r\n        updateNPCPosition: function(){ dispatch(UpdateNPCPosition(this.props.self.id));},\r\n    });\r\n}\r\n\r\nclass NPC extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.battlerMarkerIcon = faExclamation;\r\n        if(this.props.self.battle) {\r\n            if(this.props.self.battlerType===BOSS || this.props.self.battlerType===GANG_MEMBER)\r\n                this.battlerMarkerIcon = faSkull;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        customSetInterval(this.props.updateNPCPosition.bind(this), this.props.self.moveInterval, this.props.self.id);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(!this.props.frozen) {\r\n            if(!(\"_\"+this.props.self.id in intervalList)) {\r\n                customSetInterval(this.props.updateNPCPosition.bind(this), this.props.self.moveInterval, this.props.self.id);\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n\r\n        const npcStyle = {\r\n            position: 'absolute',\r\n            width: this.props.self.skin.width,\r\n            height: this.props.self.skin.height, \r\n            backgroundImage: `url('${this.props.self.skin.src}/sprite.png')`,\r\n            left: this.props.self.position[0] + ((TILE_SIZE/2) - (this.props.self.skin.width/2)),\r\n            top: this.props.self.position[1] + ((TILE_SIZE/2) - (this.props.self.skin.height/2)),\r\n            backgroundPosition: `${this.props.self.walkIndex * this.props.self.skin.width}px ${this.props.self.spriteLocation * this.props.self.skin.height}px`,\r\n        }\r\n\r\n        const battlemarkerstylebase = {\r\n            position: 'absolute',\r\n            width: 25,\r\n            height: 25, \r\n            left: this.props.self.position[0],\r\n            top: this.props.self.position[1],\r\n            transform: 'translate(100%, -100%)',\r\n            display: !this.props.self.interacting && this.props.self.battle && this.props.self.defeatedCount===0 ? 'block':'none',\r\n        }\r\n\r\n        const messagestylebase = {\r\n            position: 'absolute',\r\n            width: 25,\r\n            height: 25, \r\n            left: this.props.self.position[0],\r\n            top: this.props.self.position[1],\r\n            transform: 'translate(100%, -100%)',\r\n            display: !this.props.self.interacting && !this.props.self.talkFlag? 'block':'none',\r\n        }\r\n    \r\n        return(\r\n            <div>\r\n                <div id={`NPC${this.props.self.id}`} style={npcStyle}/>\r\n                <div className=\"blink\" style={battlemarkerstylebase}>\r\n                    <div style={{position:'relative', width:'100%', height:'100%', textAlign:'center',backgroundColor:getLevelColor(this.props.self.level), ...solidBorder(1,'black',5)}}><FontAwesomeIcon icon={this.battlerMarkerIcon}/></div>\r\n                </div>\r\n                <div className=\"blink\" style={messagestylebase}>\r\n                    <FontAwesomeIcon style={{color:\"white\",  position:'absolute', left:'50%', top:'50%', transform: 'translate(-50%, -50%)'}} size=\"lg\" icon={faEnvelope}/>\r\n                </div>\r\n            </div> \r\n        ); \r\n    }  \r\n}    \r\n\r\nclass NPCManager extends Component {\r\n\r\n    componentWillUnmount() {\r\n        clearIntervals();\r\n    }\r\n    \r\n    render() {\r\n        const NPCObj = this.props.npc.list.map( npc => <NPC self={npc}  key={npc.id} updateNPCPosition={this.props.updateNPCPosition} frozen={this.props.npc.frozen}/> );\r\n\r\n        return(\r\n            <ul id=\"NPCList\">\r\n                {NPCObj}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(NPCManager);","import React, { Component } from 'react';\r\nimport { TILE_SIZE } from '../helpers/constants';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        gameobjects: state.gameobjects,\r\n    });\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return({\r\n\r\n    });\r\n}\r\n\r\n    \r\nconst GameObject = (props) => {\r\n    const objStyle = {\r\n        position: 'absolute',\r\n        width: props.self.type.width,\r\n        height: props.self.type.height, \r\n        backgroundImage: `url('${props.self.type.src}')`,\r\n        left: props.self.position[0] + (TILE_SIZE/2 - props.self.type.width/2),\r\n        top: props.self.position[1] + (TILE_SIZE/2 - props.self.type.height/2),\r\n        backgroundPosition: `${props.self.type.srcpos[0]}px ${props.self.type.srcpos[1]}px`,\r\n        backgroundSize: 'contain',\r\n        transform: `rotate(${props.self.rotate}deg)`\r\n    }\r\n\r\n    return(\r\n        <div id={`GObj${props.self.id}`} className={props.self.type.effects} style={objStyle}/>\r\n    ); \r\n}      \r\n\r\nclass GameObjectManager extends Component {\r\n    \r\n    render() {\r\n        const GameObj = this.props.gameobjects.map( gameobject => <GameObject self={gameobject}  key={gameobject.id} /> );\r\n\r\n        return(\r\n            <ul id=\"GameObjList\">\r\n                {GameObj}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(GameObjectManager);","import React, { Component } from 'react';\r\nimport NPCManager from './NPCManagerComponent';\r\nimport GameObjectManager from './GameObjectManagerComponent';\r\nimport ReactHowler  from 'react-howler';\r\n\r\n\r\n\r\nclass Map extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"map\" ref={map => this.map = map} style={{width: this.props.map.width,\r\n                        height: this.props.map.height, \r\n                        left: `${this.props.viewport.start[0]}px`,\r\n                        top: `${this.props.viewport.start[1]}px`,\r\n                        position: \"absolute\",\r\n                        backgroundImage: `url('${this.props.map.src}')`,\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundColor: 'black', }}>\r\n                <GameObjectManager />\r\n                <NPCManager />\r\n                <ReactHowler src={this.props.map.audioSrc} loop={true} volume={0.4} html5={false}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Map;","import { CHARACTER_SPRITES_BASE } from '../helpers/constants';\r\n\r\nconst _80 = 80;\r\nconst BASE_URL = CHARACTER_SPRITES_BASE;\r\n\r\nexport const SKINS = {\r\n    player_1: {  \r\n        src: BASE_URL + \"/player_1\",\r\n        width: 80,\r\n        height: 60,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    player_2: {\r\n        /*5*/\r\n        src: BASE_URL + \"/player_2\",\r\n        width: 80,\r\n        height: 60,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    prof: {\r\n        /*1*/\r\n        src: BASE_URL+\"/prof\",\r\n        width: _80,\r\n        height: _80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_1: {\r\n        /*2*/\r\n        src: BASE_URL + \"/friend_1\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_2:  {\r\n        /*3*/\r\n        src: BASE_URL+\"/friend_2\",\r\n        width: 70,\r\n        height: 70,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n    friend_3: {\r\n        /*4*/\r\n        src: BASE_URL + \"/friend_3\",\r\n        width: 70,\r\n        height: 70,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_4: {\r\n        /*4*/\r\n        src: BASE_URL + \"/friend_4\",\r\n        width: 70,\r\n        height: 70,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_5: {  \r\n        /*11*/\r\n       src: BASE_URL + \"/friend_5\",\r\n       width: 64,\r\n       height: 64,\r\n       UP: 1,\r\n       RIGHT: 2,\r\n       DOWN: 0,\r\n       LEFT: 3,\r\n       walkSpriteCount: 4,\r\n   },\r\n\r\n   friend_6: {  \r\n    /*11*/\r\n        src: BASE_URL + \"/friend_6\",\r\n        width: 68,\r\n        height: 72,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_7: {  \r\n    /*11*/\r\n        src: BASE_URL + \"/friend_7\",\r\n        width: 68,\r\n        height: 72,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_8: {  \r\n    /*11*/\r\n        src: BASE_URL + \"/friend_8\",\r\n        width: 64,\r\n        height: 91,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_9: {  \r\n        /*11*/\r\n            src: BASE_URL + \"/friend_9\",\r\n            width: 68,\r\n            height: 72,\r\n            UP: 1,\r\n            RIGHT: 2,\r\n            DOWN: 0,\r\n            LEFT: 3,\r\n            walkSpriteCount: 4,\r\n    },\r\n\r\n\r\n    kid_1: {   \r\n        /*6*/\r\n        src: BASE_URL + \"/kid_1\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    kid_2: {  \r\n         /*7*/\r\n        src: BASE_URL + \"/kid_2\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n    \r\n    kid_3: {  \r\n         /*8*/\r\n        src: BASE_URL + \"/kid_3\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    nurse: {  \r\n         /*9*/\r\n        src: BASE_URL + \"/nurse\",\r\n        width: 68,\r\n        height: 72,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    chef: {  \r\n        /*9*/\r\n       src: BASE_URL + \"/chef\",\r\n       width: 80,\r\n       height: 80,\r\n       UP: 1,\r\n       RIGHT: 2,\r\n       DOWN: 0,\r\n       LEFT: 3,\r\n       walkSpriteCount: 4,\r\n   },\r\n\r\n    bully_1: {  \r\n        /*10*/\r\n        src: BASE_URL + \"/bully_1\",\r\n        width: 48,\r\n        height: 60,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n   },\r\n\r\n   crush_1: {  \r\n         /*11*/\r\n        src: BASE_URL + \"/crush_1\",\r\n        width: 68,\r\n        height: 72,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    crush_2: {  \r\n        /*11*/\r\n       src: BASE_URL + \"/crush_2\",\r\n       width: 68,\r\n       height: 72,\r\n       UP: 1,\r\n       RIGHT: 2,\r\n       DOWN: 0,\r\n       LEFT: 3,\r\n       walkSpriteCount: 4,\r\n   },\r\n\r\n   crush_3: {  \r\n            /*11*/\r\n        src: BASE_URL + \"/crush_3\",\r\n        width: 80,\r\n        height: 80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    crush_4: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/crush_4\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    tribe_1: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/tribe_1\",\r\n        width: 80,\r\n        height: 80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    tribe_2: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/tribe_2\",\r\n        width: 80,\r\n        height: 80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    tribe_3: {  \r\n        /*10*/\r\n        src: BASE_URL + \"/tribe_3\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n        },\r\n\r\n    tribe_4: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/tribe_4\",\r\n        width: 80,\r\n        height: 80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    tribe_5: {  \r\n        /*11*/\r\n            src: BASE_URL + \"/tribe_5\",\r\n            width: 80,\r\n            height: 80,\r\n            UP: 1,\r\n            RIGHT: 2,\r\n            DOWN: 0,\r\n            LEFT: 3,\r\n            walkSpriteCount: 4,\r\n    },\r\n\r\n    boss: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/boss\",\r\n        width: 80,\r\n        height: 80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    whitepuppy: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/puppy_white\",\r\n        width: 40,\r\n        height: 40,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    brownpuppy: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/puppy_brown\",\r\n        width: 40,\r\n        height: 40,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    blackcat: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/cat_black\",\r\n        width: 40,\r\n        height: 40,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    whitecat: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/cat_white\",\r\n        width: 40,\r\n        height: 40,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    orangecat: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/cat_orange\",\r\n        width: 40,\r\n        height: 40,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    baby: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/baby\",\r\n        width: 30,\r\n        height: 45,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n}","import { HEALER, EATABLE, CURRENCY, PORTAL, PORTAL_ENTER, PORTAL_LEAVE, PROPS_PATH } from \"../helpers/constants\";\r\n\r\nconst ITEMS_URL =  `${PROPS_PATH}/items.png`;\r\nconst PORTAL_URL = `${PROPS_PATH}/portal.png`; \r\nconst ENTER_URL = `${PROPS_PATH}/enter.png`; \r\nconst LEAVE_URL = `${PROPS_PATH}/leave.png`; \r\n\r\n\r\nexport const GAMEOBJECTS = [\r\n    {\r\n        /*0*/\r\n        id: 0,\r\n        name: \"redpotion\",\r\n        src: ITEMS_URL,\r\n        srcpos: [0,0],\r\n        width: 40,\r\n        height: 40,\r\n        type: HEALER,\r\n    },\r\n\r\n    {\r\n        /*1*/\r\n        id: 1,\r\n        name: \"vaccine\",\r\n        src: ITEMS_URL,\r\n        srcpos: [200,0],\r\n        width: 40,\r\n        height: 40,\r\n        type: HEALER,\r\n    },\r\n\r\n    {\r\n        /*2*/\r\n        id: 2,\r\n        name: \"water\",\r\n        src: ITEMS_URL,\r\n        srcpos: [240,0],\r\n        width: 40,\r\n        height: 40,\r\n        type: EATABLE,\r\n    },\r\n\r\n    {\r\n        /*3*/\r\n        id: 3,\r\n        name: \"berry\",\r\n        src: ITEMS_URL,\r\n        srcpos: [240,280],\r\n        width: 40,\r\n        height: 40,\r\n        type: EATABLE,\r\n    },\r\n\r\n    {\r\n        /*4*/\r\n        id: 4,\r\n        name: \"diamond\",\r\n        src: ITEMS_URL,\r\n        srcpos: [240,200],\r\n        width: 40,\r\n        height: 40,\r\n        type: CURRENCY,\r\n    },\r\n\r\n    {\r\n        /*5*/\r\n        id: 5,\r\n        name: \"meat\",\r\n        src: ITEMS_URL,\r\n        srcpos: [280,160],\r\n        width: 40,\r\n        height: 40,\r\n        type: EATABLE,\r\n    },\r\n\r\n    {\r\n        /*6*/\r\n        id: 6,\r\n        name: \"bone\",\r\n        src: ITEMS_URL,\r\n        srcpos: [200,160],\r\n        width: 40,\r\n        height: 40,\r\n        type: EATABLE,\r\n    },\r\n\r\n    {\r\n        /*7*/\r\n        id: 7,\r\n        name: \"goldcoin\",\r\n        src: ITEMS_URL,\r\n        srcpos: [280,120],\r\n        width: 40,\r\n        height: 40,\r\n        type: CURRENCY,\r\n    },\r\n\r\n    {\r\n        id:8,\r\n        name:'hen',\r\n        src:'assets/images/80/objectsAndProps/hen.png',\r\n        srcpos: [0,0],\r\n        width: 32,\r\n        height: 36,\r\n        effects: \"spotanimate\",\r\n        type: \"HEN\",\r\n    },\r\n];\r\n\r\nexport const PORTALS = [\r\n\r\n    {   /*0*/\r\n        id: 0,\r\n        name: PORTAL_ENTER,\r\n        src: ENTER_URL,\r\n        srcpos: [0,0],\r\n        width: 40,\r\n        height: 40,\r\n        //effects: \"blink\",\r\n        type: PORTAL,\r\n    },\r\n\r\n    {   /*1*/\r\n        id: 1,\r\n        name: PORTAL_LEAVE,\r\n        src: LEAVE_URL,\r\n        srcpos: [0,0],\r\n        width: 40,\r\n        height: 40,\r\n       // effects: \"blink\",\r\n        type: PORTAL,\r\n    },\r\n\r\n    {   /*2*/\r\n        id: 2,\r\n        name: \"portal\",\r\n        src: PORTAL_URL,\r\n        srcpos: [0,0],\r\n        width: 64,\r\n        height: 64,\r\n        effects: \"rotate\",\r\n        type: PORTAL,\r\n    },\r\n    \r\n]","import { TOWN_CENTER_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const townCenter = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [   0,   0,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,   0,   0,  10,  10,  10,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,  10,   0,  10,  10,  10,  10,  10,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/town_center.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: TOWN_CENTER_MUSIC,\r\n}","import { DOWN, NON_GANG_MEMBER, LEFT } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { home } from '../../Maps/home';\r\n\r\n\r\nexport const _home = {\r\n    /* Compulsory */\r\n\r\n    name: \"home\",\r\n\r\n    map: home,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [7, 4],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //informational\r\n                id: 0,\r\n                name: \"Dad\",\r\n                skin: SKINS[\"prof\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[6,3], [6,4]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            { \r\n                //informational\r\n                id: 1,\r\n                name: \"Joey\",\r\n                skin: SKINS[\"baby\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[4,7],[4,8],[5,8],[6,8],[6,7],[5,7],[4,7]],\r\n                frameInterval: 200,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n                battle: true,\r\n                level: 1,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n\r\n            { \r\n                //informational\r\n                id: 2,\r\n                name: \"Ace\",\r\n                skin: SKINS[\"brownpuppy\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[3,1], [4,1],[5,1]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n            },\r\n\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [8, 4],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { HOME_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const home = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [   0,  10,  10,  10,  10,  10,  10,  10,   0,],\r\n        [   0,   0,  10,  10,  10,  10,  10,  10,   0,],\r\n        [   0,   0,  10,  10,  10,  10,  10,   0,   0,],\r\n        [   0,   0,  10,  10,  10,  10,  10,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,  10,   0,  10,   0,   0,   0,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/home.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: HOME_MUSIC,\r\n}","import { LEFT, RIGHT, NON_GANG_MEMBER, GANG_MEMBER, BATTLE_GM_MUSIC, UP } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { bakery } from '../../Maps/bakery';\r\n\r\n\r\nexport const _bakery = {\r\n    /* Compulsory */\r\n\r\n    name: \"bakery\",\r\n\r\n    map: bakery,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [8, 7],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //prop\r\n                id: 0,\r\n                name: \"Vincent\",\r\n                skin: SKINS[\"friend_3\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[3,0]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n            { \r\n                //prop\r\n                id: 1,\r\n                name: \"Chase\",\r\n                skin: SKINS[\"friend_2\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[3,1]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n            { \r\n                //battler\r\n                id: 2,\r\n                name: \"Samantha\",\r\n                skin: SKINS[\"crush_1\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[6,3], [6,4]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 4000,\r\n                battle: true,\r\n                level: 2,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n            { \r\n                //tribe\r\n                id: 3,\r\n                name: \"Eden\",\r\n                skin: SKINS[\"tribe_1\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[4,7], [4,8]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                battle: true,\r\n                level: 3,\r\n                battlerType: GANG_MEMBER,\r\n                battleMusic: BATTLE_GM_MUSIC,\r\n            },\r\n\r\n            {  //battler\r\n                id: 4,\r\n                name: \"John\",\r\n                skin: SKINS[\"kid_1\"],\r\n                direction: UP,\r\n                stationary: false,\r\n                pathArr: [[2,13]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                battle: true,\r\n                level: 1,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n\r\n            { \r\n                //prop\r\n                id: 5,\r\n                name: \"Cena\",\r\n                skin: SKINS[\"friend_4\"],\r\n                direction: UP,\r\n                stationary: false,\r\n                pathArr: [[2,11], [2,10]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 6000,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [9, 7],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { BAKERY_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const bakery = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [   0,   0,   0,   0,   0,  10,  10,  10,  10,  10,   0,   0,   0,   0,  10,],\r\n        [   0,   0,   0,   0,   0,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,  10,  10,  10,  10,   0,   0,   0,  10,  10,  10,  10,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,  10,   0,  10,   0,   0,   0,   0,   0,   0,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/bakery.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: BAKERY_MUSIC,\r\n}","import { TOWN_NORTH_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const townNorth = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,   0,   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,],\r\n        [  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,  10,  10,  10,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/town_north.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: TOWN_NORTH_MUSIC,\r\n\r\n}","import { CAVE_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const cave = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,],\r\n        [   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,  10,],\r\n\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/cave.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n    audioSrc: CAVE_MUSIC,\r\n}","import { HELL_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const hell = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,   0,   0,   0,  10,  10,  10,],\r\n        [  10,  10,   0,   0,   0,   0,   0,  10,  10,],\r\n        [  10,  10,   0,   0,   0,   0,   0,  10,  10,],\r\n        [  10,  10,   0,   0,   0,   0,  10,  10,  10,],\r\n        [  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/hell.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: HELL_MUSIC,\r\n\r\n}","import { DOWN, RIGHT, GANG_MEMBER, BATTLE_GM_MUSIC, LEFT, NON_GANG_MEMBER } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { townNorth } from '../../Maps/town_north';\r\nimport { _cave } from \"./_cave\";\r\n\r\n\r\n\r\nexport const _townNorth = {\r\n    /* Compulsory */\r\n\r\n    name: \"townNorth\",\r\n\r\n    map: townNorth,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [19, 14],\r\n        direction: 'LEFT',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            {   //prop\r\n                id: 0,\r\n                name: \"Kaloo\",\r\n                skin: SKINS[\"blackcat\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[8,5],[8,6],[8,7]],\r\n                frameInterval: 50,\r\n                moveInterval: 250,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 1,\r\n                name: \"Goku\",\r\n                skin: SKINS[\"whitecat\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[10,7], [10,6], [10,5],[11,5],[12,5],[13,5], [14,5],[15,5]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 2,\r\n                name: \"bruno\",\r\n                skin: SKINS[\"brownpuppy\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[10,6], [10,5],[11,5],[12,5],[13,5], [14,5],[15,5],[16,5]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            {\r\n                //informational\r\n                id:3,\r\n                name: \"Maty\",\r\n                skin: SKINS[\"crush_1\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[13,11], [13,12]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {\r\n                //tribe\r\n                id:4,\r\n                name: \"Tegan\",\r\n                skin: SKINS[\"tribe_4\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[19, 6], [19,7], [19,8]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1500,\r\n                battle: true,\r\n                level: 5,\r\n                battlerType: GANG_MEMBER,\r\n                battleMusic: BATTLE_GM_MUSIC,\r\n            },\r\n\r\n            {   //prop\r\n                id: 5,\r\n                name: \"Matt\",\r\n                skin: SKINS[\"friend_2\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[11,6]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n            \r\n            {   //battler\r\n                id: 6,\r\n                name: \"Damon\",\r\n                skin: SKINS[\"friend_3\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[11,7]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                battle: true,\r\n                level: 4,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n\r\n            {\r\n                //informational\r\n                id:7,\r\n                name: \"Fattu\",\r\n                skin: SKINS[\"kid_2\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[6,5]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {   //battler\r\n                id: 8,\r\n                name: \"Hunt\",\r\n                skin: SKINS[\"friend_9\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[7,14]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                battle: true,\r\n                level: 4,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [6, 6],\r\n            type: PORTALS[0],\r\n            rotate:270,\r\n            target: _cave,\r\n        },\r\n        {\r\n            position: [19, 15],\r\n            type: PORTALS[1],\r\n            rotate:0,\r\n        },\r\n    ]\r\n};","import { DOWN, RIGHT } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { cave } from '../../Maps/cave';\r\nimport { _hell } from \"./_hell\";\r\n\r\n\r\nexport const _cave = {\r\n    /* Compulsory */\r\n\r\n    name: \"hauntedhouse\",\r\n\r\n    map: cave,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [3, 2],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //props\r\n                id: 0,\r\n                name: \"Misty\",\r\n                skin: SKINS[\"blackcat\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[1,0], [2,0], [3,0], [4,0],],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n            },\r\n\r\n            { \r\n                //props\r\n                id: 1,\r\n                name: \"Trigger\",\r\n                skin: SKINS[\"orangecat\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[1,1], [1,2], [1,3], [1,4],],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                talkFlag: false,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [1, 2],\r\n            type: PORTALS[0],\r\n            rotate:270,\r\n            target: _hell,\r\n        },\r\n        {\r\n            position: [4, 2],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { BOSS_BATTLE_LEVEL, BOSS, BATTLE_BOSS_MUSIC, RIGHT, LEFT } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { hell } from '../../Maps/hell';\r\n\r\n\r\nexport const _hell = {\r\n    /* Compulsory */\r\n\r\n    name: \"hell\",\r\n\r\n    map: hell,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [7, 4],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //tribe\r\n                id: 0,\r\n                name: \"Beast\",\r\n                skin: SKINS[\"boss\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[2,3]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                battle: true,\r\n                level: BOSS_BATTLE_LEVEL,\r\n                battlerType: BOSS,\r\n                battleMusic: BATTLE_BOSS_MUSIC,\r\n            },\r\n            { \r\n                //props\r\n                id: 1,\r\n                name: \"Rock\",\r\n                skin: SKINS[\"blackcat\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[5,3], [5,2], [4,2], [3,2], [3,3], [3,4], [3,5], [3,6]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            { \r\n                //props\r\n                id: 2,\r\n                name: \"Paper\",\r\n                skin: SKINS[\"whitecat\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[2,4], [2,5]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n            },\r\n\r\n            { \r\n                //props\r\n                id: 3,\r\n                name: \"Scissors\",\r\n                skin: SKINS[\"orangecat\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[4,2], [4,3],[4,4],[4,5],[4,6]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [8, 4],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { TOWN_SOUTH_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const townSouth = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,],\r\n        [  10,  10,  10,  10,   0,   0,  10,  10,   0,   0,   0,   0,],\r\n        [  10,  10,  10,   0,   0,   0,   0,   0,   0,  10,  10,   0,],\r\n        [  10,  10,  10,   0,   0,   0,   0,   0,  10,   0,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n        [  10,   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n        [  10,   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n       \r\n    ],\r\n\r\n    src: `${MAPS_BASE}/town_south.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: TOWN_SOUTH_MUSIC,\r\n\r\n}","import { LIBRARY_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const library = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,  10,    0,   0,  10,  10,  10,  10,  10,   0,   0,  10,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,    0,   0,   0,   0,   0,   0,   0,   0,  10,  10,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,    0,   0,   0,   0,   0,   0,   0,   0,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,  10,  10,  10,  10,  10,  10,  10,],\r\n        [    0,   0,   0,   0,  0,  0,   0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [  0,   0,   0,   0,  0,  0,   0,  0,   0,  0,  0,   0,   0,   0,   0,   10,  10,  10, ],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,   0,  10,  10,   0,   0,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,  10,  0,   0,  0,  0,   0,  0,  0,  0,  0,  0,  0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,   0,   0,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,   0,   0,  10,  10,  10,  10,  10,],\r\n        [   0,   0,   0,   0,   0,   0,   0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,  10,  10,   0,   0,   0,  0,   0,  0,  0,   0,   0,  10,  10,   0,   0,   0,],\r\n        [   0,   0,   0,  10,  10,   0,   0,  0,   0,  0,  0,   0,  10,  10,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,  10,   0,  0,  10,   0,  0,  0,  0,  0,  0,  0,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/library.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: LIBRARY_MUSIC,\r\n\r\n}","import { GAMEROOM_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const gameroom = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,],\r\n        [   0,   0,   0,   0,  10,],\r\n        [  10,   0,   0,   0,  10,],\r\n        [   0,   0,   0,   0,   0,],\r\n        [   0,  10,   0,  10,   0,],\r\n\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/gameroom.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: GAMEROOM_MUSIC,\r\n}","import { DOWN, UP, LEFT, RIGHT, NON_GANG_MEMBER } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { library } from '../../Maps/library';\r\nimport { _gameroom } from \"./_gameroom\";\r\n\r\n\r\nexport const _library = {\r\n    /* Compulsory */\r\n\r\n    name: \"library\",\r\n\r\n    map: library,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [16, 8],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n        { \r\n            //prop\r\n            id: 0,\r\n            name: \"Jordan\",\r\n            skin: SKINS[\"kid_2\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[14,0], [14,1], [14,2]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 3000,\r\n            battle: true,\r\n            level: 3,\r\n            battlerType: NON_GANG_MEMBER,\r\n        },\r\n\r\n        { \r\n            //prop\r\n            id: 1,\r\n            name: \"Prick\",\r\n            skin: SKINS[\"friend_5\"],\r\n            direction: RIGHT,\r\n            stationary: false,\r\n            pathArr: [[14,16]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n        },\r\n\r\n        { \r\n            //prop\r\n            id: 2,\r\n            name: \"Pom\",\r\n            skin: SKINS[\"friend_3\"],\r\n            direction: LEFT,\r\n            stationary: false,\r\n            pathArr: [[14,17]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n        },\r\n\r\n        { \r\n            //prop\r\n            id: 3,\r\n            name: \"Bam\",\r\n            skin: SKINS[\"friend_6\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[10,13], [10,14], [9,14]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n        },\r\n\r\n        { \r\n            //prop\r\n            id: 4,\r\n            name: \"Boo\",\r\n            skin: SKINS[\"friend_2\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[7,16]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n        },\r\n\r\n        {   //battler\r\n            id: 5,\r\n            name: \"Tori\",\r\n            skin: SKINS[\"kid_3\"],\r\n            direction: DOWN,\r\n            stationary: false,\r\n            pathArr: [[8,0]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n            battle: true,\r\n            level: 2,\r\n            battlerType: NON_GANG_MEMBER,\r\n        },\r\n\r\n        {\r\n            //informational\r\n            id:6,\r\n            name: \"Ghissu\",\r\n            skin: SKINS[\"kid_1\"],\r\n            direction: RIGHT,\r\n            stationary: false,\r\n            pathArr: [[4,3], [4,4], [4,5]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 1500,\r\n            talkFlag: false,\r\n        },\r\n\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [4, 15],\r\n            type: PORTALS[0],\r\n            rotate: 0,\r\n            target: _gameroom,\r\n        },\r\n        {\r\n            position: [17, 8],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { DOWN, GANG_MEMBER, BATTLE_GM_MUSIC, UP, NON_GANG_MEMBER } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { gameroom } from '../../Maps/gameroom';\r\n\r\n\r\nexport const _gameroom = {\r\n    /* Compulsory */\r\n\r\n    name: \"gameroom\",\r\n\r\n    map: gameroom,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [3, 2],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n        {   //tribe\r\n            id: 0,\r\n            name: \"Razor\",\r\n            skin: SKINS[\"tribe_3\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[1,2]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n            battle: true,\r\n            level: 4,\r\n            battlerType: GANG_MEMBER,\r\n            battleMusic: BATTLE_GM_MUSIC,\r\n        },\r\n        { \r\n            //prop\r\n            id: 1,\r\n            name: \"Prick\",\r\n            skin: SKINS[\"friend_1\"],\r\n            direction: DOWN,\r\n            stationary: false,\r\n            pathArr: [[1,0]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n            battle: true,\r\n            level: 3,\r\n            battlerType: NON_GANG_MEMBER,\r\n        },\r\n        { \r\n            //prop\r\n            id: 2,\r\n            name: \"Abu\",\r\n            skin: SKINS[\"friend_4\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[3,0]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n        },\r\n        { \r\n            //informational\r\n            id: 3,\r\n            name: \"LT\",\r\n            skin: SKINS[\"friend_7\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[3,4]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n            talkFlag: false,\r\n        },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [4, 2],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { HOTEL_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const hotel = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,],\r\n        [  10,  10,   0,   0,   0,  10,   0,  10,   0,   0,   0,  10,  10,],\r\n        [  10,  10,  10,   0,  10,  10,   0,  10,   0,   0,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,   0,  10,  10,   0,  10,  10,   0,   0,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/hotel.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: HOTEL_MUSIC,\r\n\r\n}","import {_townCenter} from \"./_town_center\";\r\n\r\n\r\nexport const level = _townCenter;","import { DOWN, GANG_MEMBER, NON_GANG_MEMBER, BATTLE_GM_MUSIC, LEFT, RIGHT } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { townCenter } from '../../Maps/town_center';\r\nimport { _home } from \"./_home\";\r\nimport { _bakery } from \"./_bakery\";\r\nimport { _townNorth } from \"./_town_north\";\r\nimport { _townSouth } from \"./_town_south\";\r\n\r\nexport const _townCenter = {\r\n    /* Compulsory */\r\n\r\n    name: \"townCenter\",\r\n\r\n    map: townCenter,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [14, 15],\r\n        direction: 'RIGHT',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //informational\r\n                id: 0,\r\n                name: \"Frank\",\r\n                skin: SKINS[\"friend_5\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[14,16], [14,15]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            { \r\n                //informational\r\n                id: 1,\r\n                name: \"Tia\",\r\n                skin: SKINS[\"crush_4\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[7,7], [7,8]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {\r\n                //battler\r\n                id:2,\r\n                name: \"Nathan\",\r\n                skin: SKINS[\"friend_2\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[3,6], [4,6]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1500,\r\n                battle: true,\r\n                level: 1,\r\n                battlerType: NON_GANG_MEMBER,\r\n                //battleMusic: BATTLE_GM_MUSIC,\r\n            },\r\n\r\n            {\r\n                //informational\r\n                id:3,\r\n                name: \"Tracer\",\r\n                skin: SKINS[\"friend_7\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[11,2], [12,2], [13,2], [14,2], [14,3]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1500,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {\r\n                //informational\r\n                id:4,\r\n                name: \"Sean\",\r\n                skin: SKINS[\"chef\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[21,11], [21,12], [21,13]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {\r\n                //tribe\r\n                id:5,\r\n                name: \"Gambit\",\r\n                skin: SKINS[\"tribe_2\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[20, 15]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1500,\r\n                battle: true,\r\n                level: 4,\r\n                battlerType: GANG_MEMBER,\r\n                battleMusic: BATTLE_GM_MUSIC,\r\n            },\r\n\r\n            {   //prop\r\n                id: 6,\r\n                name: \"Rocky\",\r\n                skin: SKINS[\"friend_8\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[20,16]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n\r\n            {\r\n                //battler\r\n                id:7,\r\n                name: \"Chop\",\r\n                skin: SKINS[\"bully_1\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[20,20], [20, 21], [21,21]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1500,\r\n                battle: true,\r\n                level: 2,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [12, 15],\r\n            type: PORTALS[0],\r\n            rotate:270,\r\n            target: _home,\r\n        },\r\n        {\r\n            position: [7, 10],\r\n            type: PORTALS[0],\r\n            rotate:270,\r\n            target: _bakery,\r\n        },\r\n        {\r\n            position: [19, 0],\r\n            type: PORTALS[0],\r\n            rotate:180,\r\n            target: _townNorth,\r\n        },\r\n        {\r\n            position: [14, 21],\r\n            type: PORTALS[0],\r\n            rotate:0,\r\n            target: _townSouth,\r\n        }\r\n\r\n    ]\r\n};","import { LEFT, RIGHT, NON_GANG_MEMBER } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { townSouth } from '../../Maps/town_south';\r\nimport { _library } from \"./_library\";\r\nimport { _hotel } from \"./_hotel\";\r\n\r\n\r\nexport const _townSouth = {\r\n    /* Compulsory */\r\n\r\n    name: \"townSouth\",\r\n\r\n    map: townSouth,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [14, 1],\r\n        direction: 'RIGHT',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //informational\r\n                id: 0,\r\n                name: \"Molly\",\r\n                skin: SKINS[\"crush_2\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[6,3], [6,4]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            { \r\n                //prop\r\n                id: 1,\r\n                name: \"Chambers\",\r\n                skin: SKINS[\"friend_2\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[4,11]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            \r\n            { \r\n                //prop\r\n                id: 2,\r\n                name: \"Ozil\",\r\n                skin: SKINS[\"friend_3\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[4,10]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            { \r\n                //battler\r\n                id: 3,\r\n                name: \"Grindel\",\r\n                skin: SKINS[\"friend_8\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[1,8], [2,8], [2,9], [1,9]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                battle: true,\r\n                level: 3,\r\n                battlerType: NON_GANG_MEMBER,\r\n                //battleMusic: BATTLE_GM_MUSIC,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [4, 5],\r\n            type: PORTALS[0],\r\n            rotate:-90,\r\n            target: _library,\r\n        },\r\n        {\r\n            position: [19, 7],\r\n            type: PORTALS[0],\r\n            rotate:-90,\r\n            target: _hotel,\r\n        },\r\n        {\r\n            position: [14, 0],\r\n            type: PORTALS[1],\r\n            rotate:180,\r\n        },\r\n    ]\r\n};","import { DOWN, RIGHT, LEFT, GANG_MEMBER, BATTLE_GM_MUSIC, NON_GANG_MEMBER } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { hotel } from '../../Maps/hotel';\r\n\r\n\r\nexport const _hotel = {\r\n    /* Compulsory */\r\n\r\n    name: \"hotel\",\r\n\r\n    map: hotel,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [11, 6],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            {   //prop\r\n                id: 0,\r\n                name: \"Cruz\",\r\n                skin: SKINS[\"friend_2\"],\r\n                direction: RIGHT,\r\n                stationary: true,\r\n                pathArr: [[12,2]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 1,\r\n                name: \"Lillie\",\r\n                skin: SKINS[\"crush_1\"],\r\n                direction: LEFT,\r\n                stationary: true,\r\n                pathArr: [[12,3]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 2,\r\n                name: \"Lil\",\r\n                skin: SKINS[\"kid_2\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[12,9], [12,10]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            }, \r\n            {   //prop\r\n                id: 3,\r\n                name: \"Wayne\",\r\n                skin: SKINS[\"friend_7\"],\r\n                direction: DOWN,\r\n                stationary: true,\r\n                pathArr: [[8,3]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 4,\r\n                name: \"Spark\",\r\n                skin: SKINS[\"kid_3\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[8,8], [8,9]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 5,\r\n                name: \"Sparkle\",\r\n                skin: SKINS[\"whitepuppy\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[6,9], [6,10]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            {   //tribe\r\n                id: 6,\r\n                name: \"Snyder\",\r\n                skin: SKINS[\"tribe_5\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[6,8]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                battle: true,\r\n                level: 5,\r\n                battlerType: GANG_MEMBER,\r\n                battleMusic: BATTLE_GM_MUSIC,\r\n                \r\n            },\r\n\r\n            {   //prop\r\n                id: 7,\r\n                name: \"Weisley\",\r\n                skin: SKINS[\"bully_1\"],\r\n                direction: LEFT,\r\n                stationary: true,\r\n                pathArr: [[6,11]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n\r\n            {   //informational\r\n                id: 8,\r\n                name: \"Rose\",\r\n                skin: SKINS[\"crush_3\"],\r\n                direction: DOWN,\r\n                stationary: true,\r\n                pathArr: [[5,6]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {   //battler\r\n                id: 9,\r\n                name: \"Max\",\r\n                skin: SKINS[\"friend_6\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[7,2], [7,4]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                battle: true,\r\n                level: 4,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [12, 6],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getKeyDiv, getFontSize } from '../helpers/funcs';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        dialog: state.dialog,\r\n    });\r\n}\r\n\r\nconst FONT_ANIMATION = 25;\r\n\r\nclass Dialog extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.animateConversation = this.animateConversation.bind(this);\r\n        this.timeout = null;\r\n    }\r\n\r\n    animateConversation(speakerIdx, name, content, idx, objref) {\r\n        \r\n        const animate = function() {\r\n            if(idx>content.length) {\r\n                return;\r\n            }\r\n            if(speakerIdx!==this.props.speakerIdx) {\r\n                if(speakerIdx===0) {\r\n                    objref.innerHTML = name + \": \" + content;\r\n                    return;\r\n                } else {\r\n                    objref.innerHTML = \"\";\r\n                    return;\r\n                }\r\n            }\r\n            objref.innerHTML = name + \": \" + content.substring(0, idx);\r\n            idx++;\r\n            this.timeout = setTimeout(animate, FONT_ANIMATION);\r\n        }.bind(this);\r\n        animate();\r\n    }\r\n\r\n    cleanBoard() {\r\n        this.p1.innerHTML = \"\";\r\n        this.p2.innerHTML = \"\";\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isOpen) {\r\n            if(this.props.speakerIdx===0) {\r\n                const person = this.props.person1;\r\n                this.cleanBoard();\r\n                this.animateConversation(0, person.name, person.dialogs[this.props.dialogIdx], 1, this.p1);\r\n            } else {\r\n                const person = this.props.person2;\r\n                this.animateConversation(1, person.name, person.dialogs[this.props.dialogIdx], 1, this.p2);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    render() {\r\n\r\n        let POS = {};\r\n        if(this.props.position===\"top\") {\r\n            POS[\"top\"] = 0;\r\n        } else {\r\n            POS[\"bottom\"] = 0;\r\n        }\r\n\r\n        const style = {\r\n            position: 'absolute',\r\n            height: '25%',\r\n            border: '10px solid #00b4bc',\r\n            left: 0,\r\n            right: 0,\r\n            borderRadius: '10px',\r\n            padding: '5px',\r\n            backgroundColor: '#f7f8f7',\r\n            color: '#5d5f5b',\r\n            fontSize: getFontSize(2),\r\n            fontFamily: 'gameboy_lg',\r\n            display: this.props.isOpen? 'block': 'none',\r\n            overflowWrap: 'break-word',\r\n            ...POS,\r\n        };\r\n\r\n        return(\r\n            <div id=\"conversation\" style={style}>\r\n                <div style={{position:\"relative\", width:'100%', height:'100%'}}>\r\n                    <p ref={p1 => this.p1 = p1}></p>\r\n                    <p ref={p2 => this.p2 = p2}></p>\r\n                    <div className='blink' style={{position:'absolute', right:20, bottom:20}}>{getKeyDiv(\"SPACE\")}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ConversationDisplay extends Component {\r\n\r\n    render() {\r\n        const dialog = this.props.dialog;\r\n        return(\r\n            <Dialog isOpen={dialog.isOpen}\r\n                    position={dialog.position}\r\n                    person1={dialog.person1}\r\n                    person2={dialog.person2}\r\n                    dialogIdx={dialog.dialogIdx}\r\n                    speakerIdx={dialog.speakerIdx}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(ConversationDisplay);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { EATABLE, HEALER, CURRENCY } from '../helpers/constants';\r\nimport { GAMEOBJECTS } from '../data/gameobjects';\r\nimport { getFontSize } from '../helpers/funcs';\r\n\r\n\r\n\r\nfunction GetInventoryItemCounts(list) {\r\n    let countObj = {}, item;\r\n    for(item of list) {\r\n        if(item.type.name in countObj)\r\n            countObj[item.type.name]+=1;\r\n        else\r\n            countObj[item.type.name] = 1;\r\n    }\r\n    return countObj;\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        inventory: state.inventory,\r\n    })\r\n}\r\n\r\nconst InventoryItem = (props) => {\r\n\r\n    const divSize = 120;\r\n\r\n    const imageStyle = {\r\n        backgroundImage: `url('${props.self.src}')`,\r\n        backgroundPosition: `${props.self.srcpos[0]}px ${props.self.srcpos[1]}px`,\r\n        width: props.self.width,\r\n        height: props.self.height,\r\n        position: 'absolute',\r\n        left: divSize/2 - props.self.width/2,\r\n        top: divSize/2 - props.self.height/2,\r\n    };\r\n\r\n    return(\r\n        <div className=\"inventorybtn\">\r\n            <div style={imageStyle}/>\r\n            <p style={{fontSize: getFontSize(2), position: 'absolute', margin: '5px', left: 5, bottom: 5}}>{props.count}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst InventoryRow = (props) => {\r\n\r\n    const countObj = GetInventoryItemCounts(props.inventorylist);\r\n    const validgameobjects = GAMEOBJECTS.filter(gameobj => gameobj.type === props.type);\r\n\r\n    const rendergameobjects = validgameobjects.map( gameobj => <InventoryItem self={gameobj} key={gameobj.id} count={ (gameobj.name in countObj)? countObj[gameobj.name]:0} />);\r\n\r\n    const style = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        margin: '5px',\r\n        padding: '6px',\r\n        backgroundColor: 'forestgreen',\r\n        boxShadow: 'inset 0 0 5px black',\r\n        borderRadius: '10px'\r\n    };\r\n\r\n    return(\r\n        <div style={style}>\r\n            <div style={{ writingMode: 'vertical-lr', textOrientation: 'sideways-right', margin:'auto 5px', padding: '5px' }} >{props.type}</div>\r\n            {rendergameobjects}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst InventoryDialog = (props) => {\r\n\r\n    const inventoryStyle = {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        top: '50%',\r\n        transform: 'translate(-50%,-50%)',\r\n        backgroundColor: 'darkgreen',\r\n        border: '5px solid white',\r\n        borderRadius: '10px',\r\n        boxShadow: 'inset 0 0 5px black',\r\n        fontFamily: 'gameboy',\r\n        color: 'white',\r\n        padding: \"5px\",\r\n        zIndex: 5,\r\n        display: props.inventory.isOpen? 'inline-block' : 'none',\r\n    };\r\n\r\n    return(\r\n            <div id=\"inventory\" style={inventoryStyle}>\r\n                <div style={{ fontSize: getFontSize(2), padding: '5px', margin:'5px', textAlign: 'center'}}>\r\n                    <p style={{ fontSize: getFontSize(2), padding: '3px', margin:'0px', display:'inline-block', border: '2px groove white'}}>Inventory</p>\r\n                </div>\r\n                <div style={{display: 'flex', padding: '5px', flexDirection: 'column', justifyContent: 'center'}}>\r\n                    <InventoryRow type={HEALER} inventorylist={props.inventory[HEALER]} />\r\n                    <InventoryRow type={EATABLE} inventorylist={props.inventory[EATABLE]} />\r\n                    <InventoryRow type={CURRENCY} inventorylist={props.inventory[CURRENCY]} />\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\nclass Inventory extends Component {\r\n\r\n    render() {\r\n        return( \r\n            <InventoryDialog inventory={this.props.inventory} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(Inventory);\r\n","import React from 'react';\r\nimport { PROPS_PATH } from '../helpers/constants';\r\nimport { getFontSize } from '../helpers/funcs';\r\n\r\nconst Loading = (props) => {\r\n    return(\r\n    <div style={{width: '100%', height:'100%',  backgroundImage: 'linear-gradient(#991b1e, #b61d20, #991b1e)'}}>\r\n        <div id=\"loading\" style={{position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%, -50%)', display:'flex', flexDirection:'column', padding: '5px', alignItems:'center'}}>\r\n            <div  style={{}}><img className=\"rotate\" style={{width:250, height:250}} src={`${PROPS_PATH}/loading.png`} alt=\"Loading\"></img></div>\r\n            <p style={{fontSize: getFontSize(2.5), fontFamily:'gameboy', color:'white'}}> {props.msg}...</p>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ARROW_KEYCODES, ENTER_KEY, ROCK, PAPER, SCISSORS, SPACE_KEY, BATTLE_END_MUSIC, BEEP_SOUND, PROPS_PATH } from '../helpers/constants';\r\nimport { BattleHandleMove, BattleMoveIndexToStr, BattleEndIntro, CloseBattleSequence } from '../redux/ActionCreators';\r\nimport { centerBgImg, solidBorder, getKeyDiv, getLevelColor, playSoundEffect, getFontSize } from '../helpers/funcs';\r\nimport ReactHowler from 'react-howler';\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        battle: state.battle,\r\n    })\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n    return({\r\n        submitMove: (move) => { dispatch(BattleHandleMove(parseInt(move))); } ,\r\n        endIntro: () => {dispatch(BattleEndIntro());}, \r\n        closeBattle: () => {dispatch(CloseBattleSequence())},\r\n    })\r\n}\r\n\r\nclass HealthBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.timeout = null;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.blink) {\r\n            this.timeout = setTimeout(function(){\r\n                this.hb.classList.add('blinkmomentary');\r\n            }.bind(this), 600);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    render() {\r\n        if(this.hb) {\r\n            this.hb.classList.remove('blinkmomentary');\r\n        }\r\n\r\n        return(\r\n            <div ref={hb => this.hb = hb} style={{width:'90%', height: '50%', display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                <div style={{fontSize: getFontSize(2), marginRight:'10px'}}>HP</div>\r\n                <div style={{width:'90%', height: '30%',...solidBorder(1, 'white', 0), backgroundColor: 'white' }}>\r\n                    <div style={{position: 'relative', width:`${(this.props.currhealth/this.props.maxhealth)*100}%`, height:'100%', ...solidBorder(0, 'white', 0), backgroundImage: 'linear-gradient(mediumseagreen, forestgreen, mediumseagreen)'}}>\r\n                        <div style={{position:'absolute', left:'40%', top:'15%', fontSize:getFontSize(2)}}>{Math.floor((this.props.currhealth/this.props.maxhealth)*100)}%</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n     }\r\n}\r\n\r\n\r\nconst PlayerInfo = (props) => {\r\n\r\n    const style = {\r\n        width: '40%',\r\n        height: '100%',\r\n        backgroundColor: getLevelColor(props.player.level),\r\n        ...solidBorder(2, 'black', 5),\r\n        color: 'black',\r\n        fontSize: getFontSize(2.5),\r\n        fontFamily: 'gameboy_lg',\r\n        display: 'flex',\r\n        flexDirection: props.reverse? 'row-reverse' : 'row',\r\n        justifyContent:'space-between'\r\n    }\r\n    return(\r\n        <div style={style}>\r\n            <div style={{width:'30%', height:'90%', alignSelf:'center', margin: '5px', ...centerBgImg(`${props.player.src}/head.png`, \"lightgrey\"), ...solidBorder(2, 'grey', 5) }}/>\r\n            <div style={{width:'70%', height:'100%', display:'flex', flexDirection:'column', justifyContent:'space-around', alignSelf:'center', margin: '5px'}}>\r\n                <div style={{display: 'flex', justifyContent:'space-between'}}>\r\n                    <div>{props.player.name}</div>\r\n                    <div style={{color:'yellow', fontSize:getFontSize(2)}}>Lvl:{props.player.level}</div>\r\n                </div>\r\n                <HealthBar maxhealth={props.player.maxLives} currhealth={props.player.lives} blink={props.blink}/>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass MoveDiv extends Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.timeout = [];\r\n        this.className = this.props.reverse? \"moveInRL\": \"moveInLR\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.image.style.backgroundImage = `url('${PROPS_PATH}/${BattleMoveIndexToStr(this.props.move)}.png')`;\r\n        this.image.classList.add(this.className);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.timeout = [];\r\n        this.timeout.push(setTimeout(function() {\r\n            if(this.image) {\r\n                this.image.style.backgroundImage = `url('${PROPS_PATH}/${BattleMoveIndexToStr(this.props.move)}.png')`;\r\n                this.image.classList.add(this.className);\r\n            }\r\n        }.bind(this), 50));\r\n        if(this.props.blink) {\r\n            this.timeout.push(setTimeout(function() {\r\n                if(this.image) {\r\n                    this.image.classList.add(\"blinkmomentary\");\r\n                }\r\n            }.bind(this), 600));\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.timeout.map(timeout => clearTimeout(timeout));\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            position: \"relative\",\r\n            width: '50%',\r\n            height: '100%',\r\n        }\r\n\r\n        const imgStyle = {\r\n            width: '100%',\r\n            height: '100%',\r\n            position: \"absolute\",\r\n            backgroundRepeat: 'no-repeat', \r\n            backgroundPosition:'center',\r\n            backgroundSize: 'contain',\r\n            transform: this.props.reverse? 'rotate(180deg)' : 'rotate(0deg)',\r\n        }\r\n\r\n        if(this.image) {\r\n            this.image.classList.remove(this.className);\r\n            this.image.classList.remove(\"blinkmomentary\");\r\n        };\r\n\r\n        return(\r\n                <div style={style}>\r\n                    <div ref={image => this.image=image} style={imgStyle}></div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Summary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.timeout = null;\r\n    }\r\n\r\n    animateText(text) {\r\n        let idx = 0; const p = this.p;\r\n        const animate = function() {\r\n            if(idx > text.length)\r\n                return;\r\n            p.innerHTML = text.substring(0, idx);\r\n            idx++;\r\n            this.timeout = setTimeout(animate, 10);\r\n        }.bind(this);\r\n        animate();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.animateText(this.props.summary);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        clearTimeout(this.timeout);\r\n        this.animateText(this.props.summary);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    render() {\r\n\r\n        const style = {\r\n            border: '10px solid #db5435',\r\n            borderRadius:'20px',\r\n            width: '70%',\r\n            padding: '5px',\r\n            backgroundColor: '#639aa1',\r\n            color: 'white',\r\n            fontSize: getFontSize(3),\r\n            fontFamily: 'gameboy',\r\n            overflowWrap: 'break-word',\r\n        };\r\n\r\n        return(\r\n            <div id=\"summary\" style={style}>\r\n                <p ref={p => this.p = p}></p>\r\n            </div>\r\n        );\r\n    }     \r\n}\r\n\r\n\r\n\r\nclass BattleEnd extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.continue = false;\r\n        if(this.props.winner===1) {\r\n            this.winnerStr =  `${this.props.player.name} WON!`;\r\n            this.winnerClass = \"wonBlink\";\r\n        } else {\r\n            this.winnerStr = `${this.props.player.name} LOST!`;\r\n            this.winnerClass = \"lostBlink\";\r\n        }\r\n        this.levelColor =  this.props.player.level>this.props.player.initialStats.level? \"forestgreen\":\"#5d5f5b\";\r\n        this.levelArrow = this.props.player.level>this.props.player.initialStats.level?` <i class=\"fa fa-arrow-up blink\"></i>`:\"\";\r\n\r\n        this.animateText = this.animateText.bind(this);\r\n        this.timeout = null;\r\n    }\r\n\r\n    handleKeyDown(event) {        \r\n        if(SPACE_KEY.includes( event.keyCode) && this.continue)\r\n            this.props.closeBattle();\r\n    }\r\n\r\n\r\n    animateText(base, from, to, speed, ref, count) {\r\n        const animate = function() {\r\n            if(from>to) {\r\n                count++;\r\n                if(count===1) {\r\n                    this.timeout = setTimeout(function() {this.animateText(\"Exp\", this.props.player.initialStats.exp, this.props.player.exp, 40, this.exp, count)}.bind(this), 200);\r\n                } else if(count===2) {\r\n                    this.timeout = setTimeout(function() {this.animateText(\"Level\", this.props.player.initialStats.level, this.props.player.level, 100, this.level, count);}.bind(this),200);\r\n                } else if (count===3) {\r\n                    this.level.style.color = this.levelColor;\r\n                    this.level.innerHTML+=this.levelArrow;\r\n                    this.cont.style.opacity = 1;\r\n                    this.continue = true;\r\n                }\r\n                return;\r\n            }\r\n            playSoundEffect(BEEP_SOUND);\r\n            ref.innerHTML = `${base}: ${from}`;\r\n            from++;\r\n            this.timeout = setTimeout(animate, speed);\r\n        }.bind(this);\r\n\r\n        animate();\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n        this.timeout = setTimeout(function(){this.animateText(\"Score\", 0, this.props.player.score, 40, this.score, 0)}.bind(this), 600);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div  id=\"battleEnd\" className=\"moveInLR\" style={{position:'absolute', width:'100%', height:'100%', display:'flex', flexDirection:'column', justifyContent:'center', fontSize: getFontSize(2.5) ,fontFamily:'gameboy',  backgroundImage: 'repeating-linear-gradient(#def3c6, #def3c6 20px, #e7f6db 20px, #e7f6db 23px)'}}>\r\n                <div style={{width:'100%', height:'60%', display:'flex', justifyContent:'center'}}>\r\n                    <div style={{width:'60%', height: '100%', display:'flex', justifyContent:'center', backgroundColor: '#f7f8f7',...solidBorder(10, '#00b1b7', 10), color:'#5d5f5b'}}> \r\n                            <div style={{width:'40%', height:'60%', display:'flex', flexDirection:'column', alignSelf:'center'}}>\r\n                                <div style={{width:'240px', height:'240px', alignSelf:'center', ...centerBgImg(`${this.props.player.src}/head.png`, \"lightgrey\"), ...solidBorder(2, 'grey', 5) }}/>\r\n                                <div style={{alignSelf:'center', fontSize: getFontSize(3)}}>{this.props.player.name}</div>\r\n                            </div> \r\n                            <div style={{width:'50%', height:'60%', display:'flex', flexDirection:'column', alignSelf:'center', fontSize: getFontSize(2.5)}}>\r\n                                <div className={this.winnerClass} style={{alignSelf:'center', fontSize: getFontSize(3.5), marginBottom:'20px'}}>{this.winnerStr}</div>\r\n                                <div ref={score => this.score=score} style={{margin:'5px 0px 0px 10px'}}></div>\r\n                                <div  ref={exp => this.exp=exp}  style={{margin:'5px 0px 0px 10px'}}></div>\r\n                                <div  ref={level => this.level=level} style={{margin:'5px 0px 0px 10px', color: this.levelColor}}></div>\r\n                            </div>\r\n                    </div>\r\n                </div> \r\n                <div className=\"blinkContinue\" ref={cont => this.cont=cont} style={{alignSelf:'center', marginTop:'40px', opacity:0, color:'#5d5f5b'}}>Press {getKeyDiv(\"SPACE\", 25)} to continue...</div>          \r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nclass BattleIntro extends Component {\r\n\r\n    render() {\r\n\r\n        const character_bg = 'lightgrey';\r\n\r\n        const style={\r\n            position:'absolute', \r\n            width:'100%', height:'100%',\r\n            display:'flex', flexDirection:'column', justifyContent:'space-between',\r\n            fontFamily:'gameboy', fontSize: getFontSize(6),\r\n            backgroundColor:'white'\r\n        }\r\n\r\n        return(\r\n            <div id=\"battleIntro\" style={style}>\r\n                <div style={{position:'relative', height: '35%', backgroundColor: character_bg}}>\r\n                    <div  className=\"battleIntroRL\" style={{position:'absolute', top: '30%', width: '120px', height: '120px', ...centerBgImg(`${this.props.npc.src}/head.png`), backgroundColor: character_bg, }}></div>\r\n                </div>\r\n                <div style={{position:'relative', height: '30%', display: 'flex', alignItems:'center', justifyContent:'center'}}>\r\n                    <div className=\"battleIntroVS\">\r\n                        VS\r\n                    </div>\r\n                </div>\r\n                <div style={{position:'relative', height: '35%', backgroundColor: character_bg}}>\r\n                    <div  className=\"battleIntroLR\" style={{position:'absolute', top: '30%', width: '120px', height: '120px', ...centerBgImg(`${this.props.player.src}/head.png`), backgroundColor: character_bg}} />\r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass BattleArena extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n        this.select.focus();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n    }\r\n\r\n    handleKeyDown(event) {\r\n        const keyCode = event.keyCode;\r\n        if(ARROW_KEYCODES.includes(keyCode)) {\r\n            this.select.focus();\r\n        } else if(ENTER_KEY.includes(keyCode)) {\r\n            if(this.select.disabled)\r\n                return;\r\n            this.select.disabled = true;\r\n            this.props.submitMove(this.select.value);\r\n            setTimeout(function() {\r\n                if(this.select) {\r\n                    this.select.disabled = false; \r\n                    this.select.focus();\r\n                }\r\n            }.bind(this), 1200);\r\n        }\r\n    }\r\n\r\n    render() {\r\n            return(\r\n                <div  id=\"battle\" style={{position:'absolute', width:'100%', height:'100%', display:'flex', flexDirection:'column', justifyContent:'space-between', backgroundImage: 'repeating-linear-gradient(#def3c6, #def3c6 20px, #e7f6db 20px, #e7f6db 23px)'}}>\r\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', width:'100%', height: '25%', marginBottom: '5px'}}>\r\n                         <PlayerInfo player={this.props.battle.player} reverse={false} blink={this.props.battle.lastWinner===-1} />    \r\n                         <PlayerInfo player={this.props.battle.npc} reverse={true} blink={this.props.battle.lastWinner===1}/>\r\n                    </div>\r\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', width:'100%', height: '50%', marginBottom: '5px'}}>\r\n                        <MoveDiv move={this.props.battle.player.lastMove} reverse={false} blink={this.props.battle.lastWinner===-1}/>\r\n                        <MoveDiv move={this.props.battle.npc.lastMove} reverse={true} blink={this.props.battle.lastWinner===1}/>\r\n                    </div>\r\n                    <div style={{display: 'flex', width: '100%', height: '25%'}}>\r\n                        <select defaultValue={ROCK} style={{fontFamily:'gameboy_lg', fontSize: getFontSize(3), overflowY:'hidden', width: '30%', backgroundColor:'#f9f6d6', ...solidBorder(8, '#4d655e', 10)}} ref={select => this.select = select} size={3}>\r\n                                <option value={ROCK} >Rock</option>\r\n                                <option value={PAPER}>Paper</option>\r\n                                <option value={SCISSORS}>Scissors</option>\r\n                        </select>\r\n                        <Summary summary={this.props.battle.summary} />\r\n                    </div>\r\n                </div> \r\n            );\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Battle extends Component {\r\n\r\n    componentDidMount() {\r\n        if(this.props.battle.inIntro){\r\n            setTimeout(function() {\r\n                if(this.props) \r\n                    this.props.endIntro();\r\n            }.bind(this), 3000);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let UI_COMPONENT = null, AUDIO_COMPONENT = null;\r\n        if(this.props.battle.inIntro) {\r\n               UI_COMPONENT =  <BattleIntro player={this.props.battle.player} npc={this.props.battle.npc} />;\r\n               AUDIO_COMPONENT = <ReactHowler src={this.props.battle.music} loop={true} html5={false} volume={0.5}/>;\r\n\r\n        } else if(this.props.battle.inEnd) {\r\n                UI_COMPONENT = <BattleEnd player={this.props.battle.player} winner={this.props.battle.finalWinner} closeBattle={this.props.closeBattle} />;\r\n                AUDIO_COMPONENT = <ReactHowler src={BATTLE_END_MUSIC} volume={0.3}/>;\r\n        \r\n        } else {\r\n               UI_COMPONENT = <BattleArena battle={this.props.battle} submitMove={this.props.submitMove} />;\r\n               AUDIO_COMPONENT = <ReactHowler src={this.props.battle.music} loop={true} html5={false} volume={0.5}/>;\r\n        } \r\n        return(\r\n            <div>\r\n                {UI_COMPONENT}\r\n                {AUDIO_COMPONENT}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Battle);","import React, { Component } from 'react';\r\nimport { BATTLE_NUM_GANG_MEMBERS, PORTAL_ENTER, PORTAL_LEAVE } from '../helpers/constants';\r\nimport {connect} from 'react-redux';\r\nimport { solidBorder, centerBgImg, getRounded, getKeyDiv, getLevelColor, getWinPercColor, getFontSize } from '../helpers/funcs';\r\nimport { SaveGameToDisk } from '../redux/ActionCreators';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        player: state.player,\r\n    });\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n    return({\r\n        saveGame: () => { dispatch(SaveGameToDisk()); },\r\n    });\r\n}\r\n\r\nconst bgStyle = (bgcolor, bordercolor='white') => {\r\n    return({\r\n        padding: '5px',\r\n        backgroundColor: bgcolor,\r\n        ...solidBorder(2, bordercolor , 5),\r\n    });\r\n}\r\n\r\nconst getPortalInstruction = (portal) => {\r\n    let targetname = \"\", action = PORTAL_LEAVE;\r\n    if(portal.type.name===PORTAL_ENTER) {\r\n        action = PORTAL_ENTER;\r\n        targetname = portal.target.name;\r\n    }\r\n    return (<div>Use {getKeyDiv(\"E\")} to {action} {targetname}</div>);\r\n}\r\n\r\nconst AwareComponent = (props) => {\r\n\r\n    let instruction = props.player.nearbyNPC!==null? <div>Use {getKeyDiv(\"SPACE\")} to talk</div> : null;\r\n    instruction = props.player.nearbyGameObj!==null? <div>Use {getKeyDiv(\"P\")} to pickup</div> : instruction;\r\n    instruction = props.player.nearbyPortal!==null?  getPortalInstruction(props.player.nearbyPortal) : instruction;\r\n\r\n    return(\r\n        <div id=\"aware\" style={{display:props.player.interacting?'none':'block'}}>\r\n            {instruction}\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Stats extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSaveBtnClick = this.handleSaveBtnClick.bind(this);\r\n    }\r\n\r\n\r\n    handleSaveBtnClick() {\r\n        this.props.saveGame();\r\n    }\r\n\r\n    render() {\r\n\r\n        const bg_color = 'lightgrey';\r\n\r\n        const style = {\r\n            width:  this.props.width,\r\n            height: 80,\r\n            margin:  'auto',\r\n            marginTop: '20px',\r\n            borderLeft:'10px solid white',\r\n            borderRight:'10px solid white',\r\n            borderTop: '5px solid white',\r\n            backgroundColor: bg_color,\r\n            color: 'black',\r\n            fontFamily: 'gameboy',\r\n            fontSize: getFontSize(1.5),\r\n            display:'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems:'center',\r\n        }\r\n\r\n        const level = this.props.player.battle.level;\r\n        const winperc = getRounded(this.props.player.battle.won*100/(this.props.player.battle.won + this.props.player.battle.lost))\r\n\r\n        return(\r\n            <div id=\"stats\" style={style}>\r\n                <div style={{width:'55%', display:'flex', alignItems:'center'}}>\r\n                    <div style={{width:80, height:80, ...centerBgImg( `${this.props.player.skin.src}/head.png`), backgroundColor:bg_color}}/>\r\n                    <div style={{display:'flex', flexDirection:'column', justifyContent:'center'}}>\r\n                        <div style={{margin:'5px', alignSelf:'flex-start'}}> {this.props.player.name} </div>\r\n                        <div style={{display:'flex'}}>\r\n                            <div style={{margin:'5px', alignSelf:'flex-end', ...bgStyle(getLevelColor(level))}}> Lvl:{level} </div>\r\n                            <div style={{margin:'5px', alignSelf:'flex-end', ...bgStyle(getLevelColor(level))}}> Exp:{this.props.player.battle.exp} </div>\r\n                            <div style={{margin:'5px', alignSelf:'flex-end', ...bgStyle(getWinPercColor(winperc))}}> Win%:{winperc}</div>\r\n                            <div style={{margin:'5px', alignSelf:'flex-end', ...bgStyle('orange')}}>{`Tribes Defeated: ${Object.keys(this.props.player.battle.defeatedGangMembers).length}/${BATTLE_NUM_GANG_MEMBERS}`}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{width:'35%', height:'70%', ...solidBorder(2, '#DB5435', 10), backgroundColor:'#639AA1', color:'white', display:'flex', flexDirection:'column', justifyContent:'center', paddingLeft:'10px'}}>\r\n                    <AwareComponent player={this.props.player}/>\r\n                </div>\r\n                <div style={{display:'flex', alignItems: 'center'}}>\r\n                    <button disabled={(this.props.player.isAnimating || this.props.player.frozen || this.props.player.inBattle || this.props.player.interacting)} \r\n                            style={{margin:'5px', ...bgStyle(\"#FD974F\" , '#57ABB3'), backgroundColor: '#FD974F', fontFamily:'gameboy'}} onClick={this.handleSaveBtnClick}><FontAwesomeIcon style={{color:\"white\", marginBottom:'4px'}} size=\"2x\" icon={faSave}/> Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Stats);","import React, {Component} from 'react';\r\nimport Player from './PlayerComponent';\r\nimport Map from './MapComponent';\r\nimport { AddMap, LoadGameFromDisk, InitViewportAction  } from '../redux/ActionCreators';\r\nimport { level } from '../data/Levels/1/index';\r\nimport { connect } from 'react-redux';\r\nimport ConversationDisplay from './ConversationDisplayComponent';\r\nimport Inventory from './InventoryComponent';\r\nimport Loading from './LoadingComponent';\r\nimport Battle from './BattleComponent';\r\nimport Stats from './StatsComponent';\r\nimport { PROPS_PATH } from '../helpers/constants';\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        map: state.map,\r\n        viewport: state.viewport,\r\n        battle: state.battle,\r\n        statemanager: state.statemanager,\r\n    });\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n    return({\r\n        loadMap: (level) => { dispatch(AddMap(level)); },\r\n        loadGameFromDisk: () => { dispatch(LoadGameFromDisk()); },\r\n        initViewport: (dims) => { dispatch(InitViewportAction(dims)); },\r\n    });\r\n}\r\n\r\nclass World extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initViewport([this.props.width, this.props.height]);\r\n        if(!this.props.loadgame)\r\n            this.props.loadMap(level);\r\n        else {\r\n            this.props.loadGameFromDisk()\r\n        }\r\n    }\r\n\r\n    \r\n    render() {\r\n        \r\n        const worldStyle = {\r\n            position: 'relative',\r\n            margin:  'auto',\r\n            width: this.props.width,\r\n            height: this.props.height,\r\n            border: '10px solid white',\r\n            overflow: 'hidden',\r\n            backgroundColor: 'black',\r\n        }\r\n\r\n        if(this.props.map.isLoading) {\r\n            return(\r\n                <div id=\"world\"  style={{...worldStyle, marginTop:'60px'}}>\r\n                    <Loading msg=\"Loading Map\"/>\r\n                </div>\r\n            );\r\n        } else if (this.props.statemanager.savingState) {\r\n            return(\r\n                <div id=\"world\"  style={{...worldStyle, marginTop:'60px'}}>\r\n                    <Loading msg=\"Freezing state\"/>\r\n                </div>\r\n            );\r\n        } else if(this.props.battle.isOpen) {\r\n            return(\r\n                <div id=\"world\"  style={{...worldStyle, marginTop:'60px'}}>\r\n                    <Battle battle={this.props.battle} />\r\n                </div> \r\n            );\r\n        } \r\n        else {\r\n            return(\r\n                <React.Fragment>\r\n                    <Stats width={this.props.width} />\r\n                    <div id=\"world\" style={worldStyle}>\r\n                        <Map map={this.props.map} viewport={this.props.viewport}/>\r\n                        <Player viewport={this.props.viewport} handleBack={this.props.handleBack}/>\r\n                        <ConversationDisplay />\r\n                        <Inventory />\r\n                    </div>\r\n                    <img src={`${PROPS_PATH}/loading.png`} alt=\"Loading\" style={{display:'none'}}></img>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(World);","import React, {Component} from 'react';\r\nimport { SAVED_GAME, PROPS_PATH } from '../helpers/constants';\r\nimport { solidBorder, centerBgImg, getFontSize } from '../helpers/funcs';\r\n\r\n\r\n\r\nconst checkSavedGame = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem(SAVED_GAME);\r\n        return serializedState!==null;\r\n      } catch (err) {\r\n        alert(\"Issue accessing local storage. There will be problem in saving the game!\");\r\n        return false;\r\n      }\r\n}\r\n\r\n\r\n\r\nconst MenuBtn = (props) => {\r\n    \r\n    const basestyle = {\r\n        width:'350px',\r\n        padding: '10px',\r\n        fontFamily: 'pixel',\r\n        fontSize: getFontSize(2),\r\n        margin:'10px',\r\n        backgroundColor: '#FD974F',\r\n        ...solidBorder(2, '#57ABB3', 5),\r\n    };\r\n\r\n    const disbaledstyle = {\r\n        ...basestyle,\r\n        color: 'black',\r\n        opacity: '0.5',\r\n    };\r\n\r\n    if(props.disabled) {\r\n        return(\r\n            <button disabled style={disbaledstyle}>{props.title}</button>\r\n        )\r\n    } else {\r\n        return(\r\n            <button onClick={function() {props.onClick();}} style={basestyle}>{props.title}</button>\r\n        )\r\n    }\r\n}\r\n\r\nclass MainMenu extends Component {\r\n    render() {\r\n\r\n        const style = {\r\n            position: 'absolute',\r\n            left: 0, top: 0,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent:'center',\r\n            alignItems: 'center',\r\n        }\r\n\r\n        return(\r\n            <div style={{...style, width: this.props.width, height: this.props.height}}>\r\n                <div style={{position:'relative', width:'100%', height: '60%', overflow:'hidden'}}>\r\n                    <div className=\"animateTitle\" style={{position:'absolute',width:\"100%\", height:\"100%\",...centerBgImg(`${PROPS_PATH}/title.png`, null, 'auto')}}/>\r\n                </div>\r\n                <div className=\"showMenu\" style={{position:'relative', width:'100%', height: '40%', display:'flex', flexDirection:'column', alignItems:'center', opacity:0}}>\r\n                    <MenuBtn title=\"Start New Game\" disabled={false} onClick={this.props.startNewGame}/>\r\n                    <MenuBtn title=\"Load Game\" disabled={!checkSavedGame()} onClick={this.props.loadGame}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainMenu;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { centerBgImg, solidBorder, playSoundEffect, getFontSize } from '../helpers/funcs';\r\nimport { SetPlayerInfoAction, StartNewJourneyAction } from '../redux/ActionCreators';\r\nimport { BEEP_3_SOUND, PROPS_PATH } from '../helpers/constants';\r\n\r\nconst SELECT_URL = `${PROPS_PATH}/playerselect/`;\r\nconst NAME_MIN = 3, NAME_MAX = 15;\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return({\r\n        initPlayerInfo: ({name, character}) => { dispatch(SetPlayerInfoAction(name, character)) },\r\n        startNewJourney: () => { dispatch(StartNewJourneyAction()); },\r\n    });\r\n}\r\n\r\nconst checkName = (name) => {\r\n    var pattern = /^[a-z]{3,15}$/i;\r\n    return pattern.test(name);\r\n}\r\n\r\nconst CharacterPane = (props) => {\r\n    return(\r\n        <div style={{width:220, height:300}} onClick={function(){ props.click(props.option);}} >\r\n            <button className={props.option===props.selected?\"selected\":\"\"}  style={{width:'100%', height:'100%', ...centerBgImg(`${SELECT_URL}${props.option}.png`, props.bgColor, 'crop')}}></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass PlayerSelect extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCharacterClick = this.handleCharacterClick.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.validateAndSend = this.validateAndSend.bind(this);\r\n        this.state = {\r\n            character: null,\r\n            name: \"\",\r\n            errmsg:\"\"\r\n        }\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        playSoundEffect(BEEP_3_SOUND);\r\n        this.setState({\r\n            name: event.target.value,\r\n            errmsg:\"\"\r\n        })\r\n    }\r\n\r\n    handleCharacterClick(option) {\r\n        playSoundEffect(BEEP_3_SOUND);\r\n        this.setState({\r\n            character: option,\r\n            errmsg:\"\"\r\n        });\r\n    }\r\n\r\n    validateAndSend() {\r\n        if(this.state.character===null) {\r\n            this.setState(\r\n                { errmsg: \"Please select an avatar!\", }\r\n            );\r\n            return;\r\n        } else if(!checkName(this.state.name)) {\r\n            this.setState(\r\n                { errmsg: `Invalid Name!`,}\r\n            );\r\n            return;\r\n        } else {\r\n            this.props.startNewJourney();\r\n            this.props.initPlayerInfo(this.state);\r\n            this.props.startJourney();\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const style = {\r\n            position: 'absolute',\r\n            left: '50%',\r\n            marginTop: 10,\r\n            transform: 'translate(-50%, 0%)',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            fontFamily: 'pixel',\r\n            fontSize: getFontSize(3),\r\n        }\r\n\r\n        return(\r\n            <div className=\"animateTitle\" style={{...style, width: '100%', height: '100%'}}>\r\n                <button onClick= {this.props.handleBack} style={{padding:'5px', marginLeft:'5px', backgroundColor: '#FD974F', alignSelf:'flex-start',...solidBorder(1, '#57ABB3', 5)}}><i className=\"fa fa-arrow-left fa-2x\"></i></button>\r\n                <div style={{margin:'20px', padding:'10px', color:'black', backgroundColor:'#FD974F', borderTop:'2px #57ABB3 solid', borderBottom:'2px #57ABB3 solid'}}>Select Your Avatar</div>\r\n                <div style={{width:'80%', height:'60%', display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center',}}>\r\n                    <CharacterPane option=\"player_1\" click={this.handleCharacterClick} selected={this.state.character} bgColor='#FFE0C9'/>\r\n                    <CharacterPane option=\"player_2\" click={this.handleCharacterClick} selected={this.state.character} bgColor='#B0F8FF'/>\r\n                </div>\r\n                <div style={{width:'90%', height: '50px' , margin:'10px',display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                    <label htmlFor = \"player\" style={{marginRight:'20px', fontSize:getFontSize(2), color:'black'}}> Avatar name </label> \r\n                    <div style={{width:'60%', fontFamily:'pixel',}}>\r\n                        <input onChange={this.handleNameChange} type = \"text\" name = \"player\" id = \"player\" style={{width:'100%', fontFamily:'pixel' ,fontSize:getFontSize(2), color:'#57ABB3'}} value={this.state.name}/>\r\n                        <div style={{width:'100%', fontSize: getFontSize(1), color:'grey'}}>{NAME_MIN} to {NAME_MAX} english alphabet characters</div>\r\n                    </div>\r\n                </div>\r\n                <button onClick={this.validateAndSend} style={{width:350, fontFamily:'pixel',fontSize:getFontSize(2.5), margin:'50px', padding:'10px' ,backgroundColor: '#FD974F', ...solidBorder(2, '#57ABB3', 5),}}>Start Journey</button>\r\n                <p style={{color:'red', fontSize:getFontSize(2)}}>{this.state.errmsg}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PlayerSelect);","export const RESOURCES = [\r\n    'assets/images/80/characters/baby/head.png',\r\n    'assets/images/80/characters/baby/sprite.png',\r\n    'assets/images/80/characters/boss/head.png',\r\n    'assets/images/80/characters/boss/sprite.png',\r\n    'assets/images/80/characters/bully_1/head.png',\r\n    'assets/images/80/characters/bully_1/sprite.png',\r\n    'assets/images/80/characters/cat_black/sprite.png',\r\n    'assets/images/80/characters/cat_orange/sprite.png',\r\n    'assets/images/80/characters/cat_white/sprite.png',\r\n    'assets/images/80/characters/chef/sprite.png',\r\n    'assets/images/80/characters/crush_1/head.png',\r\n    'assets/images/80/characters/crush_1/sprite.png',\r\n    'assets/images/80/characters/crush_2/head.png',\r\n    'assets/images/80/characters/crush_2/sprite.png',\r\n    'assets/images/80/characters/crush_3/head.png',\r\n    'assets/images/80/characters/crush_3/sprite.png',\r\n    'assets/images/80/characters/crush_4/head.png',\r\n    'assets/images/80/characters/crush_4/sprite.png',\r\n    'assets/images/80/characters/extras/player_tmp/head.png',\r\n    'assets/images/80/characters/extras/player_tmp/sprite_long.png',\r\n    'assets/images/80/characters/extras/player_tmp/sprite_tmp.png',\r\n    'assets/images/80/characters/extras/prof/head.png',\r\n    'assets/images/80/characters/extras/prof/professor_80.png',\r\n    'assets/images/80/characters/extras/prof/sprite.png',\r\n    'assets/images/80/characters/friend_1/head.png',\r\n    'assets/images/80/characters/friend_1/sprite.png',\r\n    'assets/images/80/characters/friend_2/head.png',\r\n    'assets/images/80/characters/friend_2/sprite.png',\r\n    'assets/images/80/characters/friend_3/head.png',\r\n    'assets/images/80/characters/friend_3/sprite.png',\r\n    'assets/images/80/characters/friend_4/head.png',\r\n    'assets/images/80/characters/friend_4/sprite.png',\r\n    'assets/images/80/characters/friend_5/head.png',\r\n    'assets/images/80/characters/friend_5/sprite.png',\r\n    'assets/images/80/characters/friend_6/head.png',\r\n    'assets/images/80/characters/friend_6/sprite.png',\r\n    'assets/images/80/characters/friend_7/head.png',\r\n    'assets/images/80/characters/friend_7/sprite.png',\r\n    'assets/images/80/characters/friend_8/head.png',\r\n    'assets/images/80/characters/friend_8/sprite.png',\r\n    'assets/images/80/characters/friend_9/head.png',\r\n    'assets/images/80/characters/friend_9/sprite.png',\r\n    'assets/images/80/characters/kid_1/head.png',\r\n    'assets/images/80/characters/kid_1/sprite.png',\r\n    'assets/images/80/characters/kid_2/head.png',\r\n    'assets/images/80/characters/kid_2/sprite.png',\r\n    'assets/images/80/characters/kid_3/head.png',\r\n    'assets/images/80/characters/kid_3/sprite.png',\r\n    'assets/images/80/characters/nurse/head.png',\r\n    'assets/images/80/characters/nurse/sprite.png',\r\n    'assets/images/80/characters/player_1/head.png',\r\n    'assets/images/80/characters/player_1/sprite.png',\r\n    'assets/images/80/characters/player_2/head.png',\r\n    'assets/images/80/characters/player_2/sprite.png',\r\n    'assets/images/80/characters/prof/head.png',\r\n    'assets/images/80/characters/prof/sprite.png',\r\n    'assets/images/80/characters/puppy_brown/sprite.png',\r\n    'assets/images/80/characters/puppy_white/head.png',\r\n    'assets/images/80/characters/puppy_white/sprite.png',\r\n    'assets/images/80/characters/tribe_1/head.png',\r\n    'assets/images/80/characters/tribe_1/sprite.png',\r\n    'assets/images/80/characters/tribe_2/head.png',\r\n    'assets/images/80/characters/tribe_2/sprite.png',\r\n    'assets/images/80/characters/tribe_3/head.png',\r\n    'assets/images/80/characters/tribe_3/sprite.png',\r\n    'assets/images/80/characters/tribe_4/head.png',\r\n    'assets/images/80/characters/tribe_4/sprite.png',\r\n    'assets/images/80/characters/tribe_5/head.png',\r\n    'assets/images/80/characters/tribe_5/sprite.png',\r\n    'assets/images/80/objectsAndProps/enter.png',\r\n    'assets/images/80/objectsAndProps/hen.png',\r\n    'assets/images/80/objectsAndProps/items.png',\r\n    'assets/images/80/objectsAndProps/leave.png',\r\n    'assets/images/80/objectsAndProps/loading.png',\r\n    'assets/images/80/objectsAndProps/PAPER.png',\r\n    'assets/images/80/objectsAndProps/portal.png',\r\n    'assets/images/80/objectsAndProps/ROCK.png',\r\n    'assets/images/80/objectsAndProps/SCISSORS.png',\r\n    'assets/images/80/objectsAndProps/title.png',\r\n    'assets/images/80/objectsAndProps/town.png',\r\n    'assets/images/80/objectsAndProps/playerselect/player_1.png',\r\n    'assets/images/80/objectsAndProps/playerselect/player_2.png',\r\n]","import React, {Component} from 'react';\r\nimport World from './WorldComponent';\r\nimport MainMenu from './MainMenuComponent';\r\nimport PlayerSelectComponent from './PlayerSelectComponent';\r\nimport { getViewportDim, playSoundEffect, centerBgImg, preloadPictures } from '../helpers/funcs';\r\nimport ReactHowler from 'react-howler';\r\nimport { MAIN_MENU_MUSIC, BEEP_2_SOUND, BEEP_LONG_SOUND, PROPS_PATH } from '../helpers/constants';\r\nimport Loading from './LoadingComponent';\r\nimport { RESOURCES } from '../data/resourcepaths';\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            menu: false,\r\n            playerselect: false,\r\n            world: false,\r\n            loadgame: false,\r\n            screenDim: getViewportDim(window.screen.width, window.screen.height),\r\n        }\r\n        this.bg = `${PROPS_PATH}/town.png`;\r\n        this.handleStartNewGame = this.handleStartNewGame.bind(this);\r\n        this.handleLoadGame = this.handleLoadGame.bind(this);\r\n        this.handleStartJourney = this.handleStartJourney.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        const renderMenu = function() {\r\n            this.setState({\r\n                loading: false,\r\n                menu: true,\r\n                playerselect: false,\r\n                world: false,\r\n                loadgame: false,\r\n            });\r\n        }.bind(this);\r\n\r\n        preloadPictures(RESOURCES, renderMenu);\r\n    }\r\n\r\n    handleStartNewGame() {\r\n        playSoundEffect(BEEP_2_SOUND);\r\n        this.setState({\r\n            menu: false,\r\n            playerselect: true,\r\n            world: false,\r\n            loadgame: false,\r\n        });\r\n    }\r\n\r\n    handleLoadGame() {\r\n        playSoundEffect(BEEP_LONG_SOUND);\r\n        this.setState({\r\n            menu: false,\r\n            playerselect: false,\r\n            world: true,\r\n            loadgame: true,\r\n        });\r\n    }\r\n\r\n    handleStartJourney() {\r\n        playSoundEffect(BEEP_LONG_SOUND);\r\n        this.setState({\r\n            menu: false,\r\n            playerselect: false,\r\n            world: true,\r\n            loadgame: false,\r\n        })\r\n    }\r\n\r\n    handleBack() {\r\n        playSoundEffect(BEEP_2_SOUND);\r\n        this.setState({\r\n            menu: true,\r\n            playerselect: false,\r\n            world: false,\r\n            loadgame: false,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const style = {\r\n            position: 'relative',\r\n            margin: '60px auto',\r\n            border: '10px solid white',\r\n            overflow: 'hidden',\r\n            width: this.state.screenDim[0],\r\n            height: this.state.screenDim[1],\r\n            ...centerBgImg(this.bg, 'black', 'cover'),\r\n        }\r\n\r\n        let UI_COMPONENT = null, AUDIO_COMPONENT = null;\r\n\r\n        if(this.state.loading) {\r\n            UI_COMPONENT = <Loading msg=\"Loading Resources\"/>;\r\n            AUDIO_COMPONENT = null;\r\n        } else if(this.state.menu) {\r\n            UI_COMPONENT = <div style={style}><MainMenu width={this.state.screenDim[0]} height={this.state.screenDim[1]} startNewGame={this.handleStartNewGame} loadGame={this.handleLoadGame} /></div>;\r\n            AUDIO_COMPONENT = <ReactHowler src={MAIN_MENU_MUSIC} loop={true} html5={false} volume={0.4}/>;\r\n        } else if(this.state.playerselect) {\r\n            UI_COMPONENT = <div style={style}><PlayerSelectComponent width={this.state.screenDim[0]} height={this.state.screenDim[1]}  startJourney={this.handleStartJourney} handleBack={this.handleBack}/></div>;\r\n            AUDIO_COMPONENT = <ReactHowler src={MAIN_MENU_MUSIC} loop={true} html5={false}  volume={0.4}/>;\r\n        } else if(this.state.world) {\r\n            UI_COMPONENT = <World width={this.state.screenDim[0]} height={this.state.screenDim[1]} loadgame={this.state.loadgame} handleBack={this.handleBack}/>;\r\n            AUDIO_COMPONENT = null;\r\n        } else {\r\n            UI_COMPONENT = <div style={{fontFamily:'gameboy', fontSize:'20px', color:'white'}}>Unknown error. PLEASE RELOAD PAGE.</div>;\r\n            AUDIO_COMPONENT = null;\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                {UI_COMPONENT}\r\n                {AUDIO_COMPONENT}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import * as ActionTypes from './ActionTypes';\r\nimport { DOWN } from '../helpers/constants';\r\nimport { getValue } from '../helpers/funcs';\r\nimport { SKINS } from '../data/skins';\r\n\r\nconst DEFAULT_SKIN = \"player_1\";\r\n\r\nconst INITIAL_STATE = { \r\n                        name: \"PLAYER\",\r\n                        skin: SKINS[DEFAULT_SKIN],\r\n                        position: [0, 0],\r\n                        direction: DOWN,\r\n                        spriteLocation: SKINS[DEFAULT_SKIN][DOWN],\r\n                        isAnimating: false,\r\n                        nextPosition: [],\r\n                        walkIndex: 0,\r\n                        frameInterval: 0,\r\n                        interacting: false,\r\n                        frozen: false,\r\n                        nearbyNPC: null,\r\n                        nearbyGameObj: null,\r\n                        nearbyPortal: null,\r\n                        inBattle: false,\r\n                        battle: {\r\n                                level: 1,\r\n                                exp: 0,\r\n                                won: 0,\r\n                                lost: 0,\r\n                                defeatedGangMembers:{},\r\n                        }\r\n        };\r\n\r\nconst getUpdatedGangMembersList = (defeatedGangMembers, newGangMember) => {\r\n        let newDefeatedGangMembers = {...defeatedGangMembers};\r\n        if(newGangMember!==null) {\r\n                newDefeatedGangMembers[newGangMember] = 1;\r\n        } \r\n        return(newDefeatedGangMembers);\r\n}\r\n\r\n\r\nexport const Player = (state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n                return({\r\n                        ...INITIAL_STATE,\r\n                });\r\n        case ActionTypes.ADD_MAP:\r\n                return({\r\n                        ...state, \r\n                        position: action.payload.player.position, \r\n                        direction: getValue(state.direction, action.payload.player.direction),\r\n                        spriteLocation: state.skin[getValue(state.direction, action.payload.player.direction)],\r\n                        isAnimating: false,\r\n                        nextPosition: [],\r\n                        walkIndex: 0,\r\n                        interacting: false,\r\n                        frozen: false,\r\n                        nearbyNPC: null,\r\n                        nearbyGameObj: null,\r\n                        nearbyPortal: null,\r\n                        inBattle: false,\r\n                        battle: {\r\n                                ...action.payload.secondary? state.battle:INITIAL_STATE.battle, \r\n                        }\r\n                });\r\n        case ActionTypes.SET_PLAYER_INFO:\r\n                return({\r\n                        ...state,\r\n                        name: action.payload.name,\r\n                        skin: SKINS[action.payload.skinIdx],\r\n\r\n                });\r\n        case ActionTypes.UPDATE_PLAYER_POSITION:\r\n                return({...state, \r\n                        position: action.payload.position, \r\n                        walkIndex: (state.walkIndex+1)%state.skin.walkSpriteCount\r\n                });\r\n        case ActionTypes.UPDATE_PLAYER_DIRECTION:\r\n                return({...state, \r\n                        direction: action.payload.direction, \r\n                        spriteLocation: state.skin[action.payload.direction]\r\n                });\r\n        case ActionTypes.UPDATE_PLAYER_ANIMATION:\r\n                return({...state, \r\n                        isAnimating: action.payload.isAnimating, \r\n                        nextPosition: action.payload.newpos, \r\n                        walkIndex: 0\r\n                });\r\n        case ActionTypes.SET_DIALOG_STATUS:\r\n                return({\r\n                        ...state,\r\n                        interacting: true,\r\n                });\r\n        case ActionTypes.RESET_DIALOG_STATUS:\r\n                return({\r\n                        ...state,\r\n                        interacting: false,\r\n                });\r\n        \r\n        case ActionTypes.SAVE_STATE_INITIATED:\r\n                return({\r\n                        ...state,\r\n                        frozen: true,\r\n                });\r\n        case ActionTypes.SAVE_STATE_END:\r\n                return({\r\n                        ...state,\r\n                        frozen: false,\r\n                });\r\n\r\n        case ActionTypes.RESTORE_STATE:\r\n                return({\r\n                        ...action.payload.state.player,\r\n                        battle: {...state.battle},\r\n                        direction: state.direction,\r\n                        spriteLocation: state.skin[state.direction],\r\n                        frozen: false,\r\n                });\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n                return({\r\n                        ...action.payload.state.player,\r\n                                frozen: false,\r\n                });\r\n        case ActionTypes.UPDATE_NEARBY_NPC: \r\n                return({\r\n                        ...state,\r\n                        nearbyNPC: action.payload.npcId,\r\n                });\r\n        case ActionTypes.UPDATE_NEARBY_GAMEOBJ: \r\n                return({\r\n                        ...state,\r\n                        nearbyGameObj: action.payload.id,\r\n                });\r\n        case ActionTypes.UPDATE_NEARBY_PORTAL: \r\n                return({\r\n                        ...state,\r\n                        nearbyPortal: action.payload.portal? {...action.payload.portal}:null,\r\n                });\r\n        case ActionTypes.START_BATTLE:\r\n                return({\r\n                        ...state,\r\n                        inBattle: true,\r\n                });\r\n        case ActionTypes.END_BATTLE:\r\n                return({\r\n                        ...state,\r\n                        inBattle: false,\r\n                        battle: {\r\n                                level: action.payload.player.newlevel,\r\n                                exp: action.payload.player.newexp,\r\n                                won: action.payload.battleWinner===1? state.battle.won+1: state.battle.won,\r\n                                lost: action.payload.battleWinner===-1? state.battle.lost+1: state.battle.lost,\r\n                                defeatedGangMembers: getUpdatedGangMembersList(state.battle.defeatedGangMembers, action.payload.player.gangMember),\r\n                        },\r\n                });\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nconst INITIAL_STATE = { \r\n                        name: null,\r\n                        tiles: [],\r\n                        width: 0,\r\n                        height: 0,\r\n                        isLoading: true,\r\n                        src: null,\r\n                        audioSrc: null,\r\n                    }\r\n\r\nexport const Map = (state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n            return({\r\n                ...INITIAL_STATE,\r\n            });\r\n\r\n        case ActionTypes.ADD_MAP:\r\n            return({...state, \r\n                    name: action.payload.name,\r\n                    tiles: action.payload.tiles, \r\n                    width: action.payload.width,\r\n                    height: action.payload.height,\r\n                    src: action.payload.src,\r\n                    audioSrc: action.payload.audioSrc,\r\n                    isLoading: false,\r\n                    });\r\n        case ActionTypes.MAP_LOADING:\r\n            return({\r\n                ...state,\r\n                isLoading: true,\r\n            });\r\n        case ActionTypes.RESTORE_STATE:\r\n            return({\r\n                ...action.payload.state.map,\r\n                isLoading: false,\r\n            });\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n            return({\r\n                ...action.payload.state.map,\r\n                isLoading: false,\r\n            });\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n                        start: [0, 0],\r\n                        end: [],\r\n                        width:0,\r\n                        height:0,\r\n                        viewportDims:[0, 0], //width X height\r\n                        camera:[[0,0],[0,0]],\r\n                    }\r\n\r\nexport const ViewPort = ( state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.INIT_VIEWPORT_DIMS:\r\n            return({\r\n                ...state,\r\n                viewportDims: action.payload.viewportDims,\r\n                camera: action.payload.camera,\r\n            })\r\n        case ActionTypes.ADD_MAP:\r\n            return({...state,\r\n                        start: action.payload.viewport.start,\r\n                        end: action.payload.viewport.end,\r\n                        width:action.payload.width, \r\n                        height: action.payload.height,\r\n                    });\r\n        case ActionTypes.UPDATE_MAP_ORIGIN:\r\n            return({...state,  start: action.payload.origin,\r\n                                end: [action.payload.origin[0]+state.width, action.payload.origin[1]+state.height]});\r\n\r\n        case ActionTypes.RESTORE_STATE:\r\n            return({\r\n                ...action.payload.state.viewport,\r\n            });\r\n\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n            return({\r\n                ...action.payload.state.viewport,\r\n            });\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\nimport {tileToMapCoordinates} from '../helpers/funcs';\r\nimport {TILE_SIZE } from '../helpers/constants';\r\n\r\nconst INITIAL_STATE = {\r\n    list:  [],\r\n    frozen: false,\r\n  }\r\n\r\nexport const NPC = (state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n            return({\r\n                ...INITIAL_STATE,\r\n            });\r\n\r\n        case ActionTypes.ADD_MAP:\r\n            if(!action.payload.npc)\r\n                return state;\r\n            return(\r\n                { \r\n                    frozen: false,\r\n                    list :action.payload.npc.map( npc => {\r\n                        return({...npc, \r\n                                position: tileToMapCoordinates(npc.pathArr[0], TILE_SIZE),\r\n                                spriteLocation: npc.skin[npc.direction],\r\n                                defaultDirection: npc.direction,\r\n                                isAnimating: false,\r\n                                nextPosition: [],\r\n                                walkIndex: 0,\r\n                                pathIdx: 0,\r\n                                pathDir: 1,\r\n                                lastUpdated: performance.now(),\r\n                                isWaiting: false,\r\n                                interacting: false,\r\n                                battle: 'battle' in npc? npc.battle: false,\r\n                                battlerType: 'battlerType' in npc? npc.battlerType: null,\r\n                                inBattle: false,\r\n                                battleFlag: 'battleFlag' in npc? npc.battleFlag : false,\r\n                                defeatedCount: 'defeatedCount' in npc? npc.defeatedCount: 0,\r\n                                talkFlag: 'talkFlag' in npc? npc.talkFlag: true,\r\n                            })\r\n                        })\r\n                }\r\n            );\r\n        case ActionTypes.UPDATE_NPC_POSITION:\r\n                return({\r\n                    ...state,\r\n                    list: state.list.map( npc => {\r\n                            if(npc.id===action.payload.id)\r\n                                return({...npc, \r\n                                        position: action.payload.position, \r\n                                        walkIndex: (npc.walkIndex+1)%npc.skin.walkSpriteCount,\r\n                                });\r\n                            else\r\n                                return npc;\r\n                    })\r\n                });\r\n                    \r\n        case ActionTypes.UPDATE_NPC_DIRECTION:\r\n                return({\r\n                    ...state,\r\n                    list: state.list.map( npc => {\r\n                        if(npc.id===action.payload.id)\r\n                            return({...npc,  \r\n                                    direction: action.payload.direction, \r\n                                    spriteLocation: npc.skin[action.payload.direction]\r\n                                });\r\n                        else\r\n                            return npc;\r\n                    })\r\n                });\r\n\r\n        case ActionTypes.UPDATE_NPC_ANIMATION:\r\n                return({\r\n                    ...state,\r\n                    list: state.list.map( npc => {\r\n                        if(npc.id===action.payload.id) {\r\n                            let pathIdx = npc.pathIdx, \r\n                                pathDir = npc.pathDir,\r\n                                isWaiting = npc.isWaiting, lastUpdated = npc.lastUpdated;\r\n                            \r\n                            if(!action.payload.isAnimating) {\r\n                                lastUpdated = performance.now();\r\n                                pathIdx = pathIdx + pathDir;\r\n                                if(pathDir===1 && pathIdx===(npc.pathArr.length-1)) {\r\n                                    isWaiting = true;\r\n                                    pathDir = -1;\r\n                                } else if(pathDir===-1 && pathIdx===0) {\r\n                                    isWaiting = true;\r\n                                    pathDir = 1;\r\n                                }\r\n                            }\r\n                            return({...npc,  \r\n                                    isAnimating: action.payload.isAnimating, \r\n                                    nextPosition: action.payload.newpos, \r\n                                    pathIdx: pathIdx, \r\n                                    pathDir: pathDir,\r\n                                    isWaiting: isWaiting,\r\n                                    lastUpdated: lastUpdated\r\n                            });\r\n                        } else\r\n                            return npc;\r\n                    })\r\n                });\r\n                    \r\n        case ActionTypes.RESET_NPC_WAITING:\r\n                return({\r\n                    ...state,\r\n                    list: state.list.map( npc => {\r\n                        if(npc.id===action.payload.id)\r\n                            return({...npc,  \r\n                                    isWaiting: false,\r\n                                });\r\n                        else\r\n                            return npc;\r\n                    })\r\n                });\r\n        case ActionTypes.SET_DIALOG_STATUS:\r\n                return({\r\n                    ...state,\r\n                    list:  state.list.map( npc => {\r\n                        if(npc.id===action.payload.npcId)\r\n                            return({...npc,  \r\n                                    interacting: true,\r\n                                });\r\n                        else\r\n                            return npc;\r\n                    })\r\n                });\r\n        case ActionTypes.RESET_DIALOG_STATUS:\r\n                    return({\r\n                        ...state,\r\n                        list: state.list.map( npc => {\r\n                            if(npc.id===action.payload.npcId)\r\n                                return({...npc,  \r\n                                        interacting: false,\r\n                                        talkFlag: true,\r\n                                    });\r\n                            else\r\n                                return npc;\r\n                        })\r\n                    });\r\n        case ActionTypes.SAVE_STATE_INITIATED:\r\n                return({\r\n                    ...state,\r\n                    frozen: true,\r\n                });\r\n        case ActionTypes.SAVE_STATE_END:\r\n                return({\r\n                    ...state,\r\n                    frozen: false,\r\n                });\r\n        case ActionTypes.RESTORE_STATE:\r\n                return({\r\n                    list: action.payload.state.npc.list.map( npc => {\r\n                        return({\r\n                            ...npc,\r\n                            isWaiting: false,\r\n                        });\r\n                    } ),\r\n                    frozen: false,\r\n                });\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n                return({\r\n                    list: action.payload.state.npc.list.map( npc => {\r\n                        return({\r\n                            ...npc,\r\n                            isWaiting: false,\r\n                        });\r\n                    } ),\r\n                    frozen: false,\r\n                });\r\n\r\n        case ActionTypes.START_BATTLE:\r\n                return({\r\n                    ...state,\r\n                    list:  state.list.map( npc => {\r\n                        if(npc.id===action.payload.npc.id)\r\n                            return({...npc,  \r\n                                    inBattle: true,\r\n                                });\r\n                        else\r\n                            return npc;\r\n                    })\r\n                });\r\n        case ActionTypes.END_BATTLE:\r\n                    return({\r\n                        ...state,\r\n                        list: state.list.map( npc => {\r\n                            if(npc.id===action.payload.npcId)\r\n                                return({...npc,  \r\n                                        inBattle: false,\r\n                                        defeatedCount: action.payload.battleWinner===1? npc.defeatedCount+1:npc.defeatedCount,\r\n                                        battleFlag: true,\r\n                                    });\r\n                            else\r\n                                return npc;\r\n                        })\r\n                    });\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\nimport {tileToMapCoordinates} from '../helpers/funcs';\r\nimport {TILE_SIZE } from '../helpers/constants';\r\n\r\n\r\nexport const GameObject = (state = [], action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n            return([]);\r\n            \r\n        case ActionTypes.ADD_MAP:\r\n            let id=0;\r\n            if(!action.payload.gameobjects)\r\n                return state;\r\n            return(\r\n                action.payload.gameobjects.map( gameobject => {\r\n                    return({...gameobject, \r\n                            id: id++,\r\n                            position: tileToMapCoordinates(gameobject.position, TILE_SIZE),\r\n                    })\r\n                })\r\n            );\r\n        case ActionTypes.ADD_OBJECT_TO_INVENTORY:\r\n            return(state.filter( gameobject => (gameobject.id !== action.payload.object.id)));\r\n\r\n        case ActionTypes.RESTORE_STATE:\r\n            return(\r\n                action.payload.state.gameobjects.concat()\r\n            );\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n            return(\r\n                    action.payload.state.gameobjects.concat()\r\n            );\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    isOpen: false, \r\n    position: \"top\",\r\n    person1: {},\r\n    person2: {},\r\n    dialogIdx: 0,\r\n    speakerIdx: 0,\r\n    npcId: null,\r\n    battleConversation: false,\r\n };\r\n\r\nexport const Dialog = (state = {...INITIAL_STATE}, action) => {\r\n            switch(action.type) {\r\n                case ActionTypes.START_NEW_JOURNEY:\r\n                    return({\r\n                        ...INITIAL_STATE\r\n                    });\r\n                case ActionTypes.SET_DIALOG_STATUS:\r\n                    return({\r\n                        ...INITIAL_STATE,\r\n                        isOpen: true,\r\n                        position: action.payload.position,\r\n                        person1: action.payload.person1,\r\n                        person2: action.payload.person2,\r\n                        npcId: action.payload.npcId,\r\n                        dialogIdx: 0,\r\n                        speakerIdx: 0,\r\n                        battleConversation: action.payload.battleConversation, \r\n                    });\r\n                case ActionTypes.RESET_DIALOG_STATUS:\r\n                        return({\r\n                            ...INITIAL_STATE,\r\n                        });\r\n                case ActionTypes.NEXT_DIALOG:\r\n                    if(state.speakerIdx===0) {\r\n                        return({\r\n                            ...state,\r\n                            speakerIdx: 1,\r\n                        })\r\n                    } else {\r\n                        return({\r\n                            ...state,\r\n                            speakerIdx: 0,\r\n                            dialogIdx: (state.dialogIdx + 1) % state.person1.dialogs.length,\r\n                        })\r\n                    }\r\n                default: \r\n                    return state;\r\n            }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    isOpen: false, \r\n    HEALER : [],\r\n    CURRENCY: [],\r\n    EATABLE: [],\r\n };\r\n\r\nexport const Inventory = (state = {...INITIAL_STATE}, action) => {\r\n            switch(action.type) {\r\n                case ActionTypes.START_NEW_JOURNEY:\r\n                    return({\r\n                        ...INITIAL_STATE,\r\n                    });\r\n                    \r\n                case ActionTypes.TOGGLE_INVENTORY_DISPLAY:\r\n                    return({\r\n                        ...state,\r\n                        isOpen: !state.isOpen,\r\n                    });\r\n\r\n                case ActionTypes.ADD_OBJECT_TO_INVENTORY:\r\n                    let statecpy = {...state};\r\n                    statecpy[action.payload.object.type.type] = state[action.payload.object.type.type].concat(action.payload.object);\r\n                    return(statecpy);\r\n\r\n                case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n                    return({\r\n                        ...action.payload.state.inventory,\r\n                    });\r\n\r\n                default: \r\n                    return state;\r\n            }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n                        savingState: false,\r\n                        prevStates: [],\r\n                    }\r\n\r\nexport const StateManager = ( state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n            return({\r\n                ...INITIAL_STATE,\r\n            })\r\n        case ActionTypes.SAVE_STATE_INITIATED:\r\n            return({\r\n                    ...state,\r\n                    savingState: true,\r\n            });\r\n        case ActionTypes.SAVE_STATE:\r\n            const cpyPrevStates = [...state.prevStates];\r\n            cpyPrevStates.push(action.payload.state);\r\n            return({\r\n                ...state,\r\n                prevStates: cpyPrevStates,\r\n                savingState: false,\r\n            });\r\n        case ActionTypes.SAVE_STATE_END:\r\n            return({\r\n                    ...state,\r\n                    savingState: false,\r\n            });\r\n        case ActionTypes.RESTORE_STATE:\r\n            let statecpy = {\r\n                ...state,\r\n                prevStates: action.payload.prevStates,\r\n                savingState: false,\r\n            };\r\n            statecpy[action.payload.mapinfo.map] = {\r\n                gameobjects: action.payload.mapinfo.gameobjects,\r\n                npc: action.payload.mapinfo.npc,\r\n            }\r\n            return(statecpy);\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n            return({\r\n                ...action.payload.state.statemanager,\r\n                savingState: false,\r\n            });\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\nimport { BATTLE_MUSIC } from '../helpers/constants';\r\n\r\n\r\nconst squareMatrix = (n) => {\r\n    let matrix = [];\r\n    for(let i=0; i<n; i++) {\r\n        matrix.push(new Array(n).fill(0));\r\n    }\r\n    return matrix;\r\n}\r\n\r\nconst BASE_LIVES = 5;\r\n\r\n\r\nconst getLives = (level) => {\r\n    return(BASE_LIVES + (level-1)*2);\r\n}\r\n\r\nconst INITIAL_STATE = { \r\n                        isOpen: false,\r\n                        inIntro: true,\r\n                        inEnd: false,\r\n                        currRound: 0,\r\n                        player: {\r\n                            name: \"Player\",\r\n                            src: \"\",\r\n                            level: 1,\r\n                            exp: 0,\r\n                            lastMove: null,\r\n                            score: 0,\r\n                            lives: BASE_LIVES,\r\n                            maxLives: BASE_LIVES,\r\n                            markovMatrix: squareMatrix(3), \r\n                            initialStats: {\r\n                                level: 1,\r\n                                exp: 0,\r\n                            },\r\n                        },\r\n                        npc: {\r\n                            id: null,\r\n                            name: \"NPC\",\r\n                            src:\"\",\r\n                            level: 1,\r\n                            battlerType: null,\r\n                            lastMove: null,\r\n                            lives: BASE_LIVES,\r\n                            maxLives: BASE_LIVES,\r\n                            score: 0,\r\n                        },\r\n                        lastWinner: 0,\r\n                        finalWinner: 0,\r\n                        summary: \"Use arrow keys to select and press Enter\",\r\n                        music: null,\r\n                    };\r\n\r\nexport const Battle = (state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n            return({\r\n                ...INITIAL_STATE,\r\n            });\r\n        case ActionTypes.START_BATTLE:\r\n            return({\r\n                ...INITIAL_STATE,\r\n                isOpen: true,\r\n                player: {\r\n                    ...INITIAL_STATE.player,\r\n                    name: action.payload.player.name,\r\n                    src:action.payload.player.skin.src,\r\n                    level: action.payload.player.battle.level,\r\n                    exp: action.payload.player.battle.exp,\r\n                    lives: getLives(action.payload.player.battle.level),\r\n                    maxLives: getLives(action.payload.player.battle.level), \r\n                    markovMatrix: squareMatrix(3), \r\n                    initialStats: {\r\n                        level: action.payload.player.battle.level,\r\n                        exp: action.payload.player.battle.exp,\r\n                    },\r\n                },\r\n                npc: {\r\n                    ...INITIAL_STATE.npc,\r\n                    id: action.payload.npc.id,\r\n                    name: action.payload.npc.name,\r\n                    src: action.payload.npc.skin.src,\r\n                    level: action.payload.npc.level,\r\n                    battlerType: action.payload.npc.battlerType,\r\n                    lives: getLives(action.payload.npc.level),\r\n                    maxLives: getLives(action.payload.npc.level),  \r\n                },\r\n                music: 'battleMusic' in action.payload.npc? action.payload.npc.battleMusic: BATTLE_MUSIC,\r\n            })\r\n\r\n        case ActionTypes.END_BATTLE_INTRO:\r\n            return({\r\n                ...state,\r\n                inIntro: false,\r\n            });\r\n        case ActionTypes.SUBMIT_MOVES:\r\n            let cpyMatrix = [...state.player.markovMatrix];\r\n            if(state.player.lastMove!==null) {\r\n                cpyMatrix[state.player.lastMove][action.payload.playermove]+=1;   \r\n            } \r\n            return({\r\n                ...state,\r\n                currRound: state.currRound+1,\r\n                player: {\r\n                    ...state.player,\r\n                    lastMove: action.payload.playermove,\r\n                    score: action.payload.winner===1? state.player.score+1: state.player.score,\r\n                    lives: action.payload.winner===-1? Math.max(state.player.lives-1,0): state.player.lives,\r\n                    markovMatrix: cpyMatrix,\r\n                },\r\n                npc: {\r\n                    ...state.npc,\r\n                    lastMove: action.payload.npcmove,\r\n                    score: action.payload.winner===-1? state.npc.score+1: state.npc.score,\r\n                    lives: action.payload.winner===1? Math.max(state.npc.lives-1,0): state.npc.lives,\r\n                },\r\n                lastWinner: action.payload.winner,\r\n                summary: action.payload.summary,\r\n            });\r\n\r\n        case ActionTypes.END_BATTLE:\r\n            return({\r\n                ...state,\r\n                inEnd: true,\r\n                player: {\r\n                    ...state.player,\r\n                    level: action.payload.player.newlevel,\r\n                    exp: action.payload.player.newexp,\r\n                },\r\n                finalWinner: action.payload.battleWinner,\r\n            })\r\n        case ActionTypes.CLOSE_BATTLE:\r\n                return({\r\n                    ...state,\r\n                    isOpen: false,\r\n                })\r\n        default: \r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Player } from './player';\r\nimport { Map } from './map';\r\nimport { ViewPort } from './viewport';\r\nimport { NPC } from './npc';\r\nimport { GameObject } from './gameobject'\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Dialog } from './dialog';\r\nimport { Inventory } from './inventory';\r\nimport { StateManager } from './statemanager';\r\nimport { Battle } from './battle';\r\n\r\nconst rootReducer = combineReducers({\r\n    player : Player,\r\n    map: Map,\r\n    viewport: ViewPort,\r\n    npc: NPC,\r\n    gameobjects: GameObject,\r\n    dialog: Dialog,\r\n    inventory: Inventory,\r\n    statemanager: StateManager,\r\n    battle: Battle,\r\n});\r\n\r\n\r\nexport const ConfigureStore = () =>  createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n    \r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport './App.css';\r\nimport Main from './components/MainComponent';\r\nimport { ConfigureStore } from './redux/ConfigureStore';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={ConfigureStore()}>\r\n        <Main />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}