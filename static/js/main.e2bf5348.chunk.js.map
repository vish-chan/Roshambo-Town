{"version":3,"sources":["redux/ActionTypes.js","helpers/constants.js","helpers/funcs.js","data/script.js","redux/ActionCreators.js","data/skins.js","data/gameobjects.js","data/Maps/town_center.js","data/Levels/1/_home.js","data/Maps/home.js","data/Levels/1/_bakery.js","data/Maps/bakery.js","data/Maps/town_north.js","data/Maps/cave.js","data/Maps/hell.js","data/Levels/1/_town_north.js","data/Levels/1/_cave.js","data/Levels/1/_hell.js","data/Maps/town_south.js","data/Maps/library.js","data/Maps/gameroom.js","data/Levels/1/_library.js","data/Levels/1/_gameroom.js","data/Maps/hotel.js","data/Levels/1/index.js","data/Levels/1/_town_center.js","data/Levels/1/_town_south.js","data/Levels/1/_hotel.js","components/LoadingComponent.js","components/BattleComponent.js","components/StatsComponent.js","components/PlayerComponent.js","components/NPCManagerComponent.js","components/GameObjectManagerComponent.js","components/MapComponent.js","components/ConversationDisplayComponent.js","components/InventoryComponent.js","components/CustomModalComponent.js","components/WorldComponent.js","components/GameComponent.js","components/MainMenuComponent.js","components/PlayerSelectComponent.js","data/resourcepaths.js","components/MainComponent.js","redux/player.js","redux/map.js","redux/viewport.js","redux/npc.js","redux/gameobject.js","redux/dialog.js","redux/inventory.js","redux/statemanager.js","redux/battle.js","redux/ConfigureStore.js","App.js","serviceWorker.js","index.js"],"names":["ADD_MAP","LEFT","RIGHT","UP","DOWN","KEYCODES","ARROW_KEYCODES","SPACE_KEY","PICKUP_KEY","INVENTORY_KEY","ESC_KEY","VALID_KEYCODES","concat","PICKABLES","BOSS","GANG_MEMBER","SAVED_GAME","LEVEL_COLORS","L1","L2","L3","L4","L5","L6","AUDIO_PATH","IMAGES_PATH","MAPS_BASE","CHARACTER_SPRITES_BASE","PROPS_PATH","DRIP_SOUND","BEEP_SOUND","BEEP_2_SOUND","BEEP_3_SOUND","BEEP_LONG_SOUND","PICK_SOUND","LASER_SOUND","MAIN_MENU_MUSIC","TOWN_CENTER_MUSIC","TOWN_NORTH_MUSIC","TOWN_SOUTH_MUSIC","HOME_MUSIC","BAKERY_MUSIC","HOTEL_MUSIC","LIBRARY_MUSIC","GAMEROOM_MUSIC","CAVE_MUSIC","HELL_MUSIC","BATTLE_MUSIC","BATTLE_BOSS_MUSIC","BATTLE_GM_MUSIC","BATTLE_END_MUSIC","BASE_FONT_SIZE","getViewportDim","screenWidth","screenHeight","width","height","viewportdim","Math","min","getFontSize","multiplier","mapToViewport","mappos","mapstart","tileToMapCoordinates","tile","TILE_SIZE","mapCoordinatesToTiles","position","intervalList","customSetInterval","func","delay","npcid","id","setInterval","clearIntervals","props","Object","keys","i","length","clearInterval","timeoutList","customSetTimeout","setTimeout","getValue","stateparam","payloadparam","centerBgImg","image","color","size","backgroundColor","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","solidBorder","radius","border","borderRadius","getKeyDiv","keycode","fontSize","style","padding","display","getLevelColor","level","getWinPercColor","winperc","playSoundEffect","src","Audio","play","PLAYERDIALOGS","Frank","follows","starts","battleAccept","battleAsk","battleWin","battleLose","Dad","Joey","Ace","Tia","Nathan","John","Samantha","Eden","Tracer","Sean","Gambit","Chop","Molly","Jordan","Grindel","Tori","Ghissu","Razor","Prick","LT","Rose","Snyder","Kaloo","Goku","Misty","Trigger","Max","Maty","Damon","Tegan","Hunt","Fattu","Rock","Paper","Scissors","Beast","NPCDIALOGS","battleAcceptNeverDefeated","battleDeclineDefeated","battleDecline","observeMapBoundaries","newpos","mapwidth","mapheight","observeIdleNPC","npcList","filter","npc","isAnimating","observeAnimatingNPC","nextPosition","getNewPostion","oldpos","direction","movementSize","window","alert","getNewOrigin","start","getNPC","npclist","checkPortalEnter","playerdir","portaldir","UpdatePlayerPosition","keyCode","dispatch","getState","player","interacting","frozen","inBattle","VIEWPORT_WIDTH","viewport","viewportDims","VIEWPORT_HEIGHT","mapend","end","map","steps","skin","walkSpriteCount","movemap","frameMovementSize","UpdatePlayerDirectionAction","tiles","row","col","abs","observeImpassible","idlenpc","list","animatingnpc","UpdatePlayerAnimationAction","camera","viewportPos","observeCamera","viewportWidth","viewportHeight","mapScrollable","requestAnimationFrame","animatePlayer","nearbyNPC","UpdateNearbyNPCAction","battle","battleFlag","ForceBattleConversation","talkFlag","ForceNonBattleConversation","UpdatePlayerPositionAction","UpdateOriginAction","frameInterval","nearByNPC","checkNearbyIdleNPC","objects","getObjectForPickup","gameobjects","UpdateNearbyGameObjAction","nearbyGameObj","portals","getPortal","rotate","EnterPortal","getPositionEquality","pos1","pos2","gameobject","includes","type","getOppositeDirection","checkNearbyIdlePlayer","npcpos","observeIdlePlayer","playerpos","checkBattleEligibilty","playerlevel","npclevel","checkBossBattleEligibilty","defeatedGangMembersList","battlerType","defeatedGangMembers","oppdirection","UpdateNPCDirectionAction","SetConversationStatus","name","dialogs","dialog","replace","InitiateConversation","defeatedCount","UpdateConversation","speakerIdx","dialogIdx","person1","NextDialogAction","battleConversation","StartBattle","npcId","ResetConversationStatus","UpdateNPCPosition","stationary","isWaiting","performance","now","lastUpdated","waitInterval","ResetNPCWaiting","curdirection","pathArr","defaultDirection","pathIdx","pathDir","newdirection","oldirection","getNewDirection","observePlayer","UpdateNPCAnimationAction","animateNPC","UpdateNPCPositionAction","portal","SaveStateInitAction","saveStateandAddMap","SaveStateAction","AddMap","target","cpyPrevStates","statemanager","prevStates","oldState","pop","currentMap","currentGameobjects","currentMapNPCBattleStatus","checkandRestoreMap","LoadingMapAction","mapBg","Image","onload","RestoreStateAction","secondary","start_x","start_y","end_x","end_y","playerPosition","sm","AddMapAction","payload","BattleGetRandomMove","maxMove","floor","random","BattleGetNextMove","markovMatrix","lastMove","nextMove","predictedMoveIdx","reduce","maxIdx","currVal","currIdx","arr","move","BattleGetWinningMove","BattleMoveIndexToStr","BattleHandleMove","playerMove","playermove","npcmove","playerMarkovMatrix","playerLastMove","npcMove","winner","summary","playername","npcname","BattleSummary","UpdateBattleStatsAction","finalWinner","CheckBattleWinner","newexp","exp","getPlayerNewExp","score","newlevel","getPlayerLevel","EndBattle","gangMember","playerLevel","npcLevel","max","lives","battleWinner","updatedPlayerStats","CloseBattle","gameobjId","origin","person2","AddObjecttoInventory","object","state","SaveStateEndAction","currentMapInfo","mapinfo","RestoreStateFromDiskAction","getMergedNPCList","base","diff","diffnpc","vpstart","vpend","ActionTypes","audioSrc","SKINS","player_1","player_2","prof","friend_1","friend_2","friend_3","friend_4","friend_5","friend_6","friend_7","friend_8","friend_9","kid_1","kid_2","kid_3","nurse","chef","bully_1","crush_1","crush_2","crush_3","crush_4","tribe_1","tribe_2","tribe_3","tribe_4","tribe_5","boss","whitepuppy","brownpuppy","blackcat","whitecat","orangecat","baby","ITEMS_URL","PORTAL_URL","ENTER_URL","LEAVE_URL","GAMEOBJECTS","srcpos","effects","PORTALS","townCenter","_home","moveInterval","_bakery","battleMusic","townNorth","cave","hell","_townNorth","townSouth","library","gameroom","_library","hotel","Loading","justifyContent","alignItems","flexDirection","className","alt","fontFamily","msg","HealthBar","timeout","this","blink","hb","classList","add","bind","clearTimeout","remove","ref","marginRight","currhealth","maxhealth","left","top","transform","Component","PlayerInfo","reverse","alignSelf","margin","maxLives","MoveDiv","push","imgStyle","Summary","text","idx","p","animate","innerHTML","substring","animateText","overflowWrap","BattleEnd","handleKeyDown","handleTouchEnd","continue","continueKey","isMobile","winnerStr","winnerClass","levelColor","levelArrow","initialStats","event","closeBattle","from","to","speed","count","cont","opacity","addEventListener","removeEventListener","marginBottom","marginTop","BattleIntro","BattleArena","handleMoveSelect","moveelements","document","getElementsByClassName","disabled","submitMove","lastWinner","flexWrap","onClick","Battle","inIntro","endIntro","UI_COMPONENT","AUDIO_COMPONENT","music","loop","html5","volume","inEnd","connect","parseInt","bgStyle","bgcolor","bordercolor","AwareComponent","instruction","Stats","handleSaveBtnClick","saveGame","num","borderLeft","borderRight","borderTop","won","lost","isNaN","round","paddingLeft","icon","faSave","saveStateToLocalStorage","npcAnimating","serializedState","JSON","stringify","localStorage","setItem","err","PlayerSprite","playerStyle","walkIndex","spriteLocation","zIndex","playermarkerstyle","faCaretDown","Player","NPC","battlerMarkerIcon","faExclamation","self","faSkull","updateNPCPosition","npcStyle","battlemarkerstylebase","messagestylebase","textAlign","faEnvelope","NPCManager","NPCObj","key","GameObject","objStyle","GameObjectManager","GameObj","Map","Dialog","animateConversation","next","content","objref","p1","p2","isOpen","person","cleanBoard","POS","right","bottom","ConversationDisplay","InventoryItem","imageStyle","divSize","InventoryRow","countObj","item","GetInventoryItemCounts","inventorylist","rendergameobjects","gameobj","boxShadow","writingMode","textOrientation","InventoryDialog","inventoryStyle","inventory","Inventory","CustomModal","show","confirmLink","faCheckSquare","cancelLink","faWindowClose","World","touchstartX","touchstartY","touchendX","touchendY","handleTouchStart","handleTouchMove","toggleExitModalState","showExitModal","setState","preventDefault","touches","clientX","clientY","xDiff","yDiff","updatePlayerPosition","handleConversation","stopImmediatePropagation","pickupObject","toggleInventory","overflow","world","handleBack","gobj","Game","initViewport","loadgame","loadGameFromDisk","loadMap","isLoading","savingState","Fragment","getItem","parse","dims","checkSavedGame","MenuBtn","basestyle","disbaledstyle","title","MainMenu","startNewGame","loadGame","SELECT_URL","CharacterPane","click","option","selected","bgColor","PlayerSelect","handleCharacterClick","handleNameChange","validateAndSend","character","errmsg","value","test","startNewJourney","initPlayerInfo","startJourney","marginLeft","borderBottom","htmlFor","onChange","skinIdx","SetPlayerInfoAction","RESOURCES","LoadingResources","done","total","ceil","Main","loading","menu","playerselect","game","screenDim","screen","resourceTotal","resourceDone","bg","handleStartNewGame","handleLoadGame","handleStartJourney","pictureUrls","callback","j","loaded","img","renderMenu","preloadPictures","PlayerSelectComponent","INITIAL_STATE","getUpdatedGangMembersList","newGangMember","newDefeatedGangMembers","HEALER","CURRENCY","EATABLE","squareMatrix","n","matrix","Array","fill","getLives","currRound","rootReducer","combineReducers","action","statecpy","cpyMatrix","ConfigureStore","createStore","composeWithDevTools","applyMiddleware","thunk","App","store","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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AG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAI,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GAC7G,CAAG,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAI,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC5G,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAM,EA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9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAM,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAM,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAM,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAM,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAM,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAI,GAAK,GAAK,GAAM,EAAI,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAM,EAAK,GAC/E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC9E,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK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AAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAM,GAC3D,CAAG,GAAK,GAAK,GAAM,EAAK,EAAK,EAAK,EAAK,EAAI,GAAM,EAAK,EAAK,GAC3D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAI,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAI,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC1D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KAI9DhG,IAAI,GAAD,OAAKxF,EAAL,mBAEHoE,gBAAiB,UAEjB+S,SAAUtW,GCnCD4Z,GAAU,CAEnBjP,MAAO,CACH,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IACzF,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IACzF,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAO,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,GAAM,EAAK,EAAI,IACzF,CAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,IACzF,CAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,IACzF,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAI,EAAI,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IACrF,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAI,EAAI,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IACrF,CAAK,EAAK,EAAK,EAAK,EAAI,EAAI,EAAK,EAAI,EAAK,EAAI,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACrF,CAAG,EAAK,EAAK,EAAK,EAAI,EAAI,EAAK,EAAI,EAAK,EAAI,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,GAAK,GAAK,IACnF,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAI,EAAI,EAAK,EAAI,GAAK,GAAM,EAAK,EAAK,EAAK,GACtF,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAI,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACtF,CAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAK,EAAK,EAAI,EAAI,EAAK,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,GAChF,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAI,EAAI,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,IACrF,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,EAAK,EAAI,EAAI,EAAK,EAAK,EAAI,GAAK,GAAK,GAAK,GAAK,IACrF,CAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,EAAK,EAAI,EAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,GACtF,CAAI,EAAK,EAAI,GAAK,GAAM,EAAK,EAAK,EAAI,EAAK,EAAI,EAAI,EAAK,EAAK,EAAI,GAAK,GAAM,EAAK,EAAK,GACtF,CAAI,EAAK,EAAK,EAAI,GAAK,GAAM,EAAK,EAAI,EAAK,EAAI,EAAI,EAAK,EAAI,GAAK,GAAM,EAAK,EAAK,EAAK,GACtF,CAAI,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,GAAM,EAAG,GAAK,GAAM,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,IAItFhG,IAAI,GAAD,OAAKxF,EAAL,gBAEHoE,gBAAiB,UAEjB+S,SAAUlW,IC5BDyZ,GAAW,CAEpBlP,MAAO,CACH,CAAG,GAAK,GAAK,GAAK,GAAK,IACvB,CAAI,EAAK,EAAK,EAAK,EAAI,IACvB,CAAG,GAAM,EAAK,EAAK,EAAI,IACvB,CAAI,EAAK,EAAK,EAAK,EAAK,GACxB,CAAI,EAAI,GAAM,EAAI,GAAM,IAK5BhG,IAAI,GAAD,OAAKxF,EAAL,iBAEHoE,gBAAiB,UAEjB+S,SAAUjW,ICXDyZ,GAAW,CAGpBxL,KAAM,UAENlE,IAAKwP,GAGLlQ,OAAQ,CACJ5H,SAAU,CAAC,GAAI,GACf6G,UAAW,MAIfN,IAAM,CACF,CAEIjG,GAAI,EACJkM,KAAM,SACNhE,KAAMiM,GAAK,MACX5N,UAAW/K,EACX0R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,GAAI,CAAC,GAAG,GAAI,CAAC,GAAG,IAC9BzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd7D,QAAQ,EACRvH,MAAO,EACP0J,YpBOmB,mBoBJvB,CAEI7L,GAAI,EACJkM,KAAM,QACNhE,KAAMiM,GAAK,SACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,KACdzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CAEIvN,GAAI,EACJkM,KAAM,MACNhE,KAAMiM,GAAK,SACX5N,UAAWjL,EACX4R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,KACdzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CAEIvN,GAAI,EACJkM,KAAM,MACNhE,KAAMiM,GAAK,SACX5N,UAAW/K,EACX0R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,IAAK,CAAC,GAAG,IAAK,CAAC,EAAE,KAC/BzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CAEIvN,GAAI,EACJkM,KAAM,MACNhE,KAAMiM,GAAK,SACX5N,UAAW/K,EACX0R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,KACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CACIvN,GAAI,EACJkM,KAAM,OACNhE,KAAMiM,GAAK,MACX5N,UAAW9K,EACXyR,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,IACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd7D,QAAQ,EACRvH,MAAO,EACP0J,YpB5DmB,mBoB+DvB,CAEI7L,GAAG,EACHkM,KAAM,SACNhE,KAAMiM,GAAK,MACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,IAC3BzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KACd1D,UAAU,IAMlBS,YAAc,GAKdG,QAAS,CACL,CACI/K,SAAU,CAAC,EAAG,IACdwL,KAAM2L,GAAQ,GACdlM,OAAQ,EACR+D,OC9Ha,CAGrBxC,KAAM,WAENlE,IAAKyP,GAGLnQ,OAAQ,CACJ5H,SAAU,CAAC,EAAG,GACd6G,UAAW,MAIfN,IAAM,CACF,CACIjG,GAAI,EACJkM,KAAM,QACNhE,KAAMiM,GAAK,QACX5N,UAAW/K,EACX0R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,IACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd7D,QAAQ,EACRvH,MAAO,EACP0J,YAAazP,EACb8a,YAAa5Y,IAEjB,CAEI0B,GAAI,EACJkM,KAAM,QACNhE,KAAMiM,GAAK,SACX5N,UAAW9K,EACXyR,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,IACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd7D,QAAQ,EACRvH,MAAO,EACP0J,YrBPmB,mBqBSvB,CAEI7L,GAAI,EACJkM,KAAM,MACNhE,KAAMiM,GAAK,SACX5N,UAAW/K,EACX0R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,IACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAElB,CAEIvN,GAAI,EACJkM,KAAM,KACNhE,KAAMiM,GAAK,SACX5N,UAAW/K,EACX0R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,IACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd1D,UAAU,IAKlBS,YAAc,GAKdG,QAAS,CACL,CACI/K,SAAU,CAAC,EAAG,GACdwL,KAAM2L,GAAQ,GACdlM,OAAO,OD8CX,CACIjL,SAAU,CAAC,GAAI,GACfwL,KAAM2L,GAAQ,GACdlM,OAAO,MEvINgN,GAAQ,CAEjBpP,MAAO,CACH,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAM,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAK,EAAI,IAC/D,CAAG,GAAK,GAAM,EAAK,EAAK,EAAI,GAAM,EAAI,GAAM,EAAK,EAAK,EAAI,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAM,EAAI,GAAK,GAAM,EAAI,GAAM,EAAK,EAAI,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAM,EAAI,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAM,EAAK,EAAI,GAAK,GAAM,EAAI,GAAK,GAAM,EAAK,EAAI,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,IAC/D,CAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,KAInEhG,IAAI,GAAD,OAAKxF,EAAL,cAEHoE,gBAAiB,UAEjB+S,SAAUnW,ICzBDoE,GCMc,CAGvB+J,KAAM,aAENlE,IAAK8O,GAGLxP,OAAQ,CACJ5H,SAAU,CAAC,GAAI,IACf6G,UAAW,SAIfN,IAAM,CACE,CAEIjG,GAAI,EACJkM,KAAM,QACNhE,KAAMiM,GAAK,SACX5N,UAAWjL,EACX4R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,IAAK,CAAC,GAAG,KACvBzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd1D,UAAU,GAGd,CAEI7J,GAAI,EACJkM,KAAM,MACNhE,KAAMiM,GAAK,QACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,IACpBzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd1D,UAAU,GAGd,CAEI7J,GAAG,EACHkM,KAAM,SACNhE,KAAMiM,GAAK,SACX5N,UAAW9K,EACXyR,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,IACpBzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KACd7D,QAAQ,EACRvH,MAAO,EACP0J,YxBvBe,mBwB2BnB,CAEI7L,GAAG,EACHkM,KAAM,SACNhE,KAAMiM,GAAK,SACX5N,UAAW9K,EACXyR,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,GAAI,CAAC,GAAG,GAAI,CAAC,GAAG,GAAI,CAAC,GAAG,GAAI,CAAC,GAAG,IAC9CzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KACd1D,UAAU,GAGd,CAEI7J,GAAG,EACHkM,KAAM,OACNhE,KAAMiM,GAAK,KACX5N,UAAWjL,EACX4R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,IAAK,CAAC,GAAG,IAAK,CAAC,GAAG,KAChCzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd1D,UAAU,GAGd,CAEI7J,GAAG,EACHkM,KAAM,SACNhE,KAAMiM,GAAK,QACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAI,KACfzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KACd7D,QAAQ,EACRvH,MAAO,EACP0J,YAAazP,EACb8a,YAAa5Y,IAGjB,CACI0B,GAAI,EACJkM,KAAM,QACNhE,KAAMiM,GAAK,SACX5N,UAAWjL,EACX4R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,KACdzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CAEIvN,GAAG,EACHkM,KAAM,OACNhE,KAAMiM,GAAK,QACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,IAAK,CAAC,GAAI,IAAK,CAAC,GAAG,KACjCzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KACd7D,QAAQ,EACRvH,MAAO,EACP0J,YxBjGe,oBwBsG3BvB,YAAc,GAKdG,QAAS,CACL,CACI/K,SAAU,CAAC,GAAI,IACfwL,KAAM2L,GAAQ,GACdlM,OAAO,IACP+D,OAAQqI,IAEZ,CACIrX,SAAU,CAAC,EAAG,IACdwL,KAAM2L,GAAQ,GACdlM,OAAO,IACP+D,OAAQuI,IAEZ,CACIvX,SAAU,CAAC,GAAI,GACfwL,KAAM2L,GAAQ,GACdlM,OAAO,IACP+D,OAAQ4I,IAEZ,CACI5X,SAAU,CAAC,GAAI,IACfwL,KAAM2L,GAAQ,GACdlM,OAAO,EACP+D,OCpKc,CAGtBxC,KAAM,YAENlE,IAAKuP,GAGLjQ,OAAQ,CACJ5H,SAAU,CAAC,GAAI,GACf6G,UAAW,SAIfN,IAAM,CACE,CAEIjG,GAAI,EACJkM,KAAM,QACNhE,KAAMiM,GAAK,QACX5N,UAAWjL,EACX4R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,IACpBzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd1D,UAAU,GAGd,CAEI7J,GAAI,EACJkM,KAAM,WACNhE,KAAMiM,GAAK,SACX5N,UAAWjL,EACX4R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,KACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAIlB,CAEIvN,GAAI,EACJkM,KAAM,OACNhE,KAAMiM,GAAK,SACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,KACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CAEIvN,GAAI,EACJkM,KAAM,UACNhE,KAAMiM,GAAK,SACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,GAAI,CAAC,EAAE,IAClCzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd7D,QAAQ,EACRvH,MAAO,EACP0J,YzBnCe,oByByC3BvB,YAAc,GAKdG,QAAS,CACL,CACI/K,SAAU,CAAC,EAAG,GACdwL,KAAM2L,GAAQ,GACdlM,OAAO,IACP+D,OAAQgJ,IAEZ,CACIhY,SAAU,CAAC,GAAI,GACfwL,KAAM2L,GAAQ,GACdlM,OAAO,IACP+D,OC7FU,CAGlBxC,KAAM,QAENlE,IAAK2P,GAGLrQ,OAAQ,CACJ5H,SAAU,CAAC,GAAI,GACf6G,UAAW,MAIfN,IAAM,CACE,CACIjG,GAAI,EACJkM,KAAM,OACNhE,KAAMiM,GAAK,SACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,IACdzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CACIvN,GAAI,EACJkM,KAAM,SACNhE,KAAMiM,GAAK,QACX5N,UAAWjL,EACX4R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,IACdzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CACIvN,GAAI,EACJkM,KAAM,MACNhE,KAAMiM,GAAK,MACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,GAAG,GAAI,CAAC,GAAG,KACtBzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAElB,CACIvN,GAAI,EACJkM,KAAM,QACNhE,KAAMiM,GAAK,SACX5N,UAAW9K,EACXyR,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,IACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CACIvN,GAAI,EACJkM,KAAM,QACNhE,KAAMiM,GAAK,MACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,IACpBzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CACIvN,GAAI,EACJkM,KAAM,UACNhE,KAAMiM,GAAK,WACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,KACpBzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CACIvN,GAAI,EACJkM,KAAM,SACNhE,KAAMiM,GAAK,QACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,IACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd7D,QAAQ,EACRvH,MAAO,EACP0J,YAAazP,EACb8a,YAAa5Y,IAIjB,CACI0B,GAAI,EACJkM,KAAM,UACNhE,KAAMiM,GAAK,QACX5N,UAAWjL,EACX4R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,KACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,KAGlB,CACIvN,GAAI,EACJkM,KAAM,OACNhE,KAAMiM,GAAK,QACX5N,UAAW9K,EACXyR,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,IACbzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd1D,UAAU,GAGd,CACI7J,GAAI,EACJkM,KAAM,MACNhE,KAAMiM,GAAK,SACX5N,UAAWhL,EACX2R,YAAY,EACZQ,QAAS,CAAC,CAAC,EAAE,GAAI,CAAC,EAAE,IACpBzD,cAAe,IACf+M,aAAc,IACdzJ,aAAc,IACd7D,QAAQ,EACRvH,MAAO,EACP0J,Y1BxGe,oB0B6G3BvB,YAAc,GAKdG,QAAS,CACL,CACI/K,SAAU,CAAC,GAAI,GACfwL,KAAM2L,GAAQ,GACdlM,OAAO,OD3DX,CACIjL,SAAU,CAAC,GAAI,GACfwL,KAAM2L,GAAQ,GACdlM,OAAO,UE1FJiN,GAVC,SAACzX,GACb,OACA,yBAAK4B,MAAO,CAACnD,MAAO,OAAQC,OAAO,OAAQoD,QAAQ,OAAQ4V,eAAe,SAAUC,WAAW,WAC3F,yBAAK9X,GAAG,UAAU+B,MAAO,CAACE,QAAQ,OAAQ8V,cAAc,SAAU/V,QAAS,MAAO8V,WAAW,WACzF,yBAAM/V,MAAO,IAAI,yBAAKiW,UAAU,SAASjW,MAAO,CAACnD,MAAM,IAAKC,OAAO,KAAM0D,IAAG,UAAKtF,EAAL,gBAA+Bgb,IAAI,aAC/G,uBAAGlW,MAAO,CAACD,SAAU7C,GAAY,KAAMiZ,WAAW,UAAWjX,MAAM,UAAnE,IAA+Ed,EAAMgY,Q,olBCDjG,IAcMC,G,YAEF,WAAYjY,GAAQ,IAAD,8BACf,4CAAMA,KACDkY,QAAU,KAFA,E,kFAMZC,KAAKnY,MAAMoY,QACVD,KAAKD,QAAU1X,WAAW,WACtB2X,KAAKE,GAAGC,UAAUC,IAAI,mBACxBC,KAAKL,MAAO,Q,6CAKlBM,aAAaN,KAAKD,W,+BAGZ,IAAD,OAKL,OAJGC,KAAKE,IACJF,KAAKE,GAAGC,UAAUI,OAAO,kBAIzB,yBAAKC,IAAK,SAAAN,GAAE,OAAI,EAAKA,GAAKA,GAAIzW,MAAO,CAACnD,MAAM,MAAOC,OAAQ,MAAOoD,QAAS,OAAQ8V,cAAe,MAAOF,eAAe,gBAAiBC,WAAW,WAChJ,yBAAK/V,MAAO,CAACD,SAAU7C,GAAY,GAAI8Z,YAAY,SAAnD,MACA,yBAAKhX,MAAK,IAAGnD,MAAM,MAAOC,OAAQ,OAAS2C,GAAY,EAAG,QAAS,GAAzD,CAA6DL,gBAAiB,WACpF,yBAAKY,MAAK,IAAGrC,SAAU,WAAYd,MAAM,GAAD,OAAK0Z,KAAKnY,MAAM6Y,WAAWV,KAAKnY,MAAM8Y,UAAW,IAAjD,KAAyDpa,OAAO,QAAW2C,GAAY,EAAG,QAAS,GAAjI,CAAqIJ,gBAAiB,kEAC5J,yBAAKW,MAAO,CAACrC,SAAS,WAAYwZ,KAAK,MAAOC,IAAI,MAAOC,UAAW,wBAAwBtX,SAAS7C,GAAY,KAAMF,KAAKqR,MAAOkI,KAAKnY,MAAM6Y,WAAWV,KAAKnY,MAAM8Y,UAAW,KAA/K,Y,GA7BAI,aAsClBC,GAAa,SAACnZ,GAEhB,IAAM4B,EAAK,IACPnD,MAAO,MACPC,OAAQ,OACRsC,gBAAiBe,GAAc/B,EAAMmH,OAAOnF,QACzCX,GAAY,EAAG,QAAS,GAJpB,CAKPP,MAAO,QACPa,SAAU7C,GAAY,KACtBiZ,WAAY,aACZjW,QAAS,OACT8V,cAAe5X,EAAMoZ,QAAS,cAAgB,MAC9C1B,eAAe,kBAEnB,OACI,yBAAK9V,MAAOA,GACR,yBAAKA,MAAK,IAAGnD,MAAM,MAAOC,OAAO,MAAO2a,UAAU,SAAUC,OAAQ,OAAU1Y,GAAY,GAAD,OAAIZ,EAAMmH,OAAO/E,IAAjB,aAAiC,aAAhH,GAAiIf,GAAY,EAAG,OAAQ,MAClK,yBAAKO,MAAO,CAACnD,MAAM,MAAOC,OAAO,OAAQoD,QAAQ,OAAQ8V,cAAc,SAAUF,eAAe,eAAgB2B,UAAU,SAAUC,OAAQ,QACxI,yBAAK1X,MAAO,CAACE,QAAS,OAAQ4V,eAAe,kBACzC,6BAAM1X,EAAMmH,OAAO4E,MACnB,yBAAKnK,MAAO,CAACd,MAAM,SAAUa,SAAS7C,GAAY,KAAlD,OAA4DkB,EAAMmH,OAAOnF,QAE7E,kBAAC,GAAD,CAAW8W,UAAW9Y,EAAMmH,OAAOoS,SAAUV,WAAY7Y,EAAMmH,OAAOuL,MAAO0F,MAAOpY,EAAMoY,WAOpGoB,G,YAEF,WAAYxZ,GAAQ,IAAD,8BACf,4CAAMA,KACDkY,QAAU,GACf,EAAKL,UAAY,EAAK7X,MAAMoZ,QAAS,WAAY,WAHlC,E,iFAOfjB,KAAKtX,MAAMe,MAAMX,gBAAjB,eAA2CnE,EAA3C,YAAyDiU,GAAqBoH,KAAKnY,MAAM6Q,MAAzF,UACAsH,KAAKtX,MAAMyX,UAAUC,IAAIJ,KAAKN,a,2CAI9BM,KAAKD,QAAU,GACfC,KAAKD,QAAQuB,KAAKjZ,WAAW,WACtB2X,KAAKtX,QACJsX,KAAKtX,MAAMe,MAAMX,gBAAjB,eAA2CnE,EAA3C,YAAyDiU,GAAqBoH,KAAKnY,MAAM6Q,MAAzF,UACAsH,KAAKtX,MAAMyX,UAAUC,IAAIJ,KAAKN,aAEpCW,KAAKL,MAAO,KACXA,KAAKnY,MAAMoY,OACVD,KAAKD,QAAQuB,KAAKjZ,WAAW,WACtB2X,KAAKtX,OACJsX,KAAKtX,MAAMyX,UAAUC,IAAI,mBAE/BC,KAAKL,MAAO,Q,6CAKlBA,KAAKD,QAAQrQ,IAAI,SAAAqQ,GAAO,OAAIO,aAAaP,O,+BAGnC,IAAD,OAOCwB,EAAW,CACbjb,MAAO,OACPC,OAAQ,OACRa,SAAU,WACV2B,iBAAkB,YAClBC,mBAAmB,SACnBC,eAAgB,UAChB6X,UAAWd,KAAKnY,MAAMoZ,QAAS,iBAAmB,gBAQtD,OALGjB,KAAKtX,QACJsX,KAAKtX,MAAMyX,UAAUI,OAAOP,KAAKN,WACjCM,KAAKtX,MAAMyX,UAAUI,OAAO,mBAIxB,yBAAK9W,MAtBC,CACVrC,SAAU,WACVd,MAAO,MACPC,OAAQ,SAoBA,yBAAKia,IAAK,SAAA9X,GAAK,OAAI,EAAKA,MAAMA,GAAOe,MAAO8X,S,GA1D1CR,aAgEhBS,G,YAEF,WAAY3Z,GAAQ,IAAD,8BACf,4CAAMA,KACDkY,QAAU,KAFA,E,yEAKP0B,GACR,IAAIC,EAAM,EAASC,EAAI3B,KAAK2B,EACtBC,EAAU,WACTF,EAAMD,EAAKxZ,SAEd0Z,EAAEE,UAAYJ,EAAKK,UAAU,EAAGJ,GAChCA,IACA1B,KAAKD,QAAU1X,WAAWuZ,EAAS,MACrCvB,KAAKL,MACP4B,M,0CAIA5B,KAAK+B,YAAY/B,KAAKnY,MAAMwR,W,2CAI5BiH,aAAaN,KAAKD,SAClBC,KAAK+B,YAAY/B,KAAKnY,MAAMwR,W,6CAI5BiH,aAAaN,KAAKD,W,+BAGZ,IAAD,OAECtW,EAAQ,CACVL,OAAQ,qBACRC,aAAa,OACb/C,MAAO,MACPoD,QAAS,MACTb,gBAAiB,UACjBF,MAAO,QACPa,SAAU7C,GAAY,GACtBiZ,WAAY,UACZoC,aAAc,cAGlB,OACI,yBAAKta,GAAG,UAAU+B,MAAOA,GACrB,uBAAG+W,IAAK,SAAAmB,GAAC,OAAI,EAAKA,EAAIA,U,GAhDhBZ,aAwDhBkB,G,YAGF,WAAYpa,GAAQ,IAAD,8BACf,4CAAMA,KACDqa,cAAgB,EAAKA,cAAc7B,KAAnB,gBACrB,EAAK8B,eAAiB,EAAKA,eAAe9B,KAApB,gBACtB,EAAK+B,UAAW,EAChB,EAAKC,YAAcC,YAAU,MAAO,QACb,IAApB,EAAKza,MAAMuR,QACV,EAAKmJ,UAAL,UAAqB,EAAK1a,MAAMmH,OAAO4E,KAAvC,SACA,EAAK4O,YAAc,aAEnB,EAAKD,UAAL,UAAoB,EAAK1a,MAAMmH,OAAO4E,KAAtC,UACA,EAAK4O,YAAc,aAEvB,EAAKC,WAAc7Y,GAAc,EAAK/B,MAAMmH,OAAOnF,OACnD,EAAK6Y,WAAa,EAAK7a,MAAMmH,OAAOnF,MAAM,EAAKhC,MAAMmH,OAAO2T,aAAa9Y,MAAvD,wCAAqG,GACvH,EAAKkY,YAAc,EAAKA,YAAY1B,KAAjB,gBACnB,EAAKN,QAAU,KAhBA,E,2EAmBL6C,GACPtf,EAAUqP,SAAUiQ,EAAM/T,UAAYmR,KAAKoC,UAC1CpC,KAAKnY,MAAMgb,gB,uCAIf7C,KAAKnY,MAAMgb,gB,kCAIHvH,EAAMwH,EAAMC,EAAIC,EAAOxC,EAAKyC,GACpC,IAAMrB,EAAU,WACTkB,EAAKC,EAEO,MADXE,EAEIjD,KAAKD,QAAU1X,WAAW,WAAY2X,KAAK+B,YAAY,MAAO/B,KAAKnY,MAAMmH,OAAO2T,aAAa9I,IAAKmG,KAAKnY,MAAMmH,OAAO6K,IAAK,GAAImG,KAAKnG,IAAKoJ,IAAQ5C,KAAKL,MAAO,KAC7I,IAARiD,EACNjD,KAAKD,QAAU1X,WAAW,WAAY2X,KAAK+B,YAAY,QAAS/B,KAAKnY,MAAMmH,OAAO2T,aAAa9Y,MAAOmW,KAAKnY,MAAMmH,OAAOnF,MAAO,IAAKmW,KAAKnW,MAAOoZ,IAAS5C,KAAKL,MAAM,KACrJ,IAARiD,IACPjD,KAAKnW,MAAMJ,MAAMd,MAAQqX,KAAKyC,WAC9BzC,KAAKnW,MAAMgY,WAAW7B,KAAK0C,WAC3B1C,KAAKkD,KAAKzZ,MAAM0Z,QAAU,EAC1BnD,KAAKoC,UAAW,IAIxBpY,GAAgBnF,GAChB2b,EAAIqB,UAAJ,UAAmBvG,EAAnB,aAA4BwH,GAC5BA,IACA9C,KAAKD,QAAU1X,WAAWuZ,EAASoB,KACrC3C,KAAKL,MAEP4B,M,0CAIAzT,OAAOiV,iBAAiB,UAAWpD,KAAKkC,eACxC/T,OAAOiV,iBAAiB,WAAYpD,KAAKmC,gBACzCnC,KAAKD,QAAU1X,WAAW,WAAW2X,KAAK+B,YAAY,QAAS,EAAG/B,KAAKnY,MAAMmH,OAAO+K,MAAO,GAAIiG,KAAKjG,MAAO,IAAIsG,KAAKL,MAAO,O,6CAI3HM,aAAaN,KAAKD,SAClB5R,OAAOkV,oBAAoB,UAAWrD,KAAKkC,eAC3C/T,OAAOkV,oBAAoB,WAAYrD,KAAKmC,kB,+BAGtC,IAAD,OACL,OACI,yBAAMza,GAAG,YAAYgY,UAAU,WAAWjW,MAAO,CAACrC,SAAS,WAAYd,MAAM,OAAQC,OAAO,OAAQoD,QAAQ,OAAQ8V,cAAc,SAAUF,eAAe,SAAU/V,SAAU7C,GAAY,KAAMiZ,WAAW,UAAY9W,gBAAiB,iFACrO,yBAAKW,MAAO,CAACnD,MAAM,OAAQC,OAAO,MAAOoD,QAAQ,OAAQ4V,eAAe,WACpE,yBAAK9V,MAAK,IAAGnD,MAAM,MAAOC,OAAQ,OAAQoD,QAAQ,OAAQ4V,eAAe,SAAU1W,gBAAiB,WAAaK,GAAY,GAAI,UAAW,IAAlI,CAAuIP,MAAM,aAC/I,yBAAKc,MAAO,CAACnD,MAAM,MAAOC,OAAO,MAAOoD,QAAQ,OAAQ8V,cAAc,SAAUyB,UAAU,WACtF,yBAAKzX,MAAK,IAAGnD,MAAM,QAASC,OAAO,QAAS2a,UAAU,UAAazY,GAAY,GAAD,OAAIuX,KAAKnY,MAAMmH,OAAO/E,IAAtB,aAAsC,aAA1G,GAA2Hf,GAAY,EAAG,OAAQ,MAC5J,yBAAKO,MAAO,CAACyX,UAAU,SAAU1X,SAAU7C,GAAY,KAAMqZ,KAAKnY,MAAMmH,OAAO4E,OAEnF,yBAAKnK,MAAO,CAACnD,MAAM,MAAOC,OAAO,MAAOoD,QAAQ,OAAQ8V,cAAc,SAAUyB,UAAU,SAAU1X,SAAU7C,GAAY,OACtH,yBAAK+Y,UAAWM,KAAKwC,YAAa/Y,MAAO,CAACyX,UAAU,SAAU1X,SAAU7C,GAAY,KAAM2c,aAAa,SAAUtD,KAAKuC,WACtH,yBAAK/B,IAAK,SAAAzG,GAAK,OAAI,EAAKA,MAAMA,GAAOtQ,MAAO,CAAC0X,OAAO,sBACpD,yBAAMX,IAAK,SAAA3G,GAAG,OAAI,EAAKA,IAAIA,GAAMpQ,MAAO,CAAC0X,OAAO,sBAChD,yBAAMX,IAAK,SAAA3W,GAAK,OAAI,EAAKA,MAAMA,GAAOJ,MAAO,CAAC0X,OAAO,mBAAoBxY,MAAOqX,KAAKyC,iBAIrG,yBAAK/C,UAAU,gBAAgBc,IAAK,SAAA0C,GAAI,OAAI,EAAKA,KAAKA,GAAMzZ,MAAO,CAACyX,UAAU,SAAUqC,UAAU,OAAQJ,QAAQ,EAAGxa,MAAM,YAAaW,GAAU0W,KAAKqC,YAAa,IAApK,wB,GAtFQtB,aA4FlByC,G,iLAIE,IAEM/Z,EAAM,CACRrC,SAAS,WACTd,MAAM,OAAQC,OAAO,OACrBoD,QAAQ,OAAQ8V,cAAc,SAAUF,eAAe,gBACvDK,WAAW,UAAWpW,SAAU7C,GAAY,GAC5CkC,gBAAgB,SAGpB,OACI,yBAAKnB,GAAG,cAAc+B,MAAOA,GACzB,yBAAKA,MAAO,CAACrC,SAAS,WAAYb,OAAQ,MAAOsC,gBAZpC,cAaT,yBAAM6W,UAAU,gBAAgBjW,MAAK,IAAGrC,SAAS,WAAYyZ,IAAK,MAAOva,MAAO,QAASC,OAAQ,SAAYkC,GAAY,GAAD,OAAIuX,KAAKnY,MAAM8F,IAAI1D,IAAnB,cAAnF,CAAuHpB,gBAbnJ,iBAeb,yBAAKY,MAAO,CAACrC,SAAS,WAAYb,OAAQ,MAAOoD,QAAS,OAAQ6V,WAAW,SAAUD,eAAe,WAClG,yBAAKG,UAAU,iBAAf,OAIJ,yBAAKjW,MAAO,CAACrC,SAAS,WAAYb,OAAQ,MAAOsC,gBApBpC,cAqBT,yBAAM6W,UAAU,gBAAgBjW,MAAK,IAAGrC,SAAS,WAAYyZ,IAAK,MAAOva,MAAO,QAASC,OAAQ,SAAYkC,GAAY,GAAD,OAAIuX,KAAKnY,MAAMmH,OAAO/E,IAAtB,cAAnF,CAA0HpB,gBArBtJ,sB,GAJHkY,aAgCpB0C,G,YAEF,WAAY5b,GAAQ,IAAD,8BACf,4CAAMA,KACD6b,iBAAmB,EAAKA,iBAAiBrD,KAAtB,gBAFT,E,8EAKF3H,GAEb,IADA,IAAIiL,EAAeC,SAASC,uBAAuB,QAC3C7b,EAAI,EAAGA,EAAI2b,EAAa1b,OAAQD,IACpC2b,EAAa3b,GAAG8b,UAAW,EAG/B9D,KAAKnY,MAAMkc,WAAWrL,GACtBrQ,WAAW,WAEP,IADA,IAAIsb,EAAeC,SAASC,uBAAuB,QAC3C7b,EAAI,EAAGA,EAAI2b,EAAa1b,OAAQD,IACpC2b,EAAa3b,GAAG8b,UAAW,GAEhC,Q,+BAGG,IAAD,OACD,OACI,yBAAMpc,GAAG,SAAS+B,MAAO,CAACrC,SAAS,WAAYd,MAAM,OAAQC,OAAO,OAAQoD,QAAQ,OAAQ8V,cAAc,SAAUF,eAAe,gBAAiBzW,gBAAiB,iFACjK,yBAAKW,MAAO,CAACE,QAAS,OAAQ8V,cAAe,MAAOF,eAAe,gBAAiBjZ,MAAM,OAAQC,OAAQ,MAAO+c,aAAc,QAC1H,kBAAC,GAAD,CAAYtU,OAAQgR,KAAKnY,MAAMuJ,OAAOpC,OAAQiS,SAAS,EAAOhB,OAAuC,IAAhCD,KAAKnY,MAAMuJ,OAAO4S,aACvF,kBAAC,GAAD,CAAYhV,OAAQgR,KAAKnY,MAAMuJ,OAAOzD,IAAKsT,SAAS,EAAMhB,MAAsC,IAA/BD,KAAKnY,MAAMuJ,OAAO4S,cAExF,yBAAKva,MAAO,CAACE,QAAS,OAAQ8V,cAAe,MAAOF,eAAe,gBAAiBjZ,MAAM,OAAQC,OAAQ,MAAO+c,aAAc,QAC3H,kBAAC,GAAD,CAAS5K,KAAMsH,KAAKnY,MAAMuJ,OAAOpC,OAAOkJ,SAAU+I,SAAS,EAAOhB,OAAuC,IAAhCD,KAAKnY,MAAMuJ,OAAO4S,aAC3F,kBAAC,GAAD,CAAStL,KAAMsH,KAAKnY,MAAMuJ,OAAOzD,IAAIuK,SAAU+I,SAAS,EAAMhB,MAAsC,IAA/BD,KAAKnY,MAAMuJ,OAAO4S,cAE3F,yBAAKva,MAAO,CAACE,QAAS,OAAQrD,MAAO,OAAQC,OAAQ,QACjD,yBAAKkD,MAAK,IAAGE,QAAQ,OAAQ8V,cAAc,SAAUF,eAAe,eAAgB0E,SAAS,SAAU3d,MAAO,MAAOuC,gBAAgB,WAAcK,GAAY,EAAG,UAAW,MACzK,4BAAQwW,UAAU,OAAOwE,QAAS,kBAAM,EAAKR,iB5BjVrD,I4BiV6Eja,MAAO,CAAClD,OAAO,MAAQqZ,WAAW,aAAcpW,SAAU7C,GAAY,KAA3I,QACA,4BAAQ+Y,UAAU,OAAOwE,QAAS,kBAAM,EAAKR,iB5BjVpD,I4BiV6Eja,MAAO,CAAClD,OAAO,MAAOqZ,WAAW,aAAcpW,SAAU7C,GAAY,KAA3I,SACA,4BAAQ+Y,UAAU,OAAOwE,QAAS,kBAAM,EAAKR,iB5BjVjD,I4BiV6Eja,MAAO,CAAClD,OAAO,MAAOqZ,WAAW,aAAcpW,SAAU7C,GAAY,KAA9I,aAEJ,kBAAC,GAAD,CAAS0S,QAAS2G,KAAKnY,MAAMuJ,OAAOiI,gB,GAvClC0H,aAgDpBoD,G,4LAGKnE,KAAKnY,MAAMuJ,OAAOgT,SACjB/b,WAAW,WACJ2X,KAAKnY,OACJmY,KAAKnY,MAAMwc,YACjBhE,KAAKL,MAAO,O,+BAKlB,IAAIsE,EAAe,KAAMC,EAAkB,KAa3C,OAZGvE,KAAKnY,MAAMuJ,OAAOgT,SACdE,EAAgB,kBAAC,GAAD,CAAatV,OAAQgR,KAAKnY,MAAMuJ,OAAOpC,OAAQrB,IAAKqS,KAAKnY,MAAMuJ,OAAOzD,MACtF4W,EAAkB,kBAAC,KAAD,CAAata,IAAK+V,KAAKnY,MAAMuJ,OAAOoT,MAAOC,MAAM,EAAMC,OAAO,EAAOC,OAAQ,MAE5F3E,KAAKnY,MAAMuJ,OAAOwT,OACpBN,EAAe,kBAAC,GAAD,CAAWtV,OAAQgR,KAAKnY,MAAMuJ,OAAOpC,OAAQoK,OAAQ4G,KAAKnY,MAAMuJ,OAAOsI,YAAamJ,YAAa7C,KAAKnY,MAAMgb,cAC3H0B,EAAkB,kBAAC,KAAD,CAAata,IAAKhE,GAAkB0e,OAAQ,OAG/DL,EAAe,kBAAC,GAAD,CAAalT,OAAQ4O,KAAKnY,MAAMuJ,OAAQ2S,WAAY/D,KAAKnY,MAAMkc,aAC9EQ,EAAkB,kBAAC,KAAD,CAAata,IAAK+V,KAAKnY,MAAMuJ,OAAOoT,MAAOC,MAAM,EAAMC,OAAO,EAAOC,OAAQ,MAGlG,6BACKL,EACAC,O,GA5BIxD,aAkCN8D,eAvZS,SAAA7J,GACpB,MAAO,CACH5J,OAAQ4J,EAAM5J,SAIK,SAAAtC,GACvB,MAAO,CACHiV,WAAY,SAACrL,GAAW5J,EAAS+J,GAAiBiM,SAASpM,MAC3D2L,SAAU,WAAOvV,EzB21Bd,CACH8D,KJ90BwB,sB6BbxBiQ,YAAa,WAAO/T,EzBg0Ba,SAACA,EAAUC,GAChD,IAAMpB,EAAMY,GAAOQ,IAAWpB,IAAI4C,KAAMxB,IAAWqC,OAAOzD,IAAIjG,IAAKsH,EAASD,IAAWC,OACjFO,EAAgBR,IAAWM,SAASC,aAAa,GACvDR,EAAS4L,MAE0B,IAAhC3L,IAAWqC,OAAOsI,YACjB5K,EAAS6E,GAAsBhG,EAAIjG,GAC/B,CAACkM,KAAMjG,EAAIiG,KAAMC,QAAS7G,GAAWW,EAAIiG,MAAMjJ,WAAW+E,IAAI,SAAAoE,GAAM,OAAIA,EAAOC,QAAQ,cAAe/E,EAAO4E,SAC7G,CAACA,KAAM5E,EAAO4E,KAAMC,QAASzJ,GAAcuD,EAAIiG,MAAMlJ,UAAUgF,IAAI,SAAAoE,GAAM,OAAIA,EAAOC,QAAQ,cAAe/E,EAAO4E,SAClH/M,GAAcmI,EAAO5H,SAAU2H,IAAWM,SAASf,OAAO,GAAIiB,EAAgB,EAAI,MAAO,UAAU,IAEvGT,EAAS6E,GAAsBhG,EAAIjG,GAC/B,CAACkM,KAAMjG,EAAIiG,KAAMC,QAAS7G,GAAWW,EAAIiG,MAAMlJ,UAAUgF,IAAI,SAAAoE,GAAM,OAAIA,EAAOC,QAAQ,cAAe/E,EAAO4E,SAC5G,CAACA,KAAM5E,EAAO4E,KAAMC,QAASzJ,GAAcuD,EAAIiG,MAAMjJ,WAAW+E,IAAI,SAAAoE,GAAM,OAAIA,EAAOC,QAAQ,cAAe/E,EAAO4E,SACnH/M,GAAcmI,EAAO5H,SAAU2H,IAAWM,SAASf,OAAO,GAAIiB,EAAgB,EAAI,MAAO,UAAU,SyBjchGsV,CAA6CV,I,ykBCrZ5D,IAYMY,GAAU,SAACC,GAAkC,IAAzBC,EAAwB,uDAAZ,QAClC,WACIvb,QAAS,MACTb,gBAAiBmc,GACd9b,GAAY,EAAG+b,EAAc,KAIlCC,GAAiB,SAACrd,GAEpB,IAAIsd,EAAuC,OAAzBtd,EAAMmH,OAAOkC,UAAkB,6BAAMoR,YAAUhZ,GAAU,OAAQA,GAAU,SAA5C,YAAsE,KAGvH,OAFA6b,EAA2C,OAA7Btd,EAAMmH,OAAOkD,cAAsB,6BAAM5I,GAAU,KAAhB,cAAwC6b,EAGrF,yBAAKzd,GAAG,QAAQ+B,MAAO,CAACE,QAAQ9B,EAAMmH,OAAOC,YAAY,OAAO,UAC3DkW,IAKPC,G,YAEF,WAAYvd,GAAQ,IAAD,8BACf,4CAAMA,KACDwd,mBAAqB,EAAKA,mBAAmBhF,KAAxB,gBAFX,E,kFAOfL,KAAKnY,MAAMyd,a,+BAKX,I5BrDmBC,E4BuDb9b,EAAQ,CACVnD,MAAQ0Z,KAAKnY,MAAMvB,MACnBC,OAAQ,GACR4a,OAAS,OACToC,UAAW,OACXiC,WAAW,mBACXC,YAAY,mBACZC,UAAW,kBACX7c,gBAVa,YAWbF,MAAO,QACPiX,WAAY,UACZpW,SAAU7C,GAAY,KACtBgD,QAAQ,OACR4V,eAAgB,gBAChBC,WAAW,UAGT3V,EAAQmW,KAAKnY,MAAMmH,OAAOoC,OAAOvH,MACjCE,G5BzEawb,E4ByEqC,IAA7BvF,KAAKnY,MAAMmH,OAAOoC,OAAOuU,KAAS3F,KAAKnY,MAAMmH,OAAOoC,OAAOuU,IAAM3F,KAAKnY,MAAMmH,OAAOoC,OAAOwU,M5BxElHC,MAAMN,GAAM,EAAG9e,KAAKqf,MAAMP,I4B0E7B,OACI,yBAAK7d,GAAG,QAAQ+B,MAAOA,GACnB,yBAAKA,MAAO,CAACnD,MAAM,MAAOqD,QAAQ,OAAQ6V,WAAW,WACjD,yBAAK/V,MAAK,IAAGnD,MAAM,GAAIC,OAAO,IAAOkC,GAAY,GAAD,OAAKuX,KAAKnY,MAAMmH,OAAOY,KAAK3F,IAA5B,cAAtC,CAAmFpB,gBAzBxF,gBA0BL,yBAAKY,MAAO,CAACE,QAAQ,OAAQ8V,cAAc,SAAUF,eAAe,WAChE,yBAAK9V,MAAO,CAAC0X,OAAO,MAAOD,UAAU,eAArC,IAAsDlB,KAAKnY,MAAMmH,OAAO4E,KAAxE,KACA,yBAAKnK,MAAO,CAACE,QAAQ,SACjB,yBAAKF,MAAK,IAAG0X,OAAO,MAAOD,UAAU,YAAe6D,GAAQnb,GAAcC,MAA1E,QAA0FA,EAA1F,KACA,yBAAKJ,MAAK,IAAG0X,OAAO,MAAOD,UAAU,YAAe6D,GAAQnb,GAAcC,MAA1E,QAA0FmW,KAAKnY,MAAMmH,OAAOoC,OAAOyI,IAAnH,KACA,yBAAKpQ,MAAK,IAAG0X,OAAO,MAAOD,UAAU,YAAe6D,GAAQjb,GAAgBC,MAA5E,SAA+FA,GAC/F,yBAAKN,MAAK,IAAG0X,OAAO,MAAOD,UAAU,YAAe6D,GAAQ,YAA5D,2BAA6Fjd,OAAOC,KAAKiY,KAAKnY,MAAMmH,OAAOoC,OAAOoC,qBAAqBvL,OAAvJ,Y7BnDW,O6BuDvB,yBAAKwB,MAAK,IAAGnD,MAAM,MAAOC,OAAO,OAAU2C,GAAY,EAAG,UAAW,IAA3D,CAAgEL,gBAAgB,UAAWF,MAAM,QAASgB,QAAQ,OAAQ8V,cAAc,SAAUF,eAAe,SAAUwG,YAAY,UAC7L,kBAAC,GAAD,CAAgB/W,OAAQgR,KAAKnY,MAAMmH,UAEvC,yBAAKvF,MAAO,CAACE,QAAQ,OAAQ6V,WAAY,WACrC,4BAAQsE,SAAW9D,KAAKnY,MAAMmH,OAAOpB,aAAeoS,KAAKnY,MAAMmH,OAAOE,QAAU8Q,KAAKnY,MAAMmH,OAAOG,UAAY6Q,KAAKnY,MAAMmH,OAAOC,YACxHxF,MAAK,IAAG0X,OAAO,OAAU4D,GAAQ,UAAY,WAAxC,CAAoDlc,gBAAiB,UAAW+W,WAAW,YAAYsE,QAASlE,KAAKqF,oBAAoB,kBAAC,KAAD,CAAiB5b,MAAO,CAACd,MAAM,QAAS2a,aAAa,OAAQ1a,KAAK,KAAKod,KAAMC,OADnO,e,GAtDAlF,aAgEL8D,eAhGS,SAAA7J,GACpB,MAAO,CACHhM,OAAQgM,EAAMhM,SAIK,SAAAF,GACvB,MAAO,CACHwW,SAAU,WAAQxW,E1BkiBU,SAACA,EAAUC,GAE3CD,EAASkH,MACTpO,KAGA,SAASse,IACL,IAAMzY,EAAUsB,IAAWpB,IAAI4C,KACzB4V,EAAe1Y,EAAQC,OAAQ,SAAAC,GAAG,OAAIA,EAAIC,cAChD,GAAGuY,EAAale,OAAS,EACrBI,WAAW6d,EAAyB,SACjC,CACH,IACI,IAAME,EAAkBC,KAAKC,UAAUvX,KACvCwX,aAAaC,QAAQziB,EAAYqiB,GACjChY,MAAM,4BACN,MAAOqY,GACPrY,MAAM,iDAEVU,EAASmM,OAfjBiL,Q0B9cWrB,CAA6CO,IC7FtDsB,GAAe,SAAC7e,GAElB,IAAMT,EAAWP,GAAcgB,EAAMmH,OAAO5H,SAAUS,EAAMwH,SAASf,OAC/DqY,EAAc,CAChBvf,SAAU,WACVd,MAAOuB,EAAMmH,OAAOY,KAAKtJ,MACzBC,OAAQsB,EAAMmH,OAAOY,KAAKrJ,OAC1BuC,gBAAgB,QAAD,OAAUjB,EAAMmH,OAAOY,KAAK3F,IAA5B,iBACf2W,KAAMiF,MAAMze,EAAS,GAAKF,GAAcW,EAAMmH,OAAOY,KAAKtJ,MAAM,GAAK,EAAGc,EAAS,IAAMF,GAAcW,EAAMmH,OAAOY,KAAKtJ,MAAM,GAC7Hua,IAAKgF,MAAMze,EAAS,GAAKF,GAAcW,EAAMmH,OAAOY,KAAKrJ,OAAO,GAAK,EAAGa,EAAS,IAAMF,GAAcW,EAAMmH,OAAOY,KAAKrJ,OAAO,GAC9HyC,mBAAmB,GAAD,OAAKnB,EAAMmH,OAAO4X,UAAY/e,EAAMmH,OAAOY,KAAKtJ,MAAhD,cAA2DuB,EAAMmH,OAAO6X,eAAiBhf,EAAMmH,OAAOY,KAAKrJ,OAA3G,MAClBugB,OAAQ,GAGNC,EAAoB,CACtB3f,SAAU,WACVd,MAAO,GACPC,OAAQ,GACRqa,KAAMxZ,EAAS,GACfyZ,IAAMzZ,EAAS,GACf0Z,UAAW,wBACXnX,QAAU9B,EAAMmH,OAAOC,YAAsB,OAAT,SAGxC,OACI,6BACI,yBAAKvH,GAAG,SAAS+B,MAAOkd,IACxB,yBAAKld,MAAOsd,GACR,kBAAC,KAAD,CAAiBrH,UAAU,OAAOjW,MAAO,CAACd,MAAMiB,GAAc/B,EAAMmH,OAAOoC,OAAOvH,OAAQzC,SAAS,WAAYwZ,KAAK,MAAOC,IAAI,OAAQmF,KAAMgB,KAAape,KAAK,UAOzKqe,G,iLAKE,OACI,kBAAC,GAAD,CAAcjY,OAAQgR,KAAKnY,MAAMmH,OAAQK,SAAU2Q,KAAKnY,MAAMwH,e,GANrD0R,aAWN8D,eApDS,SAAA7J,GACpB,MAAO,CACHhM,OAAQgM,EAAMhM,SAkDP6V,CAAyBoC,I,ujBClDxC,IAYMC,G,YAGF,WAAYrf,GAAQ,IAAD,8BACf,4CAAMA,KACDsf,kBAAoBC,KACtB,EAAKvf,MAAMwf,KAAKjW,SACZ,EAAKvJ,MAAMwf,KAAK9T,cAAc1P,GAAQ,EAAKgE,MAAMwf,KAAK9T,cAAczP,IACnE,EAAKqjB,kBAAoBG,OALlB,E,iFAUfhgB,GAAkB0Y,KAAKnY,MAAM0f,kBAAkBlH,KAAKL,MAAOA,KAAKnY,MAAMwf,KAAK3I,aAAcsB,KAAKnY,MAAMwf,KAAK3f,M,2CAIrGsY,KAAKnY,MAAMqH,QACN,IAAI8Q,KAAKnY,MAAMwf,KAAK3f,MAAML,IAC3BC,GAAkB0Y,KAAKnY,MAAM0f,kBAAkBlH,KAAKL,MAAOA,KAAKnY,MAAMwf,KAAK3I,aAAcsB,KAAKnY,MAAMwf,KAAK3f,M,+BAOjH,IAAM8f,EAAW,CACbpgB,SAAU,WACVd,MAAO0Z,KAAKnY,MAAMwf,KAAKzX,KAAKtJ,MAC5BC,OAAQyZ,KAAKnY,MAAMwf,KAAKzX,KAAKrJ,OAC7BuC,gBAAgB,QAAD,OAAUkX,KAAKnY,MAAMwf,KAAKzX,KAAK3F,IAA/B,iBACf2W,KAAMZ,KAAKnY,MAAMwf,KAAKjgB,SAAS,IAAOF,GAAgB8Y,KAAKnY,MAAMwf,KAAKzX,KAAKtJ,MAAM,GACjFua,IAAKb,KAAKnY,MAAMwf,KAAKjgB,SAAS,IAAOF,GAAgB8Y,KAAKnY,MAAMwf,KAAKzX,KAAKrJ,OAAO,GACjFyC,mBAAmB,GAAD,OAAKgX,KAAKnY,MAAMwf,KAAKT,UAAY5G,KAAKnY,MAAMwf,KAAKzX,KAAKtJ,MAAtD,cAAiE0Z,KAAKnY,MAAMwf,KAAKR,eAAiB7G,KAAKnY,MAAMwf,KAAKzX,KAAKrJ,OAAvH,OAGhBkhB,EAAwB,CAC1BrgB,SAAU,WACVd,MAAO,GACPC,OAAQ,GACRqa,KAAMZ,KAAKnY,MAAMwf,KAAKjgB,SAAS,GAC/ByZ,IAAKb,KAAKnY,MAAMwf,KAAKjgB,SAAS,GAC9B0Z,UAAW,yBACXnX,SAAUqW,KAAKnY,MAAMwf,KAAKpY,aAAe+Q,KAAKnY,MAAMwf,KAAKjW,QAA0C,IAAhC4O,KAAKnY,MAAMwf,KAAKpT,cAAoB,QAAQ,QAG7GyT,EAAmB,CACrBtgB,SAAU,WACVd,MAAO,GACPC,OAAQ,GACRqa,KAAMZ,KAAKnY,MAAMwf,KAAKjgB,SAAS,GAC/ByZ,IAAKb,KAAKnY,MAAMwf,KAAKjgB,SAAS,GAC9B0Z,UAAW,yBACXnX,QAAUqW,KAAKnY,MAAMwf,KAAKpY,aAAgB+Q,KAAKnY,MAAMwf,KAAK9V,SAAkB,OAAR,SAGxE,OACI,6BACI,yBAAK7J,GAAE,aAAQsY,KAAKnY,MAAMwf,KAAK3f,IAAM+B,MAAO+d,IAC5C,yBAAK9H,UAAU,QAAQjW,MAAOge,GAC1B,yBAAKhe,MAAK,IAAGrC,SAAS,WAAYd,MAAM,OAAQC,OAAO,OAAQohB,UAAU,SAAS9e,gBAAgBe,GAAcoW,KAAKnY,MAAMwf,KAAKxd,QAAWX,GAAY,EAAE,QAAQ,KAAK,kBAAC,KAAD,CAAiB8c,KAAMhG,KAAKmH,sBAEtM,yBAAKzH,UAAU,QAAQjW,MAAOie,GAC1B,kBAAC,KAAD,CAAiBje,MAAO,CAACd,MAAM,QAAUvB,SAAS,WAAYwZ,KAAK,MAAOC,IAAI,MAAOC,UAAW,yBAA0BlY,KAAK,KAAKod,KAAM4B,a,GA/D5I7G,aAsEZ8G,G,+LAGEjgB,O,+BAGM,IAAD,OACCkgB,EAAS9H,KAAKnY,MAAM8F,IAAI4C,KAAKb,IAAK,SAAA/B,GAAG,OAAI,kBAAC,GAAD,CAAK0Z,KAAM1Z,EAAMoa,IAAKpa,EAAIjG,GAAI6f,kBAAmB,EAAK1f,MAAM0f,kBAAmBrY,OAAQ,EAAKrH,MAAM8F,IAAIuB,WAErJ,OACI,wBAAIxH,GAAG,WACFogB,O,GAXQ/G,aAiBV8D,eAnGS,SAAA7J,GACpB,MAAO,CACHrN,IAAKqN,EAAMrN,MAIQ,SAAAmB,GACvB,MAAO,CACHyY,kBAAmB,WAAYzY,EAAS6F,GAAkBqL,KAAKnY,MAAMwf,KAAK3f,QA2FnEmd,CAA6CgD,IC1FtDG,GAAa,SAACngB,GAChB,IAAMogB,EAAW,CACb7gB,SAAU,WACVd,MAAOuB,EAAMwf,KAAKzU,KAAKtM,MACvBC,OAAQsB,EAAMwf,KAAKzU,KAAKrM,OACxBuC,gBAAgB,QAAD,OAAUjB,EAAMwf,KAAKzU,KAAK3I,IAA1B,MACf2W,KAAM/Y,EAAMwf,KAAKjgB,SAAS,IAAMF,GAAcW,EAAMwf,KAAKzU,KAAKtM,MAAM,GACpEua,IAAKhZ,EAAMwf,KAAKjgB,SAAS,IAAMF,GAAcW,EAAMwf,KAAKzU,KAAKrM,OAAO,GACpEyC,mBAAmB,GAAD,OAAKnB,EAAMwf,KAAKzU,KAAKyL,OAAO,GAA5B,cAAoCxW,EAAMwf,KAAKzU,KAAKyL,OAAO,GAA3D,MAClBpV,eAAgB,UAChB6X,UAAU,UAAD,OAAYjZ,EAAMwf,KAAKhV,OAAvB,SAGb,OACI,yBAAK3K,GAAE,cAASG,EAAMwf,KAAK3f,IAAMgY,UAAW7X,EAAMwf,KAAKzU,KAAK0L,QAAS7U,MAAOwe,KAI9EC,G,iLAGE,IAAMC,EAAUnI,KAAKnY,MAAMmK,YAAYtC,IAAK,SAAAgD,GAAU,OAAI,kBAAC,GAAD,CAAY2U,KAAM3U,EAAaqV,IAAKrV,EAAWhL,OAEzG,OACI,wBAAIA,GAAG,eACFygB,O,GAPepH,aAajB8D,eA5CS,SAAA7J,GACpB,MAAO,CACHhJ,YAAagJ,EAAMhJ,cAIA,SAAAlD,GACvB,MAAO,IAqCI+V,CAA6CqD,ICtB7CE,G,iLAlBF,IAAD,OACJ,OACI,yBAAK1gB,GAAG,MAAM8Y,IAAK,SAAA9Q,GAAG,OAAI,EAAKA,IAAMA,GAAKjG,MAAO,CAACnD,MAAO0Z,KAAKnY,MAAM6H,IAAIpJ,MAC5DC,OAAQyZ,KAAKnY,MAAM6H,IAAInJ,OACvBqa,KAAK,GAAD,OAAKZ,KAAKnY,MAAMwH,SAASf,MAAM,GAA/B,MACJuS,IAAI,GAAD,OAAKb,KAAKnY,MAAMwH,SAASf,MAAM,GAA/B,MACHlH,SAAU,WACV0B,gBAAgB,QAAD,OAAUkX,KAAKnY,MAAM6H,IAAIzF,IAAzB,MACflB,iBAAkB,YAClBF,gBAAiB,UACzB,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,KAAD,CAAaoB,IAAK+V,KAAKnY,MAAM6H,IAAIkM,SAAU6I,MAAM,EAAME,OAAQ,GAAKD,OAAO,S,GAdzE3D,a,6NCFlB,IAQMsH,G,YAGF,WAAYxgB,GAAQ,IAAD,8BACf,4CAAMA,KACDygB,oBAAsB,EAAKA,oBAAoBjI,KAAzB,gBAC3B,EAAKN,QAAU,KACf,EAAKwI,KAAOjG,YAAU,MAAO,QAJd,E,iFAOCnO,EAAYP,EAAM4U,EAAS9G,EAAK+G,GAEhD,IAAM7G,EAAU,WACZ,KAAGF,EAAI8G,EAAQvgB,QAAf,CAGA,GAAGkM,IAAa6L,KAAKnY,MAAMsM,WACvB,OAAgB,IAAbA,OACCsU,EAAO5G,UAAYjO,EAAO,KAAO4U,QAGjCC,EAAO5G,UAAY,IAI3B4G,EAAO5G,UAAYjO,EAAO,KAAO4U,EAAQ1G,UAAU,EAAGJ,GACtDA,IACA1B,KAAKD,QAAU1X,WAAWuZ,EA7Bf,MA8BbvB,KAAKL,MACP4B,M,mCAIA5B,KAAK0I,GAAG7G,UAAY,GACpB7B,KAAK2I,GAAG9G,UAAY,K,2CAIpB,GAAG7B,KAAKnY,MAAM+gB,OACV,GAA2B,IAAxB5I,KAAKnY,MAAMsM,WAAgB,CAC1B,IAAM0U,EAAS7I,KAAKnY,MAAMwM,QAC1B2L,KAAK8I,aACL9I,KAAKsI,oBAAoB,EAAGO,EAAOjV,KAAMiV,EAAOhV,QAAQmM,KAAKnY,MAAMuM,WAAY,EAAG4L,KAAK0I,QACpF,CACH,IAAMG,EAAS7I,KAAKnY,MAAMgT,QAC1BmF,KAAKsI,oBAAoB,EAAGO,EAAOjV,KAAMiV,EAAOhV,QAAQmM,KAAKnY,MAAMuM,WAAY,EAAG4L,KAAK2I,O,6CAM/FrI,aAAaN,KAAKD,W,+BAGZ,IAAD,OAEDgJ,EAAM,GACe,QAAtB/I,KAAKnY,MAAMT,SACV2hB,EAAG,IAAU,EAEbA,EAAG,OAAa,EAGpB,IAAMtf,E,uVAAK,EACPrC,SAAU,WACVb,OAAQ,MACR6C,OAAQ,qBACRwX,KAAM,EACNoI,MAAO,EACP3f,aAAc,OACdK,QAAS,MACTb,gBAAiB,UACjBF,MAAO,UACPa,SAAU7C,GAAY,GACtBiZ,WAAY,aACZjW,QAASqW,KAAKnY,MAAM+gB,OAAQ,QAAS,OACrC5G,aAAc,cACX+G,GAGP,OACI,yBAAKrhB,GAAG,eAAe+B,MAAOA,GAC1B,yBAAKA,MAAO,CAACrC,SAAS,WAAYd,MAAM,OAAQC,OAAO,SACnD,uBAAGia,IAAK,SAAAkI,GAAE,OAAI,EAAKA,GAAKA,KACxB,uBAAGlI,IAAK,SAAAmI,GAAE,OAAI,EAAKA,GAAKA,KACxB,yBAAKjJ,UAAU,QAAQjW,MAAO,CAACrC,SAAS,WAAY4hB,MAAM,GAAIC,OAAO,KAAM3f,GAAU0W,KAAKuI,a,GArFzFxH,aA4FfmI,G,iLAGE,IAAMpV,EAASkM,KAAKnY,MAAMiM,OAC1B,OACI,kBAAC,GAAD,CAAQ8U,OAAQ9U,EAAO8U,OACfxhB,SAAU0M,EAAO1M,SACjBiN,QAASP,EAAOO,QAChBwG,QAAS/G,EAAO+G,QAChBzG,UAAWN,EAAOM,UAClBD,WAAYL,EAAOK,iB,GAVL4M,aAkBnB8D,eAtHS,SAAC7J,GACrB,MAAO,CACHlH,OAAQkH,EAAMlH,SAoHP+Q,CAAyBqE,ICxGxC,IAMMC,GAAgB,SAACthB,GAEnB,IAEMuhB,EAAa,CACftgB,gBAAgB,QAAD,OAAUjB,EAAMwf,KAAKpd,IAArB,MACfjB,mBAAmB,GAAD,OAAKnB,EAAMwf,KAAKhJ,OAAO,GAAvB,cAA+BxW,EAAMwf,KAAKhJ,OAAO,GAAjD,MAClB/X,MAAOuB,EAAMwf,KAAK/gB,MAClBC,OAAQsB,EAAMwf,KAAK9gB,OACnBa,SAAU,WACVwZ,KAAMyI,GAAYxhB,EAAMwf,KAAK/gB,MAAM,EACnCua,IAAKwI,GAAYxhB,EAAMwf,KAAK9gB,OAAO,GAGvC,OACI,yBAAKmZ,UAAU,gBACX,yBAAKjW,MAAO2f,IACZ,uBAAG3f,MAAO,CAACD,SAAU7C,GAAY,GAAIS,SAAU,WAAY+Z,OAAQ,MAAOP,KAAM,EAAGqI,OAAQ,IAAKphB,EAAMob,SAM5GqG,GAAe,SAACzhB,GAElB,IAAM0hB,EA1CV,SAAgChZ,GAC5B,IAAmBiZ,EAAfD,EAAW,GADmB,uBAElC,IAAI,IAAJ,IAAYhZ,EAAZ,gDAAIiZ,EAAc,SACN5W,KAAKgB,QAAQ2V,EACjBA,EAASC,EAAK5W,KAAKgB,OAAO,EAE1B2V,EAASC,EAAK5W,KAAKgB,MAAQ,EAND,kFAQlC,OAAO2V,EAkCUE,CAAuB5hB,EAAM6hB,eAGxCC,EAFmBvL,GAAY1Q,OAAO,SAAAkc,GAAO,OAAIA,EAAQhX,OAAS/K,EAAM+K,OAEnClD,IAAK,SAAAka,GAAO,OAAI,kBAAC,GAAD,CAAevC,KAAMuC,EAAS7B,IAAK6B,EAAQliB,GAAIub,MAAS2G,EAAQhW,QAAQ2V,EAAWA,EAASK,EAAQhW,MAAM,MAYrK,OACI,yBAAKnK,MAXK,CACVE,QAAS,OACT8V,cAAe,MACf0B,OAAQ,MACRzX,QAAS,MACTb,gBAAiB,cACjBghB,UAAW,sBACXxgB,aAAc,SAKV,yBAAKI,MAAO,CAAEqgB,YAAa,cAAeC,gBAAiB,iBAAkB5I,OAAO,WAAYzX,QAAS,QAAW7B,EAAM+K,MACzH+W,IAKPK,GAAkB,SAACniB,GAErB,IAAMoiB,EAAiB,CACnB7iB,SAAU,WACVwZ,KAAM,MACNC,IAAK,MACLC,UAAW,uBACXjY,gBAAiB,YACjBO,OAAQ,kBACRC,aAAc,OACdwgB,UAAW,sBACXjK,WAAY,UACZjX,MAAO,QACPe,QAAS,MACTod,OAAQ,EACRnd,QAAS9B,EAAMqiB,UAAUtB,OAAQ,eAAiB,QAGtD,OACQ,yBAAKlhB,GAAG,YAAY+B,MAAOwgB,GACvB,yBAAKxgB,MAAO,CAAED,SAAU7C,GAAY,GAAI+C,QAAS,MAAOyX,OAAO,MAAOwG,UAAW,WAC7E,uBAAGle,MAAO,CAAED,SAAU7C,GAAY,GAAI+C,QAAS,MAAOyX,OAAO,MAAOxX,QAAQ,eAAgBP,OAAQ,qBAApG,cAEJ,yBAAKK,MAAO,CAACE,QAAS,OAAQD,QAAS,MAAO+V,cAAe,SAAUF,eAAgB,WACnF,kBAAC,GAAD,CAAc3M,KnCxEZ,SmCwE0B8W,cAAe7hB,EAAMqiB,UAAN,SAC3C,kBAAC,GAAD,CAActX,KnCxEX,UmCwE0B8W,cAAe7hB,EAAMqiB,UAAN,UAC5C,kBAAC,GAAD,CAActX,KnCxEV,WmCwE0B8W,cAAe7hB,EAAMqiB,UAAN,cAO3DC,G,iLAGE,OACI,kBAAC,GAAD,CAAiBD,UAAWlK,KAAKnY,MAAMqiB,gB,GAJ3BnJ,aAST8D,eAhGS,SAAA7J,GACpB,MAAO,CACHkP,UAAWlP,EAAMkP,YA8FVrF,CAAyBsF,I,ujBC9GxC,IAAMpF,GAAU,SAACC,EAASC,GACtB,WACIvb,QAAS,MACTb,gBAAiBmc,GACd9b,GAAY,EAAG+b,EAAa,KAoCxBmF,GAhCK,SAACviB,GACjB,IAAM4B,EAAK,IACPrC,SAAU,WACVd,MAAO,IACPC,OAAQ,KACL2C,GAAY,EAAG,OAAQ,GAJnB,CAKP0X,KAAK,MACLC,IAAI,MACJC,UAAW,wBACXgG,OAAQ,EACRje,gBAAgB,aAChBc,QAAS9B,EAAMwiB,KAAM,OAAQ,OAC7B5K,cAAe,SACfF,eAAgB,eAChBC,WAAY,SACZI,WAAY,UACZpW,SAAU7C,GAAY,OAG1B,OACI,yBAAK8C,MAAOA,GACR,uBAAGA,MAAO,CAACd,MAAM,UAAjB,sBACA,yBAAKc,MAAO,CAACE,QAAQ,OAAQ4V,eAAe,kBACxC,4BAAQ9V,MAAK,IAAGnD,MAAM,QAAUsZ,WAAW,UAAWpW,SAAU7C,GAAY,MAASoe,GAAQ,iBAAkB,SAAlG,CAA4G5D,OAAO,SAAS+C,QAASrc,EAAMyiB,aAAxJ,WACY,kBAAC,KAAD,CAAiB7gB,MAAO,CAACd,MAAM,SAAUC,KAAK,KAAKod,KAAMuE,QACrE,4BAAQ9gB,MAAK,IAAGnD,MAAM,QAASsZ,WAAW,UAAWpW,SAAU7C,GAAY,MAASoe,GAAQ,YAAa,OAA5F,CAAoG5D,OAAO,SAAS+C,QAASrc,EAAM2iB,YAAhJ,UACW,kBAAC,KAAD,CAAiB/gB,MAAO,CAACd,MAAM,SAAUC,KAAK,KAAKod,KAAMyE,WCnB9EC,G,YAGF,WAAY7iB,GAAQ,IAAD,8BACf,4CAAMA,KAED8iB,YAAc,KACnB,EAAKC,YAAc,KACnB,EAAKC,UAAY,KACjB,EAAKC,UAAY,KAEjB,EAAK5I,cAAgB,EAAKA,cAAc7B,KAAnB,gBACrB,EAAK0K,iBAAmB,EAAKA,iBAAiB1K,KAAtB,gBACxB,EAAK2K,gBAAkB,EAAKA,gBAAgB3K,KAArB,gBACvB,EAAK8B,eAAiB,EAAKA,eAAe9B,KAApB,gBACtB,EAAK4K,qBAAuB,EAAKA,qBAAqB5K,KAA1B,gBAC5B,EAAKrF,MAAQ,CACTkQ,eAAe,GAdJ,E,iFAmBf/c,OAAOiV,iBAAiB,UAAWpD,KAAKkC,eACxC/T,OAAOiV,iBAAiB,aAAcpD,KAAK+K,kBAAkB,GAC7D5c,OAAOiV,iBAAiB,YAAapD,KAAKgL,iBAAiB,GAC3D7c,OAAOiV,iBAAiB,WAAYpD,KAAKmC,gBAAgB,K,6CAKzDhU,OAAOkV,oBAAoB,UAAWrD,KAAKkC,eAC3C/T,OAAOkV,oBAAoB,aAAcrD,KAAK+K,kBAC9C5c,OAAOkV,oBAAoB,YAAarD,KAAKgL,iBAC7C7c,OAAOkV,oBAAoB,WAAYrD,KAAKmC,kB,6CAK5CnY,GAAgBjF,GAChBib,KAAKmL,SAAS,CACVD,eAAgBlL,KAAKhF,MAAMkQ,kB,uCAKlBtI,GACbA,EAAMwI,iBACNpL,KAAK2K,YAAc3K,KAAK6K,UAAYjI,EAAMyI,QAAQ,GAAGC,QACrDtL,KAAK4K,YAAc5K,KAAK8K,UAAYlI,EAAMyI,QAAQ,GAAGE,U,sCAGzC3I,GACZA,EAAMwI,iBACNpL,KAAK6K,UAAYjI,EAAMyI,QAAQ,GAAGC,QAClCtL,KAAK8K,UAAYlI,EAAMyI,QAAQ,GAAGE,QAClC,IAAIC,EAAQxL,KAAK6K,UAAY7K,KAAK2K,YAC9Bc,EAAQzL,KAAK8K,UAAY9K,KAAK4K,YAC/BnkB,KAAK2J,IAAIob,GAAS/kB,KAAK2J,IAAIqb,GACvBD,EAAQ,EACPxL,KAAKnY,MAAM6jB,qBAAqBtoB,GAC1BooB,EAAQ,IACdxL,KAAKnY,MAAM6jB,qBAAqBtoB,GAGjCqoB,EAAQ,EACPzL,KAAKnY,MAAM6jB,qBAAqBtoB,GAC1BqoB,EAAQ,GACdzL,KAAKnY,MAAM6jB,qBAAqBtoB,K,uCAMxC,IAAIooB,EAAQ/kB,KAAK2J,IAAI4P,KAAK6K,UAAY7K,KAAK2K,aACvCc,EAAQhlB,KAAK2J,IAAI4P,KAAK8K,UAAY9K,KAAK4K,aAChC,IAARY,GAAqB,IAARC,GACZzL,KAAKnY,MAAM8jB,uB,oCAGL/I,GACV,IAAI/T,EAAU+T,EAAM/T,QAEjBnL,EAAeiP,SAAS9D,KAEvB+T,EAAMwI,iBACNxI,EAAMgJ,2BACHvoB,EAAesP,SAAS9D,GACvBmR,KAAKnY,MAAM6jB,qBAAqB7c,GAC1BvL,EAAUqP,SAAS9D,GACzBmR,KAAKnY,MAAM8jB,qBACLpoB,EAAWoP,SAAS9D,GAC1BmR,KAAKnY,MAAMgkB,eACLroB,EAAcmP,SAAS9D,GAC7BmR,KAAKnY,MAAMikB,kBACLroB,EAAQkP,SAAS9D,IACvBmR,KAAKiL,0B,+BAQP,IAAD,OAECxhB,EAAQ,CACVrC,SAAU,WACV+Z,OAAS,OACT7a,MAAO0Z,KAAKnY,MAAMvB,MAClBC,OAAQyZ,KAAKnY,MAAMtB,OACnB6C,OAAQ,mBACR2iB,SAAU,SACVljB,gBAAiB,SAGrB,OACI,yBAAK2X,IAAK,SAAAwL,GAAK,OAAI,EAAKA,MAAQA,GAAOtkB,GAAG,QAAQ+B,MAAOA,GACjD,kBAAC,GAAD,CAAKiG,IAAKsQ,KAAKnY,MAAM6H,IAAKL,SAAU2Q,KAAKnY,MAAMwH,WAC/C,kBAAC,GAAD,CAAQA,SAAU2Q,KAAKnY,MAAMwH,WAC7B,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAagb,KAAMrK,KAAKhF,MAAMkQ,cAAeZ,YAAatK,KAAKnY,MAAMokB,WAAYzB,WAAYxK,KAAKiL,4B,GAzHlGlK,aAgIL8D,eAAQ,KAzII,SAAA/V,GACvB,MAAO,CACH4c,qBAAsB,SAAC7c,GAAcC,EAASF,GAAqBC,KACnE8c,mBAAoB,WAAQ7c,ElCuTI,SAACA,EAAUC,GAChCA,IAAWC,OACfC,YAGPH,EAASoF,MAFTpF,EAASkF,SkCzTT6X,aAAc,WAAQ/c,ElCsOQ,SAACA,EAAUC,GAC7C,IAAMC,EAASD,IAAWC,OAC1B,IAAGA,EAAOC,YAAV,CAEA,IAAMyD,EAAoC,OAAvB1D,EAAOkD,cAAsBnD,IAAWiD,YAAYtE,OAAQ,SAAAwe,GAAI,OAAIA,EAAKxkB,KAAOsH,EAAOkD,gBAAiB,KAC3G,OAAbQ,IACC1I,GAAgB/E,GAChB6J,EAASgM,GAAqBpI,EAAW,KACzC5D,EAASmD,WkC7OT6Z,gBAAiB,WAAQhd,GlC++B7B9E,GAAgB/E,GACT,CACH2N,KJ5+BgC,iCsC+HzBiS,CAAkC6F,I,ujBC3IjD,IAiBMyB,G,4LAGEnM,KAAKnY,MAAMukB,aAAa,CAACpM,KAAKnY,MAAMvB,MAAO0Z,KAAKnY,MAAMtB,SAClDyZ,KAAKnY,MAAMwkB,SAGXrM,KAAKnY,MAAMykB,mBAFXtM,KAAKnY,MAAM0kB,QAAQ1iB,M,+BAQvB,IAAMJ,EAAQ,CACVrC,SAAU,WACV+Z,OAAS,OACT7a,MAAO0Z,KAAKnY,MAAMvB,MAClBC,OAAQyZ,KAAKnY,MAAMtB,OACnB6C,OAAQ,mBACR2iB,SAAU,SACVljB,gBAAiB,SAGrB,OAAGmX,KAAKnY,MAAM6H,IAAI8c,UAEV,yBAAK9kB,GAAG,OAAQ+B,MAAK,MAAMA,EAAN,CAAaZ,gBAAgB,YAAa0a,UAAU,UACrE,kBAAC,GAAD,CAAS1D,IAAI,iBAGdG,KAAKnY,MAAMyO,aAAamW,YAE3B,yBAAK/kB,GAAG,OAAQ+B,MAAK,MAAMA,EAAN,CAAaZ,gBAAgB,YAAY0a,UAAU,UACpE,kBAAC,GAAD,CAAS1D,IAAI,oBAGfG,KAAKnY,MAAMuJ,OAAOwX,OAEpB,yBAAKlhB,GAAG,OAAQ+B,MAAK,MAAMA,EAAN,CAAa8Z,UAAU,UACxC,kBAAC,GAAD,CAAQnS,OAAQ4O,KAAKnY,MAAMuJ,UAM/B,kBAAC,IAAMsb,SAAP,KACI,kBAAC,GAAD,CAAOpmB,MAAO0Z,KAAKnY,MAAMvB,QACzB,kBAAC,GAAD,CAAOA,MAAO0Z,KAAKnY,MAAMvB,MAAOC,OAAQyZ,KAAKnY,MAAMtB,OAAQmJ,IAAKsQ,KAAKnY,MAAM6H,IAAKL,SAAU2Q,KAAKnY,MAAMwH,SAAU4c,WAAYjM,KAAKnY,MAAMokB,kB,GA9CvIlL,aAqDJ8D,eAtES,SAAA7J,GACpB,MAAO,CACHtL,IAAKsL,EAAMtL,IACXL,SAAU2L,EAAM3L,SAChB+B,OAAQ4J,EAAM5J,OACdkF,aAAc0E,EAAM1E,eAID,SAAAxH,GACvB,MAAO,CACHyd,QAAS,SAAC1iB,GAAYiF,EAASqH,GAAOtM,KACtCyiB,iBAAkB,WAAQxd,EnCujBI,SAACA,GACnC,IAAK,IACKsX,EAAkBG,aAAaoG,QAAQ5oB,GAE7C,GAAwB,OAApBqiB,EACF,OAGF,IAAMpL,EAASqL,KAAKuG,MAAMxG,GAC1BtX,EAASgI,MACT,IAAMC,EAAQ,IAAIC,MAClBD,EAAME,OAEN,WACInI,EAASsM,GAA2BJ,KAFxCjE,EAAM9M,IAAM+Q,EAAMtL,IAAIzF,IAKtB,MAAOwc,GAEH,YADArY,MAAM,2CAGZ,OAAO,KmC3kBLge,aAAc,SAACS,GnCmpBW,IAACvd,EmCnpBDR,EnCqpBvB,CACH8D,KJ5qB0B,qBI6qB1B+E,QAAS,CACLrI,aALuBA,EmCnpB2Bud,EnCypBlDnc,OALO,CAAC,CAAEpB,EAAa,GAAG,EAAMpI,IAAeoI,EAAa,GAAG,EH1qBlD,IG0qBqE,CAAEA,EAAa,GAAG,EAAMpI,IAAeoI,EAAa,GAAG,EH1qB5H,WsC+EVuV,CAA6CsH,I,ujBCzE5D,IAAMW,GAAiB,WACnB,IAEI,OAAyB,OADDvG,aAAaoG,QAAQ5oB,GAE7C,MAAO0iB,GAEP,OADArY,MAAM,6EACC,IAMT2e,GAAU,SAACllB,GAEb,IAAMmlB,EAAS,IACX1mB,MAAM,QACNoD,QAAS,OACTkW,WAAY,QACZpW,SAAU7C,GAAY,GACtBwa,OAAO,OACPtY,gBAAiB,WACdK,GAAY,EAAG,UAAW,IAG3B+jB,EAAa,MACZD,EADY,CAEfrkB,MAAO,QACPwa,QAAS,QAGb,OAAGtb,EAAMic,SAED,4BAAQA,UAAQ,EAACra,MAAOwjB,GAAgBplB,EAAMqlB,OAI9C,4BAAQhJ,QAAS,WAAYrc,EAAMqc,WAAaza,MAAOujB,GAAYnlB,EAAMqlB,QA+BtEC,G,iLAdP,OACI,yBAAK1jB,MAAK,MAVA,CACVrC,SAAU,WACVwZ,KAAM,EAAGC,IAAK,EACdlX,QAAS,OACT8V,cAAe,SACfF,eAAe,SACfC,WAAY,UAIF,CAAalZ,MAAO0Z,KAAKnY,MAAMvB,MAAOC,OAAQyZ,KAAKnY,MAAMtB,UAC/D,yBAAKkD,MAAO,CAACrC,SAAS,WAAYd,MAAM,OAAQC,OAAQ,MAAOwlB,SAAS,WACpE,yBAAKrM,UAAU,eAAejW,MAAK,IAAGrC,SAAS,WAAWd,MAAM,OAAQC,OAAO,QAAUkC,GAAY,GAAD,OAAI9D,EAAJ,cAA4B,KAAM,YAE1I,yBAAK+a,UAAU,WAAWjW,MAAO,CAACrC,SAAS,WAAYd,MAAM,OAAQC,OAAQ,MAAOoD,QAAQ,OAAQ8V,cAAc,SAAUD,WAAW,SAAU2D,QAAQ,IACrJ,kBAAC,GAAD,CAAS+J,MAAM,iBAAiBpJ,UAAU,EAAOI,QAASlE,KAAKnY,MAAMulB,eACrE,kBAAC,GAAD,CAASF,MAAM,YAAYpJ,UAAWgJ,KAAkB5I,QAASlE,KAAKnY,MAAMwlB,iB,GAnBzEtM,a,ujBCzCvB,IAAMuM,GAAU,UAAM3oB,EAAN,kBAgBV4oB,GAAgB,SAAC1lB,GACnB,OACI,yBAAK4B,MAAO,CAACnD,MAAM,IAAKC,OAAO,KAAM2d,QAAS,WAAYrc,EAAM2lB,MAAM3lB,EAAM4lB,UACxE,4BAAQ/N,UAAW7X,EAAM4lB,SAAS5lB,EAAM6lB,SAAS,WAAW,GAAKjkB,MAAK,IAAGnD,MAAM,OAAQC,OAAO,QAAWkC,GAAY,GAAD,OAAI6kB,IAAJ,OAAiBzlB,EAAM4lB,OAAvB,QAAqC5lB,EAAM8lB,QAAS,aAK9KC,G,YAEF,WAAY/lB,GAAQ,IAAD,8BACf,4CAAMA,KACDgmB,qBAAuB,EAAKA,qBAAqBxN,KAA1B,gBAC5B,EAAKyN,iBAAmB,EAAKA,iBAAiBzN,KAAtB,gBACxB,EAAK0N,gBAAkB,EAAKA,gBAAgB1N,KAArB,gBACvB,EAAKrF,MAAQ,CACTgT,UAAW,KACXpa,KAAM,GACNqa,OAAO,IARI,E,8EAYFrL,GACb5Y,GAAgBjF,GAChBib,KAAKmL,SAAS,CACVvX,KAAMgP,EAAMxM,OAAO8X,MACnBD,OAAO,O,2CAIMR,GACjBzjB,GAAgBjF,GAChBib,KAAKmL,SAAS,CACV6C,UAAWP,EACXQ,OAAO,O,wCAvCD,IAACra,EA4Ce,OAAvBoM,KAAKhF,MAAMgT,WA5CHpa,EAiDUoM,KAAKhF,MAAMpH,KAhDtB,iBACCua,KAAKva,IAqDZoM,KAAKnY,MAAMumB,kBACXpO,KAAKnY,MAAMwmB,eAAerO,KAAKhF,OAC/BgF,KAAKnY,MAAMymB,gBAPXtO,KAAKmL,SACD,CAAE8C,OAAO,mBANbjO,KAAKmL,SACD,CAAE8C,OAAQ,+B,+BAkBlB,IAAMxkB,EAAQ,CACVrC,SAAU,WACVwZ,KAAM,MACN2C,UAAW,GACXzC,UAAW,sBACXnX,QAAS,OACT8V,cAAe,SACfD,WAAY,SACZI,WAAY,QACZpW,SAAU7C,GAAY,IAG1B,OACI,yBAAK+Y,UAAU,eAAejW,MAAK,MAAMA,EAAN,CAAanD,MAAO,OAAQC,OAAQ,UACnE,4BAAQ2d,QAAUlE,KAAKnY,MAAMokB,WAAYxiB,MAAK,IAAGC,QAAQ,MAAO6kB,WAAW,MAAO1lB,gBAAiB,UAAWqY,UAAU,cAAgBhY,GAAY,EAAG,UAAW,KAAK,uBAAGwW,UAAU,4BACpL,yBAAKjW,MAAO,CAAC0X,OAAO,OAAQzX,QAAQ,OAAQf,MAAM,QAASE,gBAAgB,UAAW6c,UAAU,oBAAqB8I,aAAa,sBAAlI,sBACA,yBAAK/kB,MAAO,CAACnD,MAAM,MAAOC,OAAO,MAAOoD,QAAS,OAAQ8V,cAAe,MAAOF,eAAe,gBAAiBC,WAAY,WACvH,kBAAC,GAAD,CAAeiO,OAAO,WAAWD,MAAOxN,KAAK6N,qBAAsBH,SAAU1N,KAAKhF,MAAMgT,UAAWL,QAAQ,YAC3G,kBAAC,GAAD,CAAeF,OAAO,WAAWD,MAAOxN,KAAK6N,qBAAsBH,SAAU1N,KAAKhF,MAAMgT,UAAWL,QAAQ,aAE/G,yBAAKlkB,MAAO,CAACnD,MAAM,MAAOC,OAAQ,OAAS4a,OAAO,OAAOxX,QAAQ,OAAQ4V,eAAe,SAAUC,WAAW,WACzG,2BAAOiP,QAAU,SAAShlB,MAAO,CAACgX,YAAY,OAAQjX,SAAS7C,GAAY,GAAIgC,MAAM,UAArF,iBACA,yBAAKc,MAAO,CAACnD,MAAM,MAAOsZ,WAAW,UACjC,2BAAO8O,SAAU1O,KAAK8N,iBAAkBlb,KAAO,OAAOgB,KAAO,SAASlM,GAAK,SAAS+B,MAAO,CAACnD,MAAM,OAAQsZ,WAAW,QAASpW,SAAS7C,GAAY,GAAIgC,MAAM,WAAYulB,MAAOlO,KAAKhF,MAAMpH,OAC3L,yBAAKnK,MAAO,CAACnD,MAAM,OAAQkD,SAAU7C,GAAY,GAAIgC,MAAM,SAlGlE,EAkGO,OAlGO,GAkGP,kCAGR,4BAAQub,QAASlE,KAAK+N,gBAAiBtkB,MAAK,IAAGnD,MAAM,IAAKsZ,WAAW,QAAQpW,SAAS7C,GAAY,KAAMwa,OAAO,OAAQzX,QAAQ,OAAQb,gBAAiB,WAAcK,GAAY,EAAG,UAAW,KAAhM,iBACA,uBAAGO,MAAO,CAACd,MAAM,MAAOa,SAAS7C,GAAY,KAAMqZ,KAAKhF,MAAMiT,a,GA/EnDlN,aAqFZ8D,eAAQ,KAzGI,SAAA/V,GACvB,MAAO,CACHuf,eAAgB,YAAwB,IAAtBza,EAAqB,EAArBA,KAAMoa,EAAe,EAAfA,UAAiBlf,ErC2oBd,SAAC8E,EAAM+a,GACtC,MAAO,CACH/b,KJxpBuB,kBIypBvB+E,QAAU,CACN/D,OACA+a,YqChpB8CC,CAAoBhb,EAAMoa,KAC5EI,gBAAiB,WAAQtf,ErCspBtB,CACH8D,KJhoByB,yByC+ElBiS,CAAkC+I,ICnHpCiB,GAAY,CACrB,4CACA,8CACA,4CACA,8CACA,+CACA,iDACA,mDACA,oDACA,mDACA,8CACA,+CACA,iDACA,+CACA,iDACA,+CACA,iDACA,+CACA,iDACA,yDACA,gEACA,+DACA,mDACA,2DACA,qDACA,gDACA,kDACA,gDACA,kDACA,gDACA,kDACA,gDACA,kDACA,gDACA,kDACA,gDACA,kDACA,gDACA,kDACA,gDACA,kDACA,gDACA,kDACA,6CACA,+CACA,6CACA,+CACA,6CACA,+CACA,6CACA,+CACA,gDACA,kDACA,gDACA,kDACA,4CACA,8CACA,qDACA,mDACA,qDACA,+CACA,iDACA,+CACA,iDACA,+CACA,iDACA,+CACA,iDACA,+CACA,iDACA,6CACA,2CACA,6CACA,6CACA,+CACA,6CACA,8CACA,4CACA,gDACA,6CACA,4CACA,6DACA,8D,6NCvEJ,IAAMC,GAAmB,SAACjnB,GAEtB,IAAM4B,EAAQ,CACVrC,SAAU,WACV+Z,OAAQ,YACR/X,OAAQ,mBACR2iB,SAAU,SACVzlB,MAAOuB,EAAMvB,MACbC,OAAQsB,EAAMtB,OACdoD,QAAS,OACT8V,cAAe,SACfF,eAAgB,SAChBC,WAAY,SACZ3W,gBAAgB,SAGpB,OACI,yBAAKY,MAAOA,GACR,yBAAKA,MAAO,CAACnD,MAAM,OAAQC,OAAO,QAC9B,kBAAC,GAAD,CAASsZ,IAAKhY,EAAMgY,OAExB,yBAAKpW,MAAO,CAACnD,MAAM,MAAOC,OAAO,QAC7B,8BAAUkD,MAAO,CAACrC,SAAS,WAAYd,MAAM,OAAQC,OAAO,IAAK2nB,MAAOrmB,EAAMknB,KAAMzU,IAAKzS,EAAMmnB,OAA/F,UACQvoB,KAAKwoB,KAAKpnB,EAAMknB,KAAKlnB,EAAMmnB,MAAM,KADzC,SAkJDE,G,YAxIX,WAAYrnB,GAAQ,IAAD,8BACf,4CAAMA,KACDmT,MAAQ,CACTmU,SAAS,EACTC,MAAM,EACNC,cAAc,EACdC,MAAM,EACNjD,UAAU,EACVkD,UAAWppB,GAAegI,OAAOqhB,OAAOlpB,MAAO6H,OAAOqhB,OAAOjpB,QAC7DkpB,cAAeZ,GAAU5mB,OACzBynB,aAAc,GAElB,EAAKC,GAAL,UAAahrB,EAAb,aACA,EAAKirB,mBAAqB,EAAKA,mBAAmBvP,KAAxB,gBAC1B,EAAKwP,eAAiB,EAAKA,eAAexP,KAApB,gBACtB,EAAKyP,mBAAqB,EAAKA,mBAAmBzP,KAAxB,gBAC1B,EAAK4L,WAAa,EAAKA,WAAW5L,KAAhB,gBAhBH,E,6EAqBF0P,EAAaC,GAC1B,IAAIhoB,EACAioB,EACAC,EAAS,EAEb,IAAKloB,EAAI,EAAGioB,EAAIF,EAAY9nB,OAAQD,EAAIioB,EAAGjoB,KACtC,SAAUmoB,EAAKlmB,GACZkmB,EAAIlZ,OAAS,WACT+I,KAAKmL,SAAS,CACVuE,eAAgBQ,IAEhBA,GAAUH,EAAY9nB,QAAU+nB,GAChCA,KAEN3P,KAAKL,MACPmQ,EAAIlmB,IAAMA,IACZoW,KAAKL,KAVN,CAUa,IAAIhJ,MAAS+Y,EAAY/nB,M,0CAM3C,IAAMooB,EAAa,WACfpQ,KAAKmL,SAAS,CACVgE,SAAS,EACTC,MAAM,EACNC,cAAc,EACdC,MAAM,EACNjD,UAAU,KAEhBhM,KAAKL,MAEPA,KAAKqQ,gBAAgBxB,GAAWuB,K,2CAIhCpmB,GAAgBlF,GAChBkb,KAAKmL,SAAS,CACViE,MAAM,EACNC,cAAc,EACdC,MAAM,EACNjD,UAAU,M,uCAKdriB,GAAgBhF,GAChBgb,KAAKmL,SAAS,CACViE,MAAM,EACNC,cAAc,EACdC,MAAM,EACNjD,UAAU,M,2CAKdriB,GAAgBhF,GAChBgb,KAAKmL,SAAS,CACViE,MAAM,EACNC,cAAc,EACdC,MAAM,EACNjD,UAAU,M,mCAKdriB,GAAgBlF,GAChBkb,KAAKmL,SAAS,CACViE,MAAM,EACNC,cAAc,EACdC,MAAM,EACNjD,UAAU,M,+BAMd,IAAM5iB,E,uVAAK,EACPrC,SAAU,WACV+Z,OAAQ,YACR/X,OAAQ,mBACR2iB,SAAU,SACVzlB,MAAO0Z,KAAKhF,MAAMuU,UAAU,GAC5BhpB,OAAQyZ,KAAKhF,MAAMuU,UAAU,IAC1B9mB,GAAYuX,KAAK2P,GAAI,QAAS,UAGjCrL,EAAe,KAAMC,EAAkB,KAmB3C,OAjBGvE,KAAKhF,MAAMmU,SACV7K,EAAe,kBAAC,GAAD,CAAkBhe,MAAO0Z,KAAKhF,MAAMuU,UAAU,GAAIhpB,OAAQyZ,KAAKhF,MAAMuU,UAAU,GAAI1P,IAAI,oBAAoBmP,MAAOhP,KAAKhF,MAAMyU,cAAeV,KAAM/O,KAAKhF,MAAM0U,eAC5KnL,EAAkB,MACZvE,KAAKhF,MAAMoU,MACjB9K,EAAe,yBAAK7a,MAAOA,GAAO,kBAAC,GAAD,CAAUnD,MAAO0Z,KAAKhF,MAAMuU,UAAU,GAAIhpB,OAAQyZ,KAAKhF,MAAMuU,UAAU,GAAInC,aAAcpN,KAAK4P,mBAAoBvC,SAAUrN,KAAK6P,kBACnKtL,EAAkB,kBAAC,KAAD,CAAata,IAAK9E,EAAiBsf,MAAM,EAAMC,OAAO,EAAOC,OAAQ,MACjF3E,KAAKhF,MAAMqU,cACjB/K,EAAe,yBAAK7a,MAAOA,GAAO,kBAAC6mB,GAAD,CAAuBhqB,MAAO0Z,KAAKhF,MAAMuU,UAAU,GAAIhpB,OAAQyZ,KAAKhF,MAAMuU,UAAU,GAAKjB,aAActO,KAAK8P,mBAAoB7D,WAAYjM,KAAKiM,cACnL1H,EAAkB,kBAAC,KAAD,CAAata,IAAK9E,EAAiBsf,MAAM,EAAMC,OAAO,EAAQC,OAAQ,MAClF3E,KAAKhF,MAAMsU,MACjBhL,EAAe,kBAAC,GAAD,CAAMhe,MAAO0Z,KAAKhF,MAAMuU,UAAU,GAAIhpB,OAAQyZ,KAAKhF,MAAMuU,UAAU,GAAIlD,SAAUrM,KAAKhF,MAAMqR,SAAUJ,WAAYjM,KAAKiM,aACtI1H,EAAkB,OAElBD,EAAe,yBAAK7a,MAAO,CAACmW,WAAW,UAAWpW,SAAS,OAAQb,MAAM,UAA1D,sCACf4b,EAAkB,MAIlB,kBAAC,IAAMmI,SAAP,KACKpI,EACAC,O,GApIExD,a,gkBCpCnB,IAEMwP,GAAgB,CACE3c,KAAM,SACNhE,KAAMiM,GAAK,SACXzU,SAAU,CAAC,EAAG,GACd6G,UAAW9K,EACX0jB,eAAgBhL,GAAK,SAAL,KAChBjO,aAAa,EACbE,aAAc,GACd8Y,UAAW,EACXjV,cAAe,EACf1C,aAAa,EACbC,QAAQ,EACRgC,UAAW,KACXgB,cAAe,KACf/C,UAAU,EACViC,OAAQ,CACAvH,MAAO,EACPgQ,IAAK,EACL8L,IAAK,EACLC,KAAM,EACNpS,oBAAoB,KAI9Cgd,GAA4B,SAAChd,EAAqBid,GAChD,IAAIC,EAAsB,MAAOld,GAIjC,OAHmB,OAAhBid,IACKC,EAAuBD,GAAiB,GAEzCC,G,ujBCjCf,IAAMH,GAAgB,CACE3c,KAAM,KACN3D,MAAO,GACP3J,MAAO,EACPC,OAAQ,EACRimB,WAAW,EACXviB,IAAK,KACL2R,SAAU,M,ujBCRlC,IAAM2U,GAAgB,CACEjiB,MAAO,CAAC,EAAG,GACXmB,IAAK,GACLnJ,MAAM,EACNC,OAAO,EACP+I,aAAa,CAAC,EAAG,GACjBoB,OAAO,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,K,ujBCJzC,IAAM6f,GAAgB,CAClBhgB,KAAO,GACPrB,QAAQ,G,ujBCDL,I,ykBCHP,IAAMqhB,GAAgB,CAClB3H,QAAQ,EACRxhB,SAAU,MACViN,QAAS,GACTwG,QAAS,GACTzG,UAAW,EACXD,WAAY,EACZM,MAAO,KACPF,oBAAoB,G,ujBCRxB,IAAMgc,GAAgB,CAClB3H,QAAQ,EACR+H,OAAS,GACTC,SAAU,GACVC,QAAS,I,ujBCJb,IAAMN,GAAgB,CACE9D,aAAa,EACblW,WAAY,I,ujBCApC,IAAMua,GAAe,SAACC,GAElB,IADA,IAAIC,EAAS,GACLhpB,EAAE,EAAGA,EAAE+oB,EAAG/oB,IACdgpB,EAAO1P,KAAK,IAAI2P,MAAMF,GAAGG,KAAK,IAElC,OAAOF,GAMLG,GAAW,SAACtnB,GACd,OAJe,EAIe,GAATA,EAAM,IAGzB0mB,GAAgB,CACE3H,QAAQ,EACRxE,SAAS,EACTQ,OAAO,EACPwM,UAAW,EACXpiB,OAAQ,CACJ4E,KAAM,SACN3J,IAAK,GACLJ,MAAO,EACPgQ,IAAK,EACL3B,SAAU,KACV6B,MAAO,EACPQ,MAnBT,EAoBS6G,SApBT,EAqBSnJ,aAAc6Y,GAAa,GAC3BnO,aAAc,CACV9Y,MAAO,EACPgQ,IAAK,IAGblM,IAAK,CACDjG,GAAI,KACJkM,KAAM,MACN3J,IAAI,GACJJ,MAAO,EACP0J,YAAa,KACb2E,SAAU,KACVqC,MAlCT,EAmCS6G,SAnCT,EAoCSrH,MAAO,GAEXiK,WAAY,EACZtK,YAAa,EACbL,QAAS,uCACTmL,MAAO,MCxCzB6M,GAAcC,2BAAgB,CAChCtiB,OT0BkB,WAAyC,IAAxCgM,EAAuC,6DAA3BuV,IAAgBgB,EAAW,uCAC1D,OAAOA,EAAO3e,MACV,I5CNyB,oB4COjB,aACW2d,IAEnB,KAAK5U,EACG,aACWX,EADX,CAEQ5T,SAAUmqB,EAAO5Z,QAAQ3I,OAAO5H,SAChC6G,UAAW3F,GAAS0S,EAAM/M,UAAWsjB,EAAO5Z,QAAQ3I,OAAOf,WAC3D4Y,eAAgB7L,EAAMpL,KAAKtH,GAAS0S,EAAM/M,UAAWsjB,EAAO5Z,QAAQ3I,OAAOf,YAC3EL,aAAa,EACbE,aAAc,GACd8Y,UAAW,EACX3X,aAAa,EACbC,QAAQ,EACRgC,UAAW,KACXgB,cAAe,KACf/C,UAAU,EACViC,OAAO,MACImgB,EAAO5Z,QAAQR,UAAW6D,EAAM5J,OAAOmf,GAAcnf,UAGhF,I5C/DuB,kB4CgEf,aACW4J,EADX,CAEQpH,KAAM2d,EAAO5Z,QAAQ/D,KACrBhE,KAAMiM,GAAM0V,EAAO5Z,QAAQgX,WAG3C,I5CrE8B,yB4CsEtB,aAAW3T,EAAX,CACQ5T,SAAUmqB,EAAO5Z,QAAQvQ,SACzBwf,WAAY5L,EAAM4L,UAAU,GAAG5L,EAAMpL,KAAKC,kBAE1D,I5CzE+B,0B4C0EvB,aAAWmL,EAAX,CACQ/M,UAAWsjB,EAAO5Z,QAAQ1J,UAC1B4Y,eAAgB7L,EAAMpL,KAAK2hB,EAAO5Z,QAAQ1J,aAE1D,I5C7E+B,0B4C8EvB,aAAW+M,EAAX,CACQpN,YAAa2jB,EAAO5Z,QAAQ/J,YAC5BE,aAAcyjB,EAAO5Z,QAAQtK,OAC7BuZ,UAAW,IAE3B,I5CtEyB,oB4CuEjB,aACW5L,EADX,CAEQ/L,aAAa,IAE7B,I5C1E2B,sB4C2EnB,aACW+L,EADX,CAEQ/L,aAAa,IAG7B,I5C1E4B,uB4C2EpB,aACW+L,EADX,CAEQ9L,QAAQ,IAExB,I5C7EsB,iB4C8Ed,aACW8L,EADX,CAEQ9L,QAAQ,IAGxB,I5ClFqB,gB4CmFb,aACWqiB,EAAO5Z,QAAQqD,MAAMhM,OADhC,CAEQoC,OAAO,MAAK4J,EAAM5J,QAClBnD,UAAW+M,EAAM/M,UACjB4Y,eAAgB7L,EAAMpL,KAAKoL,EAAM/M,WACjCiB,QAAQ,IAExB,I5CzF+B,0B4C0FvB,aACWqiB,EAAO5Z,QAAQqD,MAAMhM,OADhC,CAEgBE,QAAQ,IAEhC,I5CrHyB,oB4CsHjB,aACW8L,EADX,CAEQ9J,UAAWqgB,EAAO5Z,QAAQlD,QAE1C,I5CzH6B,wB4C0HrB,aACWuG,EADX,CAEQ9I,cAAeqf,EAAO5Z,QAAQjQ,KAE9C,I5CtGoB,e4CuGZ,aACWsT,EADX,CAEQ7L,UAAU,IAE1B,I5CxGkB,a4CyGV,aACW6L,EADX,CAEQ7L,UAAU,EACViC,OAAQ,CACAvH,MAAO0nB,EAAO5Z,QAAQ3I,OAAOgL,SAC7BH,IAAK0X,EAAO5Z,QAAQ3I,OAAO4K,OAC3B+L,IAAmC,IAA9B4L,EAAO5Z,QAAQ6C,aAAkBQ,EAAM5J,OAAOuU,IAAI,EAAG3K,EAAM5J,OAAOuU,IACvEC,MAAqC,IAA/B2L,EAAO5Z,QAAQ6C,aAAmBQ,EAAM5J,OAAOwU,KAAK,EAAG5K,EAAM5J,OAAOwU,KAC1EpS,oBAAqBgd,GAA0BxV,EAAM5J,OAAOoC,oBAAqB+d,EAAO5Z,QAAQ3I,OAAOmL,eAG/H,QACI,OAAOa,ISvIftL,IRFe,WAAyC,IAAxCsL,EAAuC,6DAA3BuV,IAAgBgB,EAAW,uCACvD,OAAOA,EAAO3e,MACV,I7CqByB,oB6CpBrB,aACO2d,IAGX,KAAK5U,EACD,aAAWX,EAAX,CACQpH,KAAM2d,EAAO5Z,QAAQ/D,KACrB3D,MAAOshB,EAAO5Z,QAAQ1H,MACtB3J,MAAOirB,EAAO5Z,QAAQrR,MACtBC,OAAQgrB,EAAO5Z,QAAQpR,OACvB0D,IAAKsnB,EAAO5Z,QAAQ1N,IACpB2R,SAAU2V,EAAO5Z,QAAQiE,SACzB4Q,WAAW,IAEvB,I7CrBmB,c6CsBf,aACOxR,EADP,CAEIwR,WAAW,IAEnB,I7CRqB,gB6CarB,I7CZ+B,0B6Ca3B,aACO+E,EAAO5Z,QAAQqD,MAAMtL,IAD5B,CAEI8c,WAAW,IAEnB,QACI,OAAOxR,IQ9Bf3L,SPLoB,WAA0C,IAAxC2L,EAAuC,6DAA3BuV,IAAgBgB,EAAW,uCAC7D,OAAOA,EAAO3e,MACV,I9Cb0B,qB8CctB,aACOoI,EADP,CAEI1L,aAAciiB,EAAO5Z,QAAQrI,aAC7BoB,OAAQ6gB,EAAO5Z,QAAQjH,SAE/B,KAAKiL,EACD,aAAWX,EAAX,CACY1M,MAAOijB,EAAO5Z,QAAQtI,SAASf,MAC/BmB,IAAK8hB,EAAO5Z,QAAQtI,SAASI,IAC7BnJ,MAAMirB,EAAO5Z,QAAQrR,MACrBC,OAAQgrB,EAAO5Z,QAAQpR,SAEvC,I9ChByB,oB8CiBrB,aAAWyU,EAAX,CAAmB1M,MAAOijB,EAAO5Z,QAAQiD,OACrBnL,IAAK,CAAC8hB,EAAO5Z,QAAQiD,OAAO,GAAGI,EAAM1U,MAAOirB,EAAO5Z,QAAQiD,OAAO,GAAGI,EAAMzU,UAEnG,I9CHqB,gB8CQrB,I9CP+B,0B8CQ3B,aACOgrB,EAAO5Z,QAAQqD,MAAM3L,UAEhC,QACI,OAAO2L,IOvBfrN,INRe,WAAyC,IAAxCqN,EAAuC,6DAA3BuV,IAAgBgB,EAAW,uCACvD,OAAOA,EAAO3e,MAEV,I/CwByB,oB+CvBrB,aACO2d,IAGX,KAAK5U,EACD,OAAI4V,EAAO5Z,QAAQhK,IAGf,CACIuB,QAAQ,EACRqB,KAAMghB,EAAO5Z,QAAQhK,IAAI+B,IAAK,SAAA/B,GAC1B,aAAWA,EAAX,CACQvG,SAAUJ,GAAqB2G,EAAIyH,QAAQ,G9CzBlD,I8C0BOyR,eAAgBlZ,EAAIiC,KAAKjC,EAAIM,WAC7BoH,iBAAkB1H,EAAIM,UACtBL,aAAa,EACbE,aAAc,GACd8Y,UAAW,EACXtR,QAAS,EACTC,QAAS,EACTP,YAAaF,YAAYC,MACzBF,WAAW,EACX5F,aAAa,EACbmC,OAAQ,WAAYzD,GAAKA,EAAIyD,OAC7BmC,YAAa,gBAAiB5F,EAAKA,EAAI4F,YAAa,KACpDpE,UAAU,EACVkC,WAAY,eAAgB1D,GAAKA,EAAI0D,WACrC4C,cAAe,kBAAmBtG,EAAKA,EAAIsG,cAAe,EAC1D1C,WAAU,aAAc5D,IAAKA,EAAI4D,cAtB1CyJ,EA2Bf,I/ClC2B,sB+CmCnB,aACOA,EADP,CAEIzK,KAAMyK,EAAMzK,KAAKb,IAAK,SAAA/B,GACd,OAAGA,EAAIjG,KAAK6pB,EAAO5Z,QAAQjQ,GACvB,MAAWiG,EAAX,CACQvG,SAAUmqB,EAAO5Z,QAAQvQ,SACzBwf,WAAYjZ,EAAIiZ,UAAU,GAAGjZ,EAAIiC,KAAKC,kBAGvClC,MAI/B,I/C/C4B,uB+CgDpB,aACOqN,EADP,CAEIzK,KAAMyK,EAAMzK,KAAKb,IAAK,SAAA/B,GAClB,OAAGA,EAAIjG,KAAK6pB,EAAO5Z,QAAQjQ,GACvB,MAAWiG,EAAX,CACQM,UAAWsjB,EAAO5Z,QAAQ1J,UAC1B4Y,eAAgBlZ,EAAIiC,KAAK2hB,EAAO5Z,QAAQ1J,aAGzCN,MAI3B,I/C5D4B,uB+C6DpB,aACOqN,EADP,CAEIzK,KAAMyK,EAAMzK,KAAKb,IAAK,SAAA/B,GAClB,GAAGA,EAAIjG,KAAK6pB,EAAO5Z,QAAQjQ,GAAI,CAC3B,IAAI4N,EAAU3H,EAAI2H,QACdC,EAAU5H,EAAI4H,QACdV,EAAYlH,EAAIkH,UAAWG,EAAcrH,EAAIqH,YAajD,OAXIuc,EAAO5Z,QAAQ/J,cACfoH,EAAcF,YAAYC,MAC1BO,GAAoBC,EACP,IAAVA,GAAeD,IAAW3H,EAAIyH,QAAQnN,OAAO,GAC5C4M,GAAY,EACZU,GAAW,IACM,IAAXA,GAA0B,IAAVD,IACtBT,GAAY,EACZU,EAAU,IAGlB,MAAW5H,EAAX,CACQC,YAAa2jB,EAAO5Z,QAAQ/J,YAC5BE,aAAcyjB,EAAO5Z,QAAQtK,OAC7BiI,QAASA,EACTC,QAASA,EACTV,UAAWA,EACXG,YAAaA,IAGrB,OAAOrH,MAI3B,I/C5FyB,oB+C6FjB,aACOqN,EADP,CAEIzK,KAAMyK,EAAMzK,KAAKb,IAAK,SAAA/B,GAClB,OAAGA,EAAIjG,KAAK6pB,EAAO5Z,QAAQjQ,GACvB,MAAWiG,EAAX,CACQkH,WAAW,IAGZlH,MAG3B,I/CtGyB,oB+CuGjB,aACOqN,EADP,CAEIzK,KAAOyK,EAAMzK,KAAKb,IAAK,SAAA/B,GACnB,OAAGA,EAAIjG,KAAK6pB,EAAO5Z,QAAQlD,MACvB,MAAW9G,EAAX,CACQsB,aAAa,IAGdtB,MAG3B,I/CjH2B,sB+CkHf,aACOqN,EADP,CAEIzK,KAAMyK,EAAMzK,KAAKb,IAAK,SAAA/B,GAClB,OAAGA,EAAIjG,KAAK6pB,EAAO5Z,QAAQlD,MACvB,MAAW9G,EAAX,CACQsB,aAAa,EACbsC,UAAU,IAGX5D,MAG/B,I/CxH4B,uB+CyHpB,aACOqN,EADP,CAEI9L,QAAQ,IAEpB,I/C3HsB,iB+C4Hd,aACO8L,EADP,CAEI9L,QAAQ,IAEpB,I/C/HqB,gB+CyIrB,I/CxI+B,0B+CyIvB,MAAO,CACHqB,KAAMghB,EAAO5Z,QAAQqD,MAAMrN,IAAI4C,KAAKb,IAAK,SAAA/B,GACrC,aACOA,EADP,CAEIkH,WAAW,MAGnB3F,QAAQ,GAGpB,I/CjJoB,e+CkJZ,aACO8L,EADP,CAEIzK,KAAOyK,EAAMzK,KAAKb,IAAK,SAAA/B,GACnB,OAAGA,EAAIjG,KAAK6pB,EAAO5Z,QAAQhK,IAAIjG,GAC3B,MAAWiG,EAAX,CACQwB,UAAU,IAGXxB,MAG3B,I/C1JkB,a+C2JN,aACOqN,EADP,CAEIzK,KAAMyK,EAAMzK,KAAKb,IAAK,SAAA/B,GAClB,OAAGA,EAAIjG,KAAK6pB,EAAO5Z,QAAQlD,MACvB,MAAW9G,EAAX,CACQwB,UAAU,EACV8E,cAA6C,IAA9Bsd,EAAO5Z,QAAQ6C,aAAkB7M,EAAIsG,cAAc,EAAEtG,EAAIsG,cACxE5C,YAAY,IAGb1D,MAG/B,QACI,OAAOqN,IMxLfhJ,YLbsB,WAAyB,IAAxBgJ,EAAuB,uDAAf,GAAIuW,EAAW,uCAC9C,OAAOA,EAAO3e,MACV,IhD6ByB,oBgD5BrB,MAAO,GAEX,KAAK+I,EACD,IAAIjU,EAAG,EACP,OAAI6pB,EAAO5Z,QAAQ3F,YAGfuf,EAAO5Z,QAAQ3F,YAAYtC,IAAK,SAAAgD,GAC5B,aAAWA,EAAX,CACQhL,GAAIA,IACJN,SAAUJ,GAAqB0L,EAAWtL,S/ClB7C,Q+CaF4T,EASf,IhDA+B,0BgDC3B,OAAOA,EAAMtN,OAAQ,SAAAgF,GAAU,OAAKA,EAAWhL,KAAO6pB,EAAO5Z,QAAQoD,OAAOrT,KAEhF,IhDEqB,gBgDErB,IhDD+B,0BgDE3B,OACQ6pB,EAAO5Z,QAAQqD,MAAMhJ,YAAYrO,SAG7C,QACI,OAAOqX,IKhBflH,OJNkB,WAAyC,IAAxCkH,EAAuC,6DAA3BuV,IAAgBgB,EAAW,uCAClD,OAAOA,EAAO3e,MACV,IjDqBiB,oBiDpBb,aACO2d,IAEX,IjDFiB,oBiDGb,aACOA,GADP,CAEI3H,QAAQ,EACRxhB,SAAUmqB,EAAO5Z,QAAQvQ,SACzBiN,QAASkd,EAAO5Z,QAAQtD,QACxBwG,QAAS0W,EAAO5Z,QAAQkD,QACxBpG,MAAO8c,EAAO5Z,QAAQlD,MACtBL,UAAW,EACXD,WAAY,EACZI,mBAAoBgd,EAAO5Z,QAAQpD,qBAE3C,IjDbmB,sBiDcX,aACOgc,IAEf,IjDhBW,ciDiBP,OAAsB,IAAnBvV,EAAM7G,WACL,MACO6G,EADP,CAEI7G,WAAY,IAGhB,MACO6G,EADP,CAEI7G,WAAY,EACZC,WAAY4G,EAAM5G,UAAY,GAAK4G,EAAM3G,QAAQR,QAAQ5L,SAGrE,QACI,OAAO+S,II7BvBkP,UHXqB,WAAyC,IAAxClP,EAAuC,6DAA3BuV,IAAgBgB,EAAW,uCACrD,OAAOA,EAAO3e,MACV,IlDyBiB,oBkDxBb,aACO2d,IAGX,IlDKwB,2BkDJpB,aACOvV,EADP,CAEI4N,QAAS5N,EAAM4N,SAGvB,IlDAuB,0BkDCnB,IAAI4I,EAAQ,MAAOxW,GAEnB,OADAwW,EAASD,EAAO5Z,QAAQoD,OAAOnI,KAAKA,MAAQoI,EAAMuW,EAAO5Z,QAAQoD,OAAOnI,KAAKA,MAAMjP,OAAO4tB,EAAO5Z,QAAQoD,QAClGyW,EAEX,IlDCuB,0BkDAnB,aACOD,EAAO5Z,QAAQqD,MAAMkP,WAGhC,QACI,OAAOlP,IGZvB1E,aFdwB,WAA0C,IAAxC0E,EAAuC,6DAA3BuV,IAAgBgB,EAAW,uCACjE,OAAOA,EAAO3e,MACV,InD2ByB,oBmD1BrB,aACO2d,IAEX,InDW4B,uBmDVxB,aACWvV,EADX,CAEQyR,aAAa,IAEzB,InDOkB,amDNd,IAAMpW,EAAa,YAAO2E,EAAMzE,YAEhC,OADAF,EAAciL,KAAKiQ,EAAO5Z,QAAQqD,OAClC,MACOA,EADP,CAEIzE,WAAYF,EACZoW,aAAa,IAErB,InDAsB,iBmDClB,aACWzR,EADX,CAEQyR,aAAa,IAEzB,InDJqB,gBmDKjB,IAAI+E,EAAQ,MACLxW,EADK,CAERzE,WAAYgb,EAAO5Z,QAAQpB,WAC3BkW,aAAa,IAMjB,OAJA+E,EAASD,EAAO5Z,QAAQwD,QAAQzL,KAAO,CACnCsC,YAAauf,EAAO5Z,QAAQwD,QAAQnJ,YACpCrE,IAAK4jB,EAAO5Z,QAAQwD,QAAQxN,KAEzB6jB,EACX,InDd+B,0BmDe3B,aACOD,EAAO5Z,QAAQqD,MAAM1E,aAD5B,CAEImW,aAAa,IAErB,QACI,OAAOzR,IE1Bf5J,ODkCkB,WAAyC,IAAxC4J,EAAuC,6DAA3BuV,IAAgBgB,EAAW,uCAC1D,OAAOA,EAAO3e,MACV,IpDtByB,oBoDuBrB,aACO2d,IAEX,IpDhCoB,eoDiChB,aACOA,GADP,CAEI3H,QAAQ,EACR5Z,OAAO,MACAuhB,GAAcvhB,OADf,CAEF4E,KAAM2d,EAAO5Z,QAAQ3I,OAAO4E,KAC5B3J,IAAIsnB,EAAO5Z,QAAQ3I,OAAOY,KAAK3F,IAC/BJ,MAAO0nB,EAAO5Z,QAAQ3I,OAAOoC,OAAOvH,MACpCgQ,IAAK0X,EAAO5Z,QAAQ3I,OAAOoC,OAAOyI,IAClCU,MAAO4W,GAASI,EAAO5Z,QAAQ3I,OAAOoC,OAAOvH,OAC7CuX,SAAU+P,GAASI,EAAO5Z,QAAQ3I,OAAOoC,OAAOvH,OAChDoO,aAAc6Y,GAAa,GAC3BnO,aAAc,CACV9Y,MAAO0nB,EAAO5Z,QAAQ3I,OAAOoC,OAAOvH,MACpCgQ,IAAK0X,EAAO5Z,QAAQ3I,OAAOoC,OAAOyI,OAG1ClM,IAAI,MACG4iB,GAAc5iB,IADlB,CAECjG,GAAI6pB,EAAO5Z,QAAQhK,IAAIjG,GACvBkM,KAAM2d,EAAO5Z,QAAQhK,IAAIiG,KACzB3J,IAAKsnB,EAAO5Z,QAAQhK,IAAIiC,KAAK3F,IAC7BJ,MAAO0nB,EAAO5Z,QAAQhK,IAAI9D,MAC1B0J,YAAage,EAAO5Z,QAAQhK,IAAI4F,YAChCgH,MAAO4W,GAASI,EAAO5Z,QAAQhK,IAAI9D,OACnCuX,SAAU+P,GAASI,EAAO5Z,QAAQhK,IAAI9D,SAE1C2a,MAAO,gBAAiB+M,EAAO5Z,QAAQhK,IAAK4jB,EAAO5Z,QAAQhK,IAAIiR,YAAa9Y,KAGpF,IpD9DwB,mBoD+DpB,aACOkV,EADP,CAEIoJ,SAAS,IAEjB,IpDlEoB,eoDmEhB,IAAIqN,EAAS,YAAOzW,EAAMhM,OAAOiJ,cAIjC,OAH2B,OAAxB+C,EAAMhM,OAAOkJ,WACZuZ,EAAUzW,EAAMhM,OAAOkJ,UAAUqZ,EAAO5Z,QAAQoB,aAAa,GAEjE,MACOiC,EADP,CAEIoW,UAAWpW,EAAMoW,UAAU,EAC3BpiB,OAAO,MACAgM,EAAMhM,OADP,CAEFkJ,SAAUqZ,EAAO5Z,QAAQoB,WACzBgB,MAA+B,IAAxBwX,EAAO5Z,QAAQyB,OAAY4B,EAAMhM,OAAO+K,MAAM,EAAGiB,EAAMhM,OAAO+K,MACrEQ,OAAgC,IAAzBgX,EAAO5Z,QAAQyB,OAAa3S,KAAK6T,IAAIU,EAAMhM,OAAOuL,MAAM,EAAE,GAAIS,EAAMhM,OAAOuL,MAClFtC,aAAcwZ,IAElB9jB,IAAI,MACGqN,EAAMrN,IADV,CAECuK,SAAUqZ,EAAO5Z,QAAQqB,QACzBe,OAAgC,IAAzBwX,EAAO5Z,QAAQyB,OAAa4B,EAAMrN,IAAIoM,MAAM,EAAGiB,EAAMrN,IAAIoM,MAChEQ,MAA+B,IAAxBgX,EAAO5Z,QAAQyB,OAAY3S,KAAK6T,IAAIU,EAAMrN,IAAI4M,MAAM,EAAE,GAAIS,EAAMrN,IAAI4M,QAE/EyJ,WAAYuN,EAAO5Z,QAAQyB,OAC3BC,QAASkY,EAAO5Z,QAAQ0B,UAGhC,IpD1FkB,aoD2Fd,aACO2B,EADP,CAEI4J,OAAO,EACP5V,OAAO,MACAgM,EAAMhM,OADP,CAEFnF,MAAO0nB,EAAO5Z,QAAQ3I,OAAOgL,SAC7BH,IAAK0X,EAAO5Z,QAAQ3I,OAAO4K,SAE/BF,YAAa6X,EAAO5Z,QAAQ6C,eAEpC,IpDpGoB,eoDqGZ,aACOQ,EADP,CAEI4N,QAAQ,IAEpB,QACI,OAAO5N,MClHN0W,GAAiB,kBAAOC,uBACjCN,GACAO,+BAAoBC,2BAAgBC,SCdzBC,OARf,WACE,OACE,kBAAC,IAAD,CAAUC,MAAON,MACb,kBAAC,GAAD,QCGYO,QACW,cAA7B9jB,OAAO+jB,SAASC,UAEe,UAA7BhkB,OAAO+jB,SAASC,UAEhBhkB,OAAO+jB,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,GAAD,MAAS1O,SAAS2O,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.e2bf5348.chunk.js","sourcesContent":["export const INIT_VIEWPORT_DIMS = \"INIT_VIEWPORT_DIMS\";\r\nexport const SET_PLAYER_INFO = \"SET_PLAYER_INFO\";\r\nexport const UPDATE_PLAYER_POSITION = \"UPDATE_PLAYER_POSITION\";\r\nexport const UPDATE_PLAYER_DIRECTION = \"UPDATE_PLAYER_DIRECTION\";\r\nexport const UPDATE_PLAYER_ANIMATION = \"UPDATE_PLAYER_ANIMATION\";\r\nexport const UPDATE_NEARBY_NPC = \"UPDATE_NEARBY_NPC\";\r\nexport const UPDATE_NEARBY_GAMEOBJ = \"UPDATE_NEARBY_GAMEOBJ\";\r\n\r\nexport const ADD_MAP = \"ADD_MAP\";\r\nexport const MAP_LOADING = \"MAP_LOADING\";\r\nexport const UPDATE_MAP_ORIGIN = \"UPDATE_MAP_ORIGIN\";\r\n\r\nexport const UPDATE_NPC_POSITION = \"UPDATE_NPC_POSITION\";\r\nexport const UPDATE_NPC_DIRECTION = \"UPDATE_NPC_DIRECTION\";\r\nexport const UPDATE_NPC_ANIMATION = \"UPDATE_NPC_ANIMATION\";\r\nexport const RESET_NPC_WAITING = \"RESET_NPC_WAITING\";\r\n\r\nexport const SET_DIALOG_STATUS = \"SET_DIALOG_STATUS\";\r\nexport const RESET_DIALOG_STATUS = \"RESET_DIALOG_STATUS\";\r\nexport const NEXT_DIALOG = \"NEXT_DIALOG\";\r\n\r\nexport const TOGGLE_INVENTORY_DISPLAY = \"TOGGLE_INVENTORY_DISPLAY\";\r\nexport const ADD_OBJECT_TO_INVENTORY = \"ADD_OBJECT_TO_INVENTORY\";\r\n\r\nexport const SAVE_STATE_INITIATED = \"SAVE_STATE_INITIATED\";\r\nexport const SAVE_STATE = \"SAVE_STATE\";\r\nexport const SAVE_STATE_END = \"SAVE_STATE_END\";\r\nexport const RESTORE_STATE = \"RESTORE_STATE\";\r\nexport const RESTORE_STATE_FROM_DISK = \"RESTORE_STATE_FROM_DISK\";\r\n\r\nexport const START_BATTLE = \"START_BATTLE\";\r\nexport const END_BATTLE_INTRO = \"END_BATTLE_INTRO\";\r\nexport const SUBMIT_MOVES = \"SUBMIT_MOVES\";\r\nexport const END_BATTLE = \"END_BATTLE\";\r\nexport const CLOSE_BATTLE = \"CLOSE_BATTLE\";\r\n\r\nexport const START_NEW_JOURNEY = \"START_NEW_JOURNEY\";","export const TILE_SIZE = 80;\r\nexport const TOTAL_MOVEMENT_SIZE = TILE_SIZE;\r\n\r\nexport const LEFT = \"LEFT\";\r\nexport const RIGHT = \"RIGHT\";\r\nexport const UP = \"UP\";\r\nexport const DOWN = \"DOWN\";\r\n\r\nexport const KEYCODES = {\r\n    left: 37,\r\n    up: 38,\r\n    right: 39,\r\n    down: 40,\r\n}\r\n\r\nexport const ARROW_KEYCODES = [37, 38, 39, 40];\r\nexport const SPACE_KEY = [32];\r\nexport const PICKUP_KEY = [80]; /* P */\r\nexport const INVENTORY_KEY = [73]; /* I */\r\nexport const ESC_KEY = [27]; /* R */\r\n\r\nexport const VALID_KEYCODES = ARROW_KEYCODES.concat(SPACE_KEY, PICKUP_KEY, INVENTORY_KEY, ESC_KEY);\r\n\r\nexport const PASSIBLE_INDEX = 5;\r\n\r\nexport const HEALER = \"HEALER\";\r\nexport const EATABLE = \"EATABLE\";\r\nexport const CURRENCY = \"CURRENCY\";\r\nexport const PORTAL = \"PORTAL\";\r\nexport const PICKABLES = [HEALER,EATABLE,CURRENCY];\r\n\r\nexport const ROCK = 0;\r\nexport const PAPER = 1;\r\nexport const SCISSORS = 2;\r\n\r\n\r\nexport const BATTLE_ELIGIBILITY_THRESHOLD = 1;\r\nexport const BATTLE_NUM_GANG_MEMBERS = 5;\r\nexport const BOSS_BATTLE_LEVEL = 6;\r\n\r\nexport const BOSS = \"BOSS\";\r\nexport const GANG_MEMBER = \"GANG_MEMBER\";\r\nexport const NON_GANG_MEMBER = \"NON_GANG_MEMBER\";\r\n\r\n\r\nexport const SAVED_GAME = \"SAVED GAME\";\r\n\r\nexport const LOADGAME = \"LOADGAME\";\r\nexport const NEWGAME = \"NEWGAME\";\r\n\r\nexport const MAIN_MENU = \"/menu\";\r\nexport const WORLD_BASE = \"/world\"\r\n\r\nexport const PORTAL_ENTER = \"enter\";\r\nexport const PORTAL_LEAVE = \"leave\";\r\n\r\nexport const MAX_LEVEL = 6;\r\nexport const LEVEL_COLORS =  {\r\n    L1: \"MediumSeaGreen\",\r\n    L2: \"RoyalBlue\",\r\n    L3: \"Turquoise\",\r\n    L4: \"darkorange\",\r\n    L5: \"red\",\r\n    L6: \"gold\"\r\n};\r\n\r\nconst ASSETS_PATH = \"assets\";\r\nconst AUDIO_PATH = `${ASSETS_PATH}/audio`;\r\nexport const IMAGES_PATH = `${ASSETS_PATH}/images`;\r\nexport const MAPS_BASE = `${IMAGES_PATH}/maps`;\r\nexport const CHARACTER_SPRITES_BASE = `${IMAGES_PATH}/80/characters`;\r\nexport const PROPS_PATH = `${IMAGES_PATH}/80/objectsAndProps`;\r\n\r\nexport const DRIP_SOUND = `${AUDIO_PATH}/effects/drip.wav`;\r\nexport const BEEP_SOUND = `${AUDIO_PATH}/effects/beep.wav`;\r\nexport const BEEP_2_SOUND = `${AUDIO_PATH}/effects/beep2.wav`;\r\nexport const BEEP_3_SOUND = `${AUDIO_PATH}/effects/beep3.wav`;\r\nexport const BEEP_LONG_SOUND = `${AUDIO_PATH}/effects/longbeep.wav`;\r\nexport const PICK_SOUND = `${AUDIO_PATH}/effects/getcoin.wav`;\r\nexport const LASER_SOUND = `${AUDIO_PATH}/effects/laser.wav`;\r\n\r\nexport const MAIN_MENU_MUSIC = `${AUDIO_PATH}/MainMenu.mp3`;\r\nexport const TOWN_CENTER_MUSIC = `${AUDIO_PATH}/TownCenter.mp3`;\r\nexport const TOWN_NORTH_MUSIC = `${AUDIO_PATH}/TownSouth.mp3`;\r\nexport const TOWN_SOUTH_MUSIC = `${AUDIO_PATH}/TownSouth.mp3`;\r\nexport const HOME_MUSIC = `${AUDIO_PATH}/Home.mp3`;\r\nexport const BAKERY_MUSIC = `${AUDIO_PATH}/Bakery.mp3`;\r\nexport const HOTEL_MUSIC = `${AUDIO_PATH}/Hotel.mp3`;\r\nexport const LIBRARY_MUSIC = `${AUDIO_PATH}/Library.mp3`;\r\nexport const GAMEROOM_MUSIC = `${AUDIO_PATH}/GameRoom.mp3`;\r\nexport const CAVE_MUSIC = `${AUDIO_PATH}/Cave.mp3`;\r\nexport const HELL_MUSIC = `${AUDIO_PATH}/Hell.mp3`;\r\nexport const BATTLE_MUSIC = `${AUDIO_PATH}/Battle.mp3`;\r\nexport const BATTLE_BOSS_MUSIC = `${AUDIO_PATH}/BattleBoss.mp3`;\r\nexport const BATTLE_GM_MUSIC = `${AUDIO_PATH}/BattleGangMember.mp3`;\r\nexport const BATTLE_END_MUSIC = `${AUDIO_PATH}/BattleEnd.mp3`;","import React from 'react';\r\nimport { MAX_LEVEL, LEVEL_COLORS } from './constants';\r\n\r\nexport const getRounded = (num) => {\r\n    return isNaN(num)? 0: Math.round(num);\r\n}\r\n\r\nlet BASE_FONT_SIZE = 10;\r\n\r\nexport const getViewportDim = (screenWidth, screenHeight) => {\r\n    const width = [960, 1200, 1440];\r\n    const height = [640, 720, 800];\r\n    let viewportdim = [];\r\n    if(screenWidth < 1200) {\r\n        viewportdim[0] = width[0];\r\n        BASE_FONT_SIZE = 8;\r\n    } else if(screenWidth < 1440) {\r\n        viewportdim[0] = width[1];\r\n        BASE_FONT_SIZE = 9;\r\n    } else {\r\n        viewportdim[0] = width[2];\r\n        BASE_FONT_SIZE = 10;\r\n    } \r\n    \r\n    if(screenHeight < 720) {\r\n        viewportdim[1] = height[0];\r\n        BASE_FONT_SIZE = Math.min(BASE_FONT_SIZE, 8);\r\n    } else if(screenHeight < 800) {\r\n        viewportdim[1] = height[1];\r\n        BASE_FONT_SIZE = Math.min(BASE_FONT_SIZE, 9);\r\n    } else {\r\n        viewportdim[1] = height[2];\r\n        BASE_FONT_SIZE = Math.min(BASE_FONT_SIZE, 10);\r\n    } \r\n    return viewportdim;\r\n}\r\n\r\nexport const getFontSize = (multiplier = 1) => {\r\n    return BASE_FONT_SIZE*multiplier;\r\n}\r\n\r\nexport const viewportToMap = (viewportpos, mapstart) => {\r\n    return([viewportpos[0] + (-1*mapstart[0]),viewportpos[1] + (-1*mapstart[1])]);\r\n}\r\n\r\n\r\nexport const mapToViewport = (mappos, mapstart) => {\r\n    return([mappos[0] + mapstart[0],mappos[1] + mapstart[1]]);\r\n}\r\n\r\nexport const tileToMapCoordinates = (tile, TILE_SIZE) => {\r\n    return([tile[1]*TILE_SIZE, tile[0]*TILE_SIZE]);\r\n}\r\n\r\nexport const mapCoordinatesToTiles = (position, TILE_SIZE) => {\r\n    return([position[1]/TILE_SIZE, position[0]/TILE_SIZE]);\r\n}\r\n\r\nexport let intervalList = {};\r\n\r\nexport const customSetInterval = (func, delay, npcid) => {\r\n    const id = setInterval(func, delay);\r\n    intervalList[\"_\"+npcid] = id;\r\n}\r\n\r\nexport const clearIntervals = () => {\r\n    var props = Object.keys(intervalList);\r\n    for (var i = 0; i < props.length; i++) {\r\n        clearInterval(intervalList[props[i]]);\r\n        delete intervalList[props[i]];\r\n    }\r\n}\r\n\r\nexport let timeoutList = {};\r\n\r\nexport const customSetTimeout = (func, delay, npcid) => {\r\n    const id = setTimeout(func, delay);\r\n    timeoutList[\"_\"+npcid] = id;\r\n}\r\n\r\nexport const clearTimeouts = () => {\r\n    var props = Object.keys(timeoutList);\r\n    for (var i = 0; i < props.length; i++) {\r\n        clearTimeout(timeoutList[props[i]]);\r\n        delete timeoutList[props[i]];\r\n    }\r\n}\r\n\r\nexport const printMatrix = (matrix) => {\r\n    let print = \"\";\r\n    for(let i=0; i<matrix.length;i++) {\r\n        for(let j=0; j<matrix[0].length;j++) {\r\n            print+=matrix[i][j]+\" ,\";\r\n        }\r\n        print+=\"\\n\";\r\n    }\r\n    console.log(print);\r\n}\r\n\r\nexport const getValue = (stateparam, payloadparam) => {\r\n    return(payloadparam!=null ? payloadparam: stateparam);\r\n}\r\n\r\nexport const centerBgImg = (image, color='white', size='contain') => {\r\n    return({\r\n        backgroundColor: color,\r\n        backgroundImage: `url('${image}')`, \r\n        backgroundRepeat: 'no-repeat', \r\n        backgroundPosition:'center',\r\n        backgroundSize: size,\r\n    });\r\n}\r\n\r\nexport const solidBorder = (size, color, radius) => {\r\n    return({\r\n        border: `${size}px solid ${color}`,\r\n        borderRadius: `${radius}px`,\r\n    });\r\n}\r\n\r\n\r\nexport const getKeyDiv = (keycode, fontSize=getFontSize(1.5)) => {\r\n    return(\r\n    <div style={{padding:'3px', border: '1px inset grey', borderRadius:'5px', backgroundColor:'white', display: 'inline-block', fontSize:`${fontSize}px`, color:'#5d5f5b' }}>\r\n        <div style={{backgroundColor:'lightgrey'}}>{keycode}</div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport const getLevelColor = (level) => {\r\n   if(level<1 || level>MAX_LEVEL) \r\n        return \"white\";\r\n    return(LEVEL_COLORS[`L${level}`]);\r\n}\r\n\r\nexport const getWinPercColor = (winperc) => {\r\n    if(winperc < 25)\r\n        return 'Red';\r\n    else if(winperc < 50) \r\n        return 'Crimson';\r\n    else if(winperc < 75)\r\n        return 'SpringGreen';\r\n    else \r\n        return 'ForestGreen'\r\n }\r\n\r\n export const playSoundEffect = (src) => {\r\n     const click = new Audio(src);\r\n     click.play();\r\n }\r\n","export const PLAYERDIALOGS = {\r\n    Frank: {\r\n        follows:[\"Hey Frank! I'm great.\", \r\n                 \"I'm a bit busy with my engineering exams. What about you?\", \r\n                 \"Oh wow! That's awesome.\", \r\n                 \"Ohh, thanks for informing :). I'll probably go now.\", \r\n                 \"BBye, Takecare.\"],\r\n        starts:[\"Hey! Whatsup!\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Dad: {\r\n        follows:[\"It feels great to be back home. You look worried dad. Is everything fine?\", \r\n                 \"Yeah! The town seems a bit different. Someone refused to play Roshambo with me coz I was not on his level! I didn't get it.\",\r\n                 \"Markov tribe? That's an interesting name. And what are the new rules?\",\r\n                 \"And...\",\r\n                 \"Okay! Now I get it. But this isn't great for our town. We always had a 'free Roshambo for all' motto.\",\r\n                 \"How can we do that?\",\r\n                 \"I can do that dad. But I need some practice.\",\r\n                 \"Okay dad! I'll go and practice now. Big task ahead.\",\r\n                 \"Even I missed him. I'll surely play with him.\",\r\n                 \"Thats amazing! I'll grab an Eclair from there.\",\r\n                ],\r\n        starts:[\"Hey Dad! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Joey: {\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Okay Joey. Let's battle!\"],\r\n        battleAsk:[\"Hey Joey! you wanna play?\"],\r\n        battleWin:[\"Nevermind....\"],\r\n        battleLose:[\"I always let you win.\"],\r\n    },\r\n\r\n    Ace: {\r\n        follows:[\"I missed you too.....\"],\r\n        starts:[\"Ace!! Come here....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Tia: {\r\n        follows:[\"Hey Tia! I'm great. Came here to get some eclairs.\", \r\n                 \"Why so? I see the bakery is open.\", \r\n                 \"Its not their bakery! why are we being forced to battle him?\", \r\n                 \"Okay, I'll go inside and defeat him.\",\r\n                 \"Sure, I'll do that. See you!\",\r\n                ],\r\n        starts:[\"Hey Tia! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Nathan: {\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Yeah sure, lets go!\"],\r\n        battleAsk:[\"Hey! do you wanna battle?\"],\r\n        battleWin:[\"Thanks mate!\"],\r\n        battleLose:[\"I'll be back in no time. See you then.\"],\r\n    },\r\n\r\n    John: {\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Yeah sure, lets go!\"],\r\n        battleAsk:[\"Hey! do you wanna battle?\"],\r\n        battleWin:[\"Thanks mate!\"],\r\n        battleLose:[\"I'll be back in no time. See you then.\"],\r\n    },\r\n\r\n    Samantha: {\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Yeah sure, who doesn't like a freebie ;)\"],\r\n        battleAsk:[\"Hey! do you wanna battle?\"],\r\n        battleWin:[\"Thanks! I think I am ready to defeat him.\", \"Great! Now I have 2 reasons to defeat him haha.\"],\r\n        battleLose:[\"I'll be back in no time. See you then.\"],\r\n    },\r\n\r\n    Eden:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"I'm $PLAYERNAME. I'm not new, you are new here. Btw, I came here for an eclair.\",\r\n                      \"Really? I thought I need to have a Roshambo battle with you. Guess you are not that bad.\",\r\n                      \"And I thought for a moment that the tribe isn't that bad. Nevertheless, I can defeat you, pretty easily.\",\r\n                      \"Yup, lets go!!!\"],\r\n        battleAsk:[\"I want to challenge you for a battle!\"],\r\n        battleWin:[\"I'll take care of your boss later. I need my eclair now. Step aside.\", \r\n                   \"But you said so. And I believed you!\",\r\n                   \"F*** man. What else can I expect from the tribe! Where can I find your boss?\",\r\n                   \"Ughhhhhh.\"],\r\n        battleLose:[\"I'll be back in no time. \"],\r\n    },\r\n\r\n    Tracer: {\r\n        follows:[\"Hey Tracer. I'm looking for the tribe boss. Do you know where he lives?\",\r\n                 \"North? How do you know?\",\r\n                 \"And I'm John Snow. Stop joking. Are you sure about this info?\",\r\n                 \"No... sadly :( I'll probably go to the north.\",\r\n                 \"Thanks :) Hopefully.\"\r\n                ],\r\n        starts:[\"Hey Tracer! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Sean: {\r\n        follows:[\"Hey Sean. I'm great. Hows your business?\",\r\n                 \"Why? What happened?\",\r\n                 \"Tell me!\",\r\n                 \"Who is Gambit? Why didn't you call police for help?\",\r\n                 \"I knew it. A tribe member doing what tribe members do best, bully others. I'll teach him a lesson by defeating him in a Roshambo battle.\",\r\n                 \"Don't decide the winner before the battle. Atleast I want to try.\",\r\n                 \"Yup, I will. Thanks.\"\r\n                ],\r\n        starts:[\"Hey Sean! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Gambit:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"No, this isn't your property. This is my friend Sean's property.\",\r\n                      \"I've got big hands as well. I challenge you for a Roshambo battle.\",\r\n                      \"One tribe defeated is one tribe less. Lets go\"],\r\n        battleAsk:[\"I want to challenge you for a battle!\"],\r\n        battleWin:[\"Not for long. I'll soon defeat your boss.\"],\r\n        battleLose:[\"I'm pretty sure you cheated. I'll be back.\"],\r\n    },\r\n\r\n    Chop:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Do I have a choice?\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"You are pretty good. I got lucky.\"],\r\n        battleLose:[\"No! I underestimated you. See you next time.\"],\r\n    },\r\n\r\n    Molly: {\r\n        follows:[\"Hey Molly. Why are you outside the library?\",\r\n                 \"Have they occupied the library as well? I thought its just the bakery and the chinese van.\",\r\n                 \"Don't worry. I'll soon defeat their boss.\",\r\n                 \"Really! I didn't know that. I should go inside and battle them. Wish me luck.\",\r\n                 \"Thanks!\"],\r\n        starts:[\"Hey Molly! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Jordan: {\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Yeah sure, lets go!\"],\r\n        battleAsk:[\"Hey! do you wanna battle?\"],\r\n        battleWin:[\"Thanks mate!\"],\r\n        battleLose:[\"I'll be back in no time. See you then.\"],\r\n    },\r\n\r\n    Grindel:{\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Do I have a choice?\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"You are pretty good. I got lucky.\"],\r\n        battleLose:[\"No! I underestimated you. See you next time.\"],\r\n    },\r\n\r\n    Tori:{\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Definitely! I need to practice as well.\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"Losers will be losers\"],\r\n        battleLose:[\"I underestimated you. See you next time.\"],\r\n    },\r\n\r\n    Ghissu: {\r\n        follows:[\"Hey Ghissu. Done with all the ghisai?\",\r\n                 \"Molly told me the tribe has occupied the library as well. I'm looking for them.\",\r\n                 \"Atleast you have a source of entertainment now. Haha. Jokes aside, where are they?\",\r\n                 \"I should have known. Thanks! See you after the battle.\",\r\n                 \"Haha. Bbye.\"],\r\n        starts:[\"Hey Ghissu! Whatsup?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Razor:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Its a public TV, you can't watch something private here.\",\r\n                      \"Not for long. Soon I'll defeat your boss.\",\r\n                      \"You stole words from my mouth. I accept the challenge.\",\r\n                      \"Stop talking and start battling!\"],\r\n        battleAsk:[\"I want to challenge you for a battle!\"],\r\n        battleWin:[\"Not for long. I'll soon defeat your boss.\"],\r\n        battleLose:[\"I'm pretty sure you cheated.\", \"I'll be back in no time.\"],\r\n    },\r\n\r\n    Prick:{\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Definitely! I need to practice as well.\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"Losers will be losers\"],\r\n        battleLose:[\"I underestimated you. See you next time.\"],\r\n    },\r\n\r\n    LT: {\r\n        follows:[\"Okay... I get it.\"],\r\n        starts:[\"Hey! Can I play?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Rose: {\r\n        follows:[\"Are they tribe members?\",\r\n                 \"As expected. Okay, I'll try to get her back.\",\r\n                 \"No problem.\"],\r\n        starts:[\"Hey! Did you get sparkle back?\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n\r\n    Snyder:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Stop disturbing the dog. Leave her alone!\",\r\n                      \"Just like I'll teach your boss a lesson?\", \r\n                      \"I'll soon defeat him in Roshambo. But, let me defeat you first!\",\r\n                      \"If I win, you free the dog!\",\r\n                      \"Challenge accepted!\"],\r\n        battleAsk:[\"I want to challenge you for a battle.\"],\r\n        battleWin:[\"Not for long. I'll soon defeat your boss.\"],\r\n        battleLose:[\"I'm pretty sure you cheated.\", \"I'll be back in no time.\"],\r\n    },\r\n\r\n    Kaloo: {\r\n        follows:[\"Okay....\"],\r\n        starts:[\"Awwww......kaloooooo.\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Goku: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww......cutie. Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Misty: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww....Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Trigger: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww......cutie. Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Max:{\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Definitely! I need to practice as well.\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"Losers will be losers\"],\r\n        battleLose:[\"You got real skills mate!\"],\r\n    },\r\n\r\n\r\n    Maty: {\r\n        follows:[\"Hey Maty! Yeah. How have you been?\", \r\n                 \"On my quest to defeat the tribe boss.\",\r\n                 \"Thanks :)! I should go and defeat him.\",\r\n                 \"Hehe. Thanks!\"],\r\n        starts:[\"Hey Maty!\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Damon:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Do I have a choice?\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"You are pretty good. I got lucky.\"],\r\n        battleLose:[\"No! I underestimated you. See you next time.\"],\r\n    },\r\n\r\n\r\n    Tegan:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"No! I was looking for you.\",\r\n                      \"So that I can defeat you first, before your boss!\",\r\n                      \"Challenge accepted! Let me throw you out of our town haha.\"],\r\n        battleAsk:[\"I want to challenge you for a battle!\"],\r\n        battleWin:[\"Not for long. I'll soon defeat your boss.\"],\r\n        battleLose:[\"I'm pretty sure you cheated.\", \"I'll be back in no time.\"],\r\n    },\r\n\r\n    Hunt:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Do I have a choice?\"],\r\n        battleAsk:[\"Do you wanna battle?\"],\r\n        battleWin:[\"You are pretty good. I got lucky.\"],\r\n        battleLose:[\"No! I underestimated you. See you next time.\"],\r\n    },\r\n\r\n\r\n    Fattu: {\r\n        follows:[\"Why? The tribe boss isn't inside?\",\r\n                 \"She!??! WTF. I'm going in.\",\r\n                 \"Don't worry about me.\"],\r\n        starts:[\"Hey Fattu!\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Rock: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww......cutie. Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Paper: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww......cutie. Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Scissors: {\r\n        follows:[\"Nevermind....\"],\r\n        starts:[\"Awwww......cutie. Come here.....\"],\r\n        battleAccept:[],\r\n        battleAsk:[],\r\n        battleWin:[],\r\n        battleLose:[],\r\n    },\r\n\r\n    Beast:{\r\n\r\n        follows:[],\r\n        starts:[],\r\n        battleAccept:[\"Looking for the tribe boss. I want to battle her in Roshambo. Do you where is she?\",\r\n                      \"Ohh, my bad. How can I miss the biggest clue lol. Btw I'm $PLAYERNAME. I came here to challenge you for a Roshambo battle.\",\r\n                      \"There can be, like petting your cute cats.\",\r\n                      \"Yeah, they don't seem friendly, just like you.\",\r\n                      \"Yeah! Let's go!\"],\r\n        battleAsk:[\"I want to challenge you for a battle!\"],\r\n        battleWin:[\"Really? You aren't mad?\",\r\n                   \"You're not as bad as I expected tbh.\",\r\n                   \"So?? Am I the boss now? How does it work? How can I reset the rules?\",\r\n                   \"I thought so. I thought that was the story of the game! When is the Roshambo championship?\",\r\n                   \"He???\",\r\n                   \"Wow. And what about my Eclairs?\",\r\n                   \"Fuck it!\"],\r\n        battleLose:[\"I'll be back with more practice\"],\r\n    },\r\n}\r\n\r\nexport const NPCDIALOGS = {\r\n    Frank:{\r\n        starts: [\"Hey $PLAYERNAME! Whatsup.\", \"Long time no see. Where are you these days?\", \r\n                \"I'm preparing for this year's RoShamBo competition.\", \r\n                \"BTW, your father is waiting for you inside. You should go and meet him.\", \r\n                \"Sure, see you.\"],\r\n        follows: [\"I'm great. You talked to your father right!\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Dad:{\r\n        starts: [\"Hey kiddo! Glad you're back. It feels great seeing you!\",\r\n                 \"Did you notice anything weird outside?\", \r\n                 \"Its the markov tribe! Their boss won the Roshambo championship last year. Since then they have imposed new Roshambo rules in the town.\",\r\n                 \"Now there is a level system in Roshambo. Every Roshambo player starts at level 1 and can go till level 5.\",\r\n                 \"You can only battle a player who is at a lower or same level or 1 level higher than yours.\",\r\n                 \"Yes, and thats why we need to overthrow this tribe.\",\r\n                 \"We need to defeat their boss, only then we can remove these horrible rules.\",\r\n                 \"Thats my kid! Look around the town for some Roshambo battlers for practice. Battle them to gain exp and level up.\",\r\n                 \"Your baby brother missed you! Don't forget to play with him.\",\r\n                 \"Btw, your favourite Big Chill cakery has opened nearby. You should check it out.\"\r\n                ],\r\n        follows: [\"Key kiddo! You should probably go and defeat the tribe!\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Joey:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"I wanna play!!!\"],\r\n        battleAcceptNeverDefeated:[\"Yayayayay! I'll defeat you again!\"],\r\n        battleDeclineDefeated:[\"I don't like playing with you!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice\"],\r\n        battleLose:[\"You cheated!!!!\"],\r\n        battleWin: [\"I'm the best!!\"],\r\n    },\r\n\r\n    Ace:{\r\n        starts: [\"...\"],\r\n        follows: [\"Huff...I missed you..Huff....\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n\r\n    Tia:{\r\n        starts: [\"Hey $PLAYERNAME! Whatsup!\", \r\n                 \"You won't be able to get anything from here.\", \r\n                 \"There is a markov tribe member inside. If you want an eclair, you need to defeat him in Roshambo first.\", \r\n                 \"Everything belongs to them now. They have weird rules tbh.\",\r\n                 \"I hope you have enough practice. You can battle my friend Samantha, she is inside the bakery.\"\r\n                ],\r\n        follows: [\"I hope you defeat the tribe member.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Nathan:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"You won't be able to defeat me. Do you have the guts to battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice\"],\r\n        battleLose:[\"You are great! Cheers!.\"],\r\n        battleWin: [\"You're aweful. You need to practice.\"],\r\n    },\r\n\r\n    John:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"You won't be able to defeat me. Do you have the guts to battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice\"],\r\n        battleLose:[\"You are great! Cheers!.\"],\r\n        battleWin: [\"You're aweful. You need to practice.\"],\r\n    },\r\n\r\n    Samantha:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey! Do you wanna battle? Winner gets a swiss roll :p\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"I can't afford another brownie lol!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice\"],\r\n        battleLose:[\"You are great! Now you need to defeat the tribe member to get the free swiss roll. Hehe.\",\r\n                     \"Really! You'll get a brownie as well if you defeat him.\"],\r\n        battleWin: [\"Gosh! You're aweful. You need to practice. I don't think I'll ever get the swiss roll lol.\"],\r\n    },\r\n\r\n    Eden:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey you! I think you're new here.\",\r\n                    \"Just an eclair? You can have one.\",\r\n                    \"No, I was kidding. You need to defeat me in Roshambo first.\",\r\n                    \"I like defeating overconfident kids, lets go!\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"I don't have time for losers!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go, battle and level up.\"],\r\n        battleLose:[\"You have defeated me, but you won't be able to defeat our boss.\", \r\n                    \"If you think you can get your eclair now, you are a fool!\",\r\n                    \"Ah, I lied. You need to defeat our boss in order to change the rules. Hahahahaha.\",\r\n                    \"Find him yourself. All the best. Hahahahahahahaha.\"],\r\n        battleWin: [\"Typical overconfident kid. You can never defeat me, nevermind our boss!!\"],\r\n    },\r\n\r\n    Tracer:{\r\n        starts: [\"Hey $PLAYERNAME! Where are you heading towards?\", \r\n                 \"I heard he lives in a cave somewhere in the north.\", \r\n                 \"I'm the master of whisperers. Haha.\", \r\n                 \"Hehe. Do you have any other option?\", \r\n                 \"All the best. May the luck be with you.\"],\r\n        follows: [\"Ohh, you are still alive!\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Sean:{\r\n        starts: [\"Hey $PLAYERNAME! Long time no see?\", \r\n                 \"Ummm...not great.\",\r\n                 \"Ummm....\",\r\n                 \"Gambit and his bully friends are not allowing me to run my business!\", \r\n                 \"He is a tribe member. That't why nobody is willing to help me.\", \r\n                 \"He's on level 4, I don't think you can defeat him. I don't want to give you any trouble.\", \r\n                 \"Okay, your call. But, be careful.\"],\r\n        follows: [\"Be careful of the tribe, $PLAYERNAME.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Gambit:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey kid! Stop wandering around here. This is tribe's property!\",\r\n                    \"Your big mouth will lead you into trouble.\",\r\n                    \"I can defeat you in 2 minutes. Challenge accepted.\"],\r\n        battleAcceptNeverDefeated:[\"Again? Save your self respect!\"],\r\n        battleDeclineDefeated:[\"Go and battle our boss now!\"],\r\n        battleDecline:[\"You need to level up, loser!\"],\r\n        battleLose:[\"You got lucky. Nevermind, this town still belongs to us!\"],\r\n        battleWin: [\"You were a total waste of time.\"],\r\n    },\r\n\r\n    Chop:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Do you wanna test your Roshambo skills against a real player?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"Today is not my day. I should get some rest.\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    Molly:{\r\n        starts: [\"Hey $PLAYERNAME. Glad you are here.\",\r\n                 \"There's a lot of noise inside. The tribe members you know.\",\r\n                 \"They are everywhere. We need to get rid of them.\",\r\n                 \"First you need to defeat all of the tribe members. Only then you can battle their boss. I hope you knew this.\",\r\n                 \"All the best! May the luck be with you.\"],\r\n        follows: [\"Not great. I hope you defeat the tribe soon.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Jordan:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"You won't be able to defeat me. Do you have the guts to battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice\"],\r\n        battleLose:[\"You are great! Cheers!.\"],\r\n        battleWin: [\"You're aweful. You need to practice.\"],\r\n    },\r\n\r\n    Grindel:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Do you wanna test your Roshambo skills against a real player?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"Today is not my day. I should get some rest.\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    Tori:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Test your Roshambo skills against a real player. Battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"I need to study now!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"So lucky you are! So lucky you are!\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    Ghissu:{\r\n        starts: [\"Hey $PLAYERNAME! Whatsup!\", \r\n                 \"No! still 4th revision remaining. BTW, what are you doing here?\", \r\n                 \"Yeah, they play all sorts of horrible music here, and particularly during daytime.\",\r\n                 \"In the gameroom, first floor.\",\r\n                 \"Hopefully your Roshambo is better than your sense of humour.\"\r\n                ],\r\n        follows: [\"Hey! Get lost now. I have to study.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Razor:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey! Stop disturbing me! I watching something important.\",\r\n                    \"Don't teach me the rules. I make the rules here.\",\r\n                    \"Stop day dreaming you idiot. I challenge you for a Roshambo battle.\",\r\n                    \"You won't dare to speak a word against the tribe after this.\"],\r\n        battleAcceptNeverDefeated:[\"Again? Save your self respect!\"],\r\n        battleDeclineDefeated:[\"You don't have friends? Leave me alone now!\"],\r\n        battleDecline:[\"You need to level up, loser!\"],\r\n        battleLose:[\"You got lucky. Nevermind, this town still belongs to us!\"],\r\n        battleWin: [\"You were a total waste of time.\", \"Now shut up and FO!\"],\r\n    },\r\n\r\n    Prick:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey kid! Do you wanna battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"So lucky you are! So lucky you are!\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    LT:{\r\n        starts: [\"Hey you! Don't disturb Razor. He doesn't like interruptions in between a movie.\"],\r\n        follows: [\"Get lost from here.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Rose:{\r\n        starts: [\"Hey! Please help me get my sparkle back. Snyder and his friend are not letting her go.\",\r\n                 \"Yes.\",\r\n                 \"Thanks!\"],\r\n        follows: [\"She' still with them! :(\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Snyder:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey you! stop disturbing us.\",\r\n                    \"This isn't your dog, so stop bothering. Stay away from us, otherwise we'll teach you a lesson.\",\r\n                    \"Hahahahaha. You can't touch even him!\",\r\n                    \"Really? Challenge accepted!\",\r\n                    \"If you lose, you stay away from us!\"],\r\n        battleAcceptNeverDefeated:[\"Again? Save your self respect!\"],\r\n        battleDeclineDefeated:[\"We don't have time for you now.\"],\r\n        battleDecline:[\"You need to level up, loser!\"],\r\n        battleLose:[\"You got lucky. Nevermind, this town still belongs to us!\"],\r\n        battleWin: [\"You were a total waste of time.\", \"Now get lost!\"],\r\n    },\r\n\r\n    Kaloo:{\r\n        starts: [\"Meoww...\"],\r\n        follows: [\"....Meow.....Fuck off.....Meow...\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Goku:{\r\n        starts: [\"Meoww...Meoww...\"],\r\n        follows: [\"Grhhhhhh.....\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Misty:{\r\n        starts: [\"Meoww...Meoww...\"],\r\n        follows: [\"Grhhhhhh.....\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Trigger:{\r\n        starts: [\"Meoww....You'll die...Meoww....\"],\r\n        follows: [\"Grhhhhhh.....Step aside.....\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Max:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey! Do you wanna battle?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"So lucky you are! So lucky you are!\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    \r\n\r\n    Maty:{\r\n        starts: [\"Hey $PLAYERNAME! Long time!\", \r\n                 \"I'm great! Never seen you on this side of town before?\", \r\n                 \"You're living dangerously. Btw, you can find one of the tribe members near the hammock by the pool.\",\r\n                 \"Yeah. Before he creates more havoc near the hammock lol. All the best\"],\r\n        follows: [\"Hey $PLAYERNAME. I hope you defeat the boss.\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n    \r\n    Damon:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Do you wanna test your Roshambo skills against a real player?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"Today is not my day. I should get some rest.\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    Tegan:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey kid! I heard you are looking for the tribe boss.\", \r\n                    \"Me? Why?\",\r\n                    \"Keep dreaming kid. I challenge you for a battle. Let me bring you down to earth haha.\"],\r\n        battleAcceptNeverDefeated:[\"Again? Save your self respect unless you want to go underground lol.\"],\r\n        battleDeclineDefeated:[\"I don't have time for you!\"],\r\n        battleDecline:[\"You need to level up, loser!\"],\r\n        battleLose:[\"You got lucky. Nevermind, this town still belongs to us!\"],\r\n        battleWin: [\"You were a total waste of time.\", \"Now shut up and FO!\"],\r\n    },\r\n\r\n\r\n    Hunt:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Do you wanna test your Roshambo skills against a real player?\"],\r\n        battleAcceptNeverDefeated:[\"How many times you wanna lose!!\"],\r\n        battleDeclineDefeated:[\"Enough of Roshambo for the day!\"],\r\n        battleDecline:[\"I don't think you're on my level. Go and Practice.\"],\r\n        battleLose:[\"Today is not my day. I should get some rest.\"],\r\n        battleWin: [\"Was this your first time lol?\"],\r\n    },\r\n\r\n    Fattu:{\r\n        starts: [\"Dude! Stop here. Don't go inside.\",\r\n                 \"She is. Thats why.\",\r\n                 \"You will definitely die, sexist.\"],\r\n        follows:[\"You are still alive!\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Rock:{\r\n        starts: [\"Meoww....You'll die...Meoww....\"],\r\n        follows: [\"Meoww...Hail Markov...Meoww...\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Paper:{\r\n        starts: [\"Meoww....You'll die...Meoww....\"],\r\n        follows: [\"Meoww..Markov greater Bayesian....Meoww...\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Scissors:{\r\n        starts: [\"Meoww....You'll die...Meoww....\"],\r\n        follows: [\"Meoww...Hail Markov...Meoww...\"],\r\n        battleAsk:[],\r\n        battleAcceptNeverDefeated:[],\r\n        battleDeclineDefeated:[],\r\n        battleDecline:[],\r\n        battleLose:[],\r\n        battleWin:[],\r\n    },\r\n\r\n    Beast:{\r\n        starts: [],\r\n        follows: [],\r\n        battleAsk: [\"Hey! What are you doing here?\",\r\n                    \"Is there anyone else over here wearing a semi-naked vamp costume? I'm the boss and my name is Beast.\",\r\n                    \"I know. There can be no other reason for you to be here.\",\r\n                    \"Oh you like cats? The black one is Rock, the white one is Paper and the ginger one is Scissors. Stay away from them.\",\r\n                    \"I thought you were here for the battle. Just being professional.\"],\r\n        battleAcceptNeverDefeated:[\"I hope you are prepared this time.\"],\r\n        battleDeclineDefeated:[\"Neh, not now. See you at the championships!\"],\r\n        battleDecline:[\"You need to defeat all my tribe members first! Plus you need to be on Level 5.\"],\r\n        battleLose:[\"You defeated me all fair and square. Kudos to you.\",\r\n                     \"No, you are a deserving winner. And I'm not a sore loser.\",\r\n                     \"Now I feel much better lol.\",\r\n                     \"You cannot just reset the rules! You need to defeat me in the Roshambo championship. You thought you could be the tribe boss on the basis of a friendly battle?\",\r\n                     \"Next year. He needs to start coding for the that.\",\r\n                     \"The developer of this game.\",\r\n                     \"Ask the developer.\"],\r\n        battleWin: [\"You really thought you got a chance here lol.\"],\r\n    },\r\n    \r\n}","import * as ActionTypes from './ActionTypes';\r\nimport { TOTAL_MOVEMENT_SIZE, LEFT, RIGHT, UP, DOWN, TILE_SIZE,\r\n        PASSIBLE_INDEX, PORTAL, ROCK, PAPER, SCISSORS, SAVED_GAME, PORTAL_LEAVE, PORTAL_ENTER, BATTLE_ELIGIBILITY_THRESHOLD, PICKABLES, BATTLE_NUM_GANG_MEMBERS, BOSS, GANG_MEMBER, NON_GANG_MEMBER, DRIP_SOUND, LASER_SOUND, PICK_SOUND} from '../helpers/constants';\r\nimport { tileToMapCoordinates, mapToViewport, mapCoordinatesToTiles, customSetTimeout, clearIntervals, playSoundEffect } from '../helpers/funcs';\r\nimport { PLAYERDIALOGS, NPCDIALOGS } from '../data/script';\r\n\r\n\r\nconst observeMapBoundaries = (newpos, mapwidth, mapheight) => {\r\n    return (newpos[0]>=0 && newpos[0]<=mapwidth - TILE_SIZE) &&\r\n            (newpos[1]>=0 && newpos[1]<=mapheight - TILE_SIZE);\r\n}\r\n\r\nconst observeImpassible = (tiles, newpos) => {\r\n    const tile = mapCoordinatesToTiles(newpos, TILE_SIZE);\r\n    const row = tile[0], col = tile[1];\r\n    return (Math.abs(tiles[row][col]) <= PASSIBLE_INDEX);\r\n}\r\n\r\nconst observeCamera = (position, direction, mapstart, camera) => {\r\n    const viewportPos = mapToViewport(position, mapstart);\r\n    if(direction===LEFT || direction===RIGHT)\r\n        return (viewportPos[0] >= camera[0][0]) && (viewportPos[0] <= camera[0][1])\r\n    else if(direction===UP || direction===DOWN)\r\n        return (viewportPos[1] >= camera[1][0]) && (viewportPos[1] <= camera[1][1])\r\n}\r\n\r\nconst observeIdleNPC = (newpos, npcList) => {\r\n    const npclist = npcList.filter( npc => {\r\n        if(!npc.isAnimating)\r\n            return (newpos[0] === npc.position[0]) && (newpos[1] === npc.position[1]);\r\n        else\r\n            return false;\r\n    });\r\n\r\n    return npclist;\r\n}\r\n\r\nconst observeAnimatingNPC = (newpos, npcList) => {\r\n    const npclist = npcList.filter( npc => {\r\n        if(npc.isAnimating)\r\n            return (newpos[0] === npc.nextPosition[0]) && (newpos[1] === npc.nextPosition[1]);\r\n        else \r\n            return false;\r\n    });\r\n\r\n    return npclist;\r\n}\r\n\r\nconst observeIdlePlayer = (newpos, player) => {\r\n    if(!player.isAnimating) \r\n        return (newpos[0] === player.position[0]) && (newpos[1] === player.position[1]);\r\n    else\r\n        return false;\r\n}\r\n\r\nconst observePlayer = (newpos, player) => {\r\n    if(!player.isAnimating) \r\n        return !((newpos[0] === player.position[0]) && (newpos[1] === player.position[1]));\r\n    else\r\n        return !((newpos[0] === player.nextPosition[0]) && (newpos[1] === player.nextPosition[1]));\r\n}\r\n\r\nconst mapScrollable = (direction, mapstart, mapend, viewportWidth, viewportHeight) => {\r\n    switch(direction) {\r\n        case LEFT:\r\n            return (mapstart[0] < 0);\r\n        case UP:\r\n            return (mapstart[1] < 0);\r\n        case RIGHT:\r\n            return (mapend[0] > viewportWidth);\r\n        case DOWN:\r\n            return (mapend[1] > viewportHeight);\r\n        default:\r\n            return false;\r\n        \r\n    }\r\n}\r\n\r\n\r\nconst getNewPostion = (oldpos, direction, movementSize) => {\r\n    switch(direction) {\r\n        case LEFT:\r\n            return [oldpos[0]-movementSize, oldpos[1]];\r\n        case RIGHT:\r\n            return [oldpos[0]+movementSize, oldpos[1]];\r\n        case UP:\r\n            return [oldpos[0], oldpos[1] - movementSize];\r\n        case DOWN:\r\n            return [oldpos[0], oldpos[1] + movementSize];\r\n        default:\r\n            window.alert(\"Something went wrong! Please relaunch the game.\");\r\n    }\r\n}\r\n\r\nconst getNewOrigin = (start, direction, movementSize) => {\r\n    switch(direction) {\r\n        case LEFT:\r\n            return [start[0]+movementSize, start[1]];\r\n        case RIGHT:\r\n            return [start[0]-movementSize, start[1]];\r\n        case UP:\r\n            return [start[0], start[1] + movementSize];\r\n        case DOWN:\r\n            return [start[0], start[1] - movementSize];\r\n        default:\r\n                window.alert(\"Something went wrong! Please relaunch the game.\");\r\n    }\r\n}\r\n\r\n\r\nconst getNPC = (npclist, npcid) => {\r\n    return(npclist.filter(npc => npc.id===npcid)[0]);\r\n}\r\n\r\n\r\nconst checkPortalEnter = (playerdir, portaldir) => {\r\n    if(playerdir===RIGHT && portaldir===0)\r\n        return true;\r\n    if(playerdir===DOWN && portaldir===90)\r\n        return true;\r\n    if(playerdir===LEFT && portaldir===180)\r\n        return true;\r\n    if(playerdir===UP && portaldir===270)\r\n        return true;\r\n    return false; \r\n}\r\n\r\n\r\nexport const UpdatePlayerPosition = (keyCode) => (dispatch, getState) => {\r\n    const player = getState().player;\r\n\r\n    if(player.interacting || player.isAnimating || player.frozen || player.inBattle)\r\n        return;\r\n\r\n    const VIEWPORT_WIDTH = getState().viewport.viewportDims[0], VIEWPORT_HEIGHT = getState().viewport.viewportDims[1];\r\n    let oldpos = player.position, newpos = [];\r\n    let mapstart = getState().viewport.start, mapend = getState().viewport.end;\r\n    const map = getState().map;\r\n    let direction, steps = player.skin.walkSpriteCount, movemap=false;\r\n    const frameMovementSize = TOTAL_MOVEMENT_SIZE/steps;\r\n\r\n    if(keyCode === 37) {\r\n        direction = LEFT;\r\n        newpos = getNewPostion(oldpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    } else if(keyCode === 39) {\r\n        direction = RIGHT;\r\n        newpos = getNewPostion(oldpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    } else if(keyCode === 38) {\r\n        direction = UP;\r\n        newpos = getNewPostion(oldpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    } else if(keyCode === 40) {\r\n        direction = DOWN;\r\n        newpos = getNewPostion(oldpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    }\r\n\r\n    if(player.direction!==direction)\r\n        dispatch(UpdatePlayerDirectionAction(direction));\r\n\r\n    if(observeMapBoundaries(newpos, map.width, map.height) && observeImpassible(getState().map.tiles, newpos)) {\r\n        const idlenpc = observeIdleNPC(newpos, getState().npc.list);\r\n        const animatingnpc = observeAnimatingNPC(newpos, getState().npc.list);\r\n        if(idlenpc.length === 0 && animatingnpc.length===0) {\r\n            dispatch(UpdatePlayerAnimationAction(true, newpos));\r\n                if(observeCamera(oldpos, direction, mapstart, getState().viewport.camera) && mapScrollable(direction, mapstart, mapend, VIEWPORT_WIDTH, VIEWPORT_HEIGHT)) {\r\n                    movemap = true;\r\n                    requestAnimationFrame(animatePlayer);\r\n                } else {\r\n                    movemap=false;\r\n                    requestAnimationFrame(animatePlayer);\r\n                }\r\n        } else if(idlenpc.length > 0) {\r\n            if(player.nearbyNPC!==idlenpc[0].id) {\r\n                dispatch(UpdateNearbyNPCAction(idlenpc[0].id));\r\n                if(idlenpc[0].battle && !idlenpc[0].battleFlag) {\r\n                    dispatch(ForceBattleConversation(getState().player, idlenpc[0]));\r\n                } else if(!idlenpc[0].talkFlag) {\r\n                    dispatch(ForceNonBattleConversation(getState().player, idlenpc[0]));\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n        const idlenpc = observeIdleNPC(newpos, getState().npc.list);\r\n        if(idlenpc.length > 0) {\r\n            if(player.nearbyNPC!==idlenpc[0].id) {\r\n                dispatch(UpdateNearbyNPCAction(idlenpc[0].id));\r\n                if(idlenpc[0].battle && !idlenpc[0].battleFlag) {\r\n                    dispatch(ForceBattleConversation(getState().player, idlenpc[0]));\r\n                } else if(!idlenpc[0].talkFlag) {\r\n                    dispatch(ForceNonBattleConversation(getState().player, idlenpc[0]));\r\n                }\r\n            }\r\n        }else {\r\n            if(player.nearbyNPC!==null) {\r\n                dispatch(UpdateNearbyNPCAction());\r\n            }\r\n        }\r\n    }\r\n\r\n    function animatePlayer() {\r\n        if(steps === 0) {\r\n            dispatch(UpdatePlayerAnimationAction(false));\r\n            //console.log(mapCoordinatesToTiles(getState().player.position, TILE_SIZE));\r\n            const nearByNPC = checkNearbyIdleNPC(getState().player.position, getState().player.direction, getState().npc.list);\r\n            if(nearByNPC.length) {\r\n                dispatch(UpdateNearbyNPCAction(nearByNPC[0].id));\r\n                if(nearByNPC[0].battle && !nearByNPC[0].battleFlag) {\r\n                    dispatch(ForceBattleConversation(getState().player, nearByNPC[0]));\r\n                } else if(!nearByNPC[0].talkFlag) {\r\n                    dispatch(ForceNonBattleConversation(getState().player, nearByNPC[0]));\r\n                }\r\n            } else if(player.nearbyNPC!==null) {\r\n                dispatch(UpdateNearbyNPCAction());\r\n            }\r\n\r\n            const objects = getObjectForPickup(getState().player.position, getState().gameobjects);\r\n            if(objects.length) {\r\n                dispatch(UpdateNearbyGameObjAction(objects[0].id)); \r\n            } else if(player.nearbyGameObj!==null) {\r\n                dispatch(UpdateNearbyGameObjAction());\r\n            }\r\n\r\n            const portals = getPortal(getState().player.position, getState().gameobjects);\r\n            if(portals.length>0 && checkPortalEnter(getState().player.direction, portals[0].rotate)) {\r\n                dispatch(EnterPortal(portals[0]));\r\n            }\r\n            return;\r\n        } \r\n        newpos = getNewPostion(oldpos, direction, frameMovementSize);\r\n        dispatch(UpdatePlayerPositionAction(newpos));\r\n        oldpos = newpos;\r\n        if(movemap) {\r\n            mapstart = getNewOrigin(mapstart, direction, frameMovementSize);\r\n            dispatch(UpdateOriginAction(mapstart));\r\n        }\r\n        steps--;\r\n        setTimeout(function() {requestAnimationFrame(animatePlayer)}, player.frameInterval);\r\n    }\r\n}\r\n\r\nconst getPositionEquality = (pos1, pos2) => (pos1[0]===pos2[0] && pos1[1]===pos2[1])\r\n\r\nconst getObjectForPickup = (position, gameobjects) => {\r\n    return(gameobjects.filter(gameobject => PICKABLES.includes(gameobject.type.type)  && getPositionEquality(position, gameobject.position)))\r\n}\r\n\r\nexport const PickupGameObject = () => (dispatch, getState) => {\r\n    const player = getState().player;\r\n    if(player.interacting)\r\n        return;\r\n    const gameobject = player.nearbyGameObj!==null? getState().gameobjects.filter( gobj => gobj.id === player.nearbyGameObj ): null;\r\n    if(gameobject!==null) {\r\n        playSoundEffect(PICK_SOUND);\r\n        dispatch(AddObjecttoInventory(gameobject[0]));\r\n        dispatch(UpdateNearbyGameObjAction()); \r\n    }\r\n}\r\n\r\nconst getOppositeDirection = (direction) => {\r\n    switch(direction) {\r\n        case UP: return DOWN;\r\n        case RIGHT: return LEFT;\r\n        case DOWN: return UP;\r\n        case LEFT: return RIGHT;\r\n        default:\r\n            window.alert(\"Something went wrong! Please relaunch the game.\");\r\n    }\r\n}\r\n\r\nconst checkNearbyIdlePlayer = (npcpos, direction, player) => {\r\n    const nextPosition = getNewPostion(npcpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    return observeIdlePlayer(nextPosition, player);\r\n}\r\n\r\nconst checkNearbyIdleNPC = (playerpos, direction, npcList) => {\r\n    const nextPosition = getNewPostion(playerpos, direction, TOTAL_MOVEMENT_SIZE);\r\n    const nearByNPC = observeIdleNPC(nextPosition, npcList);\r\n    return nearByNPC;\r\n}\r\n\r\nconst checkBattleEligibilty = (playerlevel, npclevel) => {\r\n    return(npclevel - playerlevel <= BATTLE_ELIGIBILITY_THRESHOLD);\r\n}\r\n\r\nconst checkBossBattleEligibilty = (defeatedGangMembersList) => {\r\n    return(Object.keys(defeatedGangMembersList).length===BATTLE_NUM_GANG_MEMBERS);\r\n}\r\n\r\nconst ForceBattleConversation = (player, npc) => (dispatch, getState) => {\r\n    \r\n    const VIEWPORT_HEIGHT = getState().viewport.viewportDims[1];\r\n\r\n    if(!checkBattleEligibilty(player.battle.level, npc.level))\r\n        return;\r\n\r\n    if(npc.battlerType===BOSS) {\r\n        if(!checkBossBattleEligibilty(player.battle.defeatedGangMembers)) \r\n            return;\r\n    }\r\n   \r\n    const oppdirection = getOppositeDirection(player.direction);\r\n    if(npc.direction!==oppdirection) {\r\n        dispatch(UpdateNPCDirectionAction(npc.id, oppdirection));\r\n    }\r\n\r\n    dispatch(SetConversationStatus(npc.id, \r\n        {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n        {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAccept.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n        mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", true));\r\n}\r\n\r\nconst ForceNonBattleConversation = (player, npc) => (dispatch, getState) => {\r\n   \r\n    const VIEWPORT_HEIGHT = getState().viewport.viewportDims[1];\r\n    const oppdirection = getOppositeDirection(player.direction);\r\n\r\n    if(npc.direction!==oppdirection) {\r\n        dispatch(UpdateNPCDirectionAction(npc.id, oppdirection));\r\n    }\r\n    dispatch(SetConversationStatus(npc.id, \r\n        {name: npc.name, dialogs: NPCDIALOGS[npc.name].starts.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n        {name: player.name, dialogs: PLAYERDIALOGS[npc.name].follows.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))},\r\n        mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n}\r\n\r\n\r\nexport const HandleConversation = () => (dispatch, getState) => {\r\n    const player = getState().player;\r\n    if(!player.interacting)\r\n        dispatch(InitiateConversation());\r\n    else \r\n        dispatch(UpdateConversation());\r\n}\r\n\r\nconst InitiateConversation = () => (dispatch, getState) => {\r\n    const player = getState().player;\r\n    const npc = player.nearbyNPC!==null? getNPC(getState().npc.list, player.nearbyNPC):null;\r\n    const VIEWPORT_HEIGHT = getState().viewport.viewportDims[1];\r\n    if(npc && !npc.isAnimating) {\r\n        const oppdirection = getOppositeDirection(player.direction);\r\n        if(npc.direction!==oppdirection) {\r\n            dispatch(UpdateNPCDirectionAction(npc.id, oppdirection));\r\n        }\r\n        if(npc.battle) {\r\n            if(checkBattleEligibilty(player.battle.level, npc.level)) {\r\n                if(npc.battlerType===BOSS) {\r\n                    if(checkBossBattleEligibilty(player.battle.defeatedGangMembers)) {\r\n                        dispatch(SetConversationStatus(npc.id, \r\n                            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleAcceptNeverDefeated.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", true));\r\n                    } else {\r\n                        dispatch(SetConversationStatus(npc.id, \r\n                            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleDecline.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n                    }\r\n                \r\n                } else {\r\n                    if(npc.defeatedCount > 0) {\r\n                        dispatch(SetConversationStatus(npc.id, \r\n                            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            {name: npc.name, dialogs:  NPCDIALOGS[npc.name].battleDeclineDefeated.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n                    } else {\r\n                        dispatch(SetConversationStatus(npc.id, \r\n                            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleAcceptNeverDefeated.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", true));\r\n                    }\r\n                }\r\n            } else {\r\n                dispatch(SetConversationStatus(npc.id, \r\n                    {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleAsk.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                    {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleDecline.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n                    mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n            }\r\n        } else {\r\n            dispatch(SetConversationStatus(npc.id, \r\n                                        {name: player.name, dialogs: npc.name in PLAYERDIALOGS? PLAYERDIALOGS[npc.name].starts.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name)): [\"Hey! Whatsup!\"]}, \r\n                                        {name: npc.name, dialogs: npc.name in NPCDIALOGS? NPCDIALOGS[npc.name].follows.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name)): [\"Ehh! Leave me alone!\"]}, \r\n                                        mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nconst UpdateConversation = () => (dispatch, getState) => {\r\n    const dialog = getState().dialog;\r\n    if(dialog.speakerIdx===0) {\r\n        dispatch(NextDialogAction());\r\n        return;\r\n    }\r\n\r\n    let nextcontentIdx = dialog.dialogIdx + 1;\r\n    if(nextcontentIdx<dialog.person1.dialogs.length) {\r\n        dispatch(NextDialogAction());\r\n    } else {\r\n        if(dialog.battleConversation) {\r\n            dispatch(StartBattle(getState().player, getNPC(getState().npc.list, dialog.npcId)));\r\n        }\r\n        dispatch(ResetConversationStatus(dialog.npcId));\r\n    }\r\n}\r\n\r\nconst getNewDirection = (oldpos, newpos, oldirection) => {\r\n    if(oldpos[0] === newpos[0]) {\r\n        if(oldpos[1] > newpos[1])\r\n            return UP;\r\n        else if(oldpos[1] < newpos[1])\r\n            return DOWN;\r\n        else return oldirection;\r\n    } else if(oldpos[1] === newpos[1]) {\r\n        if(oldpos[0] > newpos[0])\r\n            return LEFT;\r\n        else if(oldpos[0] < newpos[0])\r\n            return RIGHT;\r\n    } else return oldirection;\r\n}\r\n\r\nexport const UpdateNPCPosition = (npcId) => (dispatch, getState) => {\r\n    let npc = getNPC(getState().npc.list, npcId);\r\n    \r\n    if(npc.stationary ||  npc.isAnimating || npc.interacting || npc.inBattle)\r\n        return;\r\n    \r\n    if(npc.isWaiting) {\r\n        if((performance.now() - npc.lastUpdated) < npc.waitInterval) {\r\n            return;\r\n        }\r\n        else \r\n            dispatch(ResetNPCWaiting(npcId));\r\n    }\r\n        \r\n    let curdirection = npc.direction;\r\n    if(npc.pathArr.length < 2) {\r\n        if(curdirection!==npc.defaultDirection)\r\n            dispatch(UpdateNPCDirectionAction(npcId, npc.defaultDirection));\r\n        return;\r\n    } \r\n\r\n    let steps = npc.skin.walkSpriteCount, oldpos = npc.position;\r\n    const frameMovementSize = TOTAL_MOVEMENT_SIZE/steps;\r\n    let newpos = tileToMapCoordinates(npc.pathArr[npc.pathIdx + npc.pathDir], TILE_SIZE);\r\n    let newdirection = getNewDirection(oldpos, newpos, curdirection);\r\n    if(curdirection!==newdirection) {\r\n        dispatch(UpdateNPCDirectionAction(npcId, newdirection));\r\n    }\r\n\r\n    const map = getState().map;\r\n    \r\n    if(observeMapBoundaries(newpos, map.width, map.height)){\r\n\r\n        if(observePlayer(newpos, getState().player)) {\r\n            const idlenpc = observeIdleNPC(newpos, getState().npc.list);\r\n            const animatingnpc = observeAnimatingNPC(newpos, getState().npc.list);\r\n            if(idlenpc.length === 0 && animatingnpc.length===0) {\r\n                dispatch(UpdateNPCAnimationAction(npcId, true, newpos));\r\n                requestAnimationFrame(animateNPC)\r\n            }\r\n        } else {\r\n            if(getState().player.nearByNPC!==npc.id) {\r\n                if(getState().player.direction===getOppositeDirection(npc.direction)) {\r\n                    dispatch(UpdateNearbyNPCAction(npc.id));\r\n                    if(npc.battle && !npc.battleFlag) {\r\n                        dispatch(ForceBattleConversation(getState().player, npc));\r\n                    }else if(!npc.talkFlag) {\r\n                        dispatch(ForceNonBattleConversation(getState().player, npc));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function animateNPC() {\r\n        if(steps === 0) {\r\n            dispatch(UpdateNPCAnimationAction(npcId, false));\r\n            const player = getState().player;\r\n            let npc = getNPC(getState().npc.list, npcId);\r\n            if(checkNearbyIdlePlayer(npc.position, npc.direction, player)) {\r\n                if(player.direction===getOppositeDirection(npc.direction)) {\r\n                    dispatch(UpdateNearbyNPCAction(npc.id));\r\n                    if(npc.battle && !npc.battleFlag) {\r\n                        dispatch(ForceBattleConversation(getState().player, npc));\r\n                    }else if(!npc.talkFlag) {\r\n                        dispatch(ForceNonBattleConversation(getState().player, npc));\r\n                    }\r\n                }\r\n            } else if(player.nearbyNPC===npc.id) {\r\n                dispatch(UpdateNearbyNPCAction());\r\n            }\r\n            return;\r\n        } \r\n        newpos = getNewPostion(oldpos, newdirection, frameMovementSize);\r\n        dispatch(UpdateNPCPositionAction(npcId, newpos));\r\n        oldpos = newpos;\r\n        steps--;\r\n        customSetTimeout(function() {requestAnimationFrame(animateNPC)}, npc.frameInterval, npc.id);\r\n    }\r\n}\r\n\r\nconst getPortal = (position, gameobjects) => {\r\n    return(gameobjects.filter(gameobject => gameobject.type.type===PORTAL && getPositionEquality(position, gameobject.position)))\r\n}\r\n\r\nconst EnterPortal = (portal) => (dispatch, getState) =>{\r\n    if(portal!==null) {\r\n        if(portal.type.name===PORTAL_ENTER) {\r\n    \r\n            dispatch(SaveStateInitAction());\r\n            clearIntervals();\r\n            \r\n            saveStateandAddMap();\r\n            \r\n                function saveStateandAddMap() { \r\n                    const npcList = getState().npc.list;\r\n                    const npcAnimating = npcList.filter( npc => npc.isAnimating);\r\n                    if(npcAnimating.length > 0) {\r\n                        setTimeout(saveStateandAddMap, 500);\r\n                    } else {\r\n                        dispatch(SaveStateAction(getState())); \r\n                        dispatch(AddMap(portal.target, true));\r\n                    }\r\n                }\r\n        } else if(portal.type.name===PORTAL_LEAVE) {\r\n            const cpyPrevStates = [...getState().statemanager.prevStates];\r\n            if(!cpyPrevStates.length)\r\n                return;\r\n\r\n            const oldState = cpyPrevStates.pop();\r\n            const currentMap = getState().map.name;\r\n            const currentGameobjects = getState().gameobjects.map( gameobject => {\r\n                return({\r\n                    ...gameobject,\r\n                    position: mapCoordinatesToTiles(gameobject.position, TILE_SIZE),});\r\n                });\r\n            const currentMapNPCBattleStatus = getState().npc.list.map( npc => {\r\n                return({ id: npc.id,\r\n                        battleFlag: npc.battleFlag,\r\n                        defeatedCount: npc.defeatedCount});\r\n                });\r\n            dispatch(SaveStateInitAction()); \r\n            clearIntervals();\r\n            checkandRestoreMap();\r\n                \r\n                function checkandRestoreMap() { \r\n                    const npcList = getState().npc.list;\r\n                    const npcAnimating = npcList.filter( npc => npc.isAnimating);\r\n                    if(npcAnimating.length > 0) {\r\n                        setTimeout(checkandRestoreMap, 500);\r\n                    } else {\r\n                        dispatch(LoadingMapAction());\r\n                        const mapBg = new Image();\r\n                        mapBg.onload = renderMap;\r\n                        mapBg.src = oldState.map.src;\r\n                        function renderMap(){\r\n                            dispatch(RestoreStateAction({map: currentMap, gameobjects: currentGameobjects, npc: currentMapNPCBattleStatus}, oldState, cpyPrevStates));\r\n                        }  \r\n                    }\r\n                }\r\n            }   \r\n    }\r\n}\r\n\r\nexport const SaveGameToDisk = () => (dispatch, getState) => {\r\n    \r\n    dispatch(SaveStateInitAction());\r\n    clearIntervals();\r\n    saveStateToLocalStorage();\r\n        \r\n    function saveStateToLocalStorage() { \r\n        const npcList = getState().npc.list;\r\n        const npcAnimating = npcList.filter( npc => npc.isAnimating);\r\n        if(npcAnimating.length > 0) {\r\n            setTimeout(saveStateToLocalStorage, 500);\r\n        } else {\r\n            try {\r\n                const serializedState = JSON.stringify(getState());\r\n                localStorage.setItem(SAVED_GAME, serializedState);\r\n                alert(\"Game saved successfully!\");\r\n              } catch (err) {\r\n                alert(\"Saving state failed! Try starting a new game.\");\r\n              } \r\n            dispatch(SaveStateEndAction());\r\n        }\r\n    }\r\n}\r\n\r\nexport const LoadGameFromDisk = () => (dispatch) => {\r\n    try {\r\n        const serializedState = localStorage.getItem(SAVED_GAME);\r\n    \r\n        if (serializedState === null) {\r\n          return undefined;\r\n        }\r\n    \r\n        const state =  JSON.parse(serializedState);\r\n        dispatch(LoadingMapAction());\r\n        const mapBg = new Image();\r\n        mapBg.onload = renderMap;\r\n        mapBg.src = state.map.src;\r\n        function renderMap(){\r\n            dispatch(RestoreStateFromDiskAction(state));\r\n        }  \r\n    \r\n      } catch (err) {\r\n            alert(\"Loading state failed. Start a new game!\");\r\n            return undefined;\r\n      }\r\n      return 1;\r\n}\r\n\r\nexport const AddMap = (level, secondary=false) => (dispatch, getState) => {\r\n    dispatch(LoadingMapAction());\r\n\r\n    const width = level.map.tiles[0].length*TILE_SIZE, height= level.map.tiles.length*TILE_SIZE;\r\n    const playerPosition = tileToMapCoordinates(level.player.position, TILE_SIZE);\r\n    const VIEWPORT_WIDTH = getState().viewport.viewportDims[0], VIEWPORT_HEIGHT = getState().viewport.viewportDims[1];\r\n    let start_x, start_y, end_x, end_y;\r\n    if(width <= VIEWPORT_WIDTH) {\r\n        start_x = VIEWPORT_WIDTH/2 - width/2;\r\n        end_x = start_x + width;\r\n    } else {\r\n        start_x = (VIEWPORT_WIDTH/2) - playerPosition[0] - TILE_SIZE;\r\n        start_x = start_x >=0? 0: start_x;\r\n        end_x = start_x + width;\r\n        if(end_x < VIEWPORT_WIDTH) {\r\n            end_x = VIEWPORT_WIDTH;\r\n            start_x = end_x - width;\r\n        }\r\n    }\r\n    if(height <= VIEWPORT_HEIGHT) {\r\n        start_y = VIEWPORT_HEIGHT/2 - height/2;\r\n        end_y = start_y + height;\r\n    } else {\r\n        start_y = (VIEWPORT_HEIGHT/2)-playerPosition[1] - TILE_SIZE;\r\n        start_y = start_y >=0? 0: start_y;\r\n        end_y = start_y + height\r\n        if(end_y < VIEWPORT_HEIGHT) {\r\n            end_y = VIEWPORT_HEIGHT;\r\n            start_y = end_y - height;\r\n        }\r\n    }\r\n    \r\n    let start = [ start_x, start_y ];\r\n    let end = [end_x, end_y];\r\n\r\n    let oldState = null;\r\n    if(secondary) {\r\n        const sm = getState().statemanager;\r\n        oldState = level.name in sm? sm[level.name]: null; \r\n    }\r\n\r\n    const mapBg = new Image();\r\n    mapBg.onload = renderMap;\r\n    mapBg.src = level.map.src;\r\n\r\n    function renderMap(){\r\n        dispatch(AddMapAction(level, width, height, playerPosition, start, end, oldState, secondary));\r\n    }\r\n}\r\n\r\n\r\nexport const SetPlayerInfoAction = (name, skinIdx) => {\r\n    return({\r\n        type: ActionTypes.SET_PLAYER_INFO,\r\n        payload : {\r\n            name,\r\n            skinIdx\r\n        }\r\n    })\r\n}\r\n\r\n\r\nexport const StartNewJourneyAction = () => {\r\n    return({\r\n        type: ActionTypes.START_NEW_JOURNEY,\r\n    });\r\n}\r\n\r\n\r\nexport const InitViewportAction = (viewportDims) => {\r\n    const camera = [[(viewportDims[0]/2) - (TILE_SIZE*2), (viewportDims[0]/2) + (TILE_SIZE)], [(viewportDims[1]/2) - (TILE_SIZE*2), (viewportDims[1]/2) + (TILE_SIZE)]];\r\n    return({\r\n        type: ActionTypes.INIT_VIEWPORT_DIMS,\r\n        payload: {\r\n            viewportDims,\r\n            camera,\r\n        }\r\n    });\r\n}\r\n\r\n\r\nconst StartBattle = (player, npc) => {\r\n    return({\r\n        type: ActionTypes.START_BATTLE,\r\n        payload: {\r\n            player,\r\n            npc,\r\n        }\r\n    });\r\n} \r\n\r\nconst BattleGetRandomMove = (maxMove) => {\r\n    return (Math.floor(Math.random() * (maxMove+1)) % (maxMove+1));\r\n}\r\n\r\nconst BattleGetPredictedMoveIdx = (arr) => {\r\n    return(arr.reduce((maxIdx, currVal, currIdx, arr) => currVal > arr[maxIdx]? currIdx: maxIdx, 0));\r\n}\r\n\r\nconst BattleGetWinningMove = (move, maxMove) => {\r\n    switch(move) {\r\n        case ROCK: return PAPER;\r\n        case PAPER: return SCISSORS;\r\n        case SCISSORS: return ROCK;\r\n        default: return BattleGetRandomMove(maxMove);\r\n    }\r\n}\r\n\r\nconst BattleGetNextMove = (battlerType, markovMatrix, lastMove) => {\r\n    const maxMove = markovMatrix.length - 1;\r\n    let nextMove, predictedMoveIdx;\r\n    if(battlerType===NON_GANG_MEMBER ||  lastMove===null) {\r\n        nextMove = BattleGetRandomMove(maxMove);\r\n    } else {\r\n        predictedMoveIdx = BattleGetPredictedMoveIdx(markovMatrix[lastMove]);\r\n        if(markovMatrix[lastMove][predictedMoveIdx]===0) {\r\n            nextMove = BattleGetRandomMove(maxMove);\r\n        } else {\r\n            nextMove =  BattleGetWinningMove(predictedMoveIdx);\r\n        }\r\n    }\r\n    return nextMove;\r\n}\r\n\r\nconst BattleGetWinner = (playermove, npcmove) => {\r\n        if(playermove===ROCK) {\r\n            if(npcmove===SCISSORS) \r\n                return 1; //player won\r\n            else if(npcmove===PAPER)\r\n                return -1; //npc won\r\n            else \r\n                return 0 //draw\r\n        } else if(playermove===PAPER) {\r\n            if(npcmove===ROCK) \r\n                return 1; //player won\r\n            else if(npcmove===SCISSORS)\r\n                return -1; //npc won\r\n            else\r\n                return 0 //draw\r\n        } else if(playermove===SCISSORS) {\r\n            if(npcmove===PAPER)\r\n                return 1; //player won\r\n            else if(npcmove===ROCK)\r\n                return -1; //npc won\r\n            else\r\n                return 0 //draw\r\n        }\r\n}\r\n\r\nexport const BattleMoveIndexToStr = (move) => {\r\n    switch(move) {\r\n        case 0: return \"ROCK\";\r\n        case 1: return \"PAPER\";\r\n        case 2: return \"SCISSORS\";\r\n        default: return \"Undefined\";\r\n    }\r\n}\r\n\r\nconst BattleSummary = (playername, playermove, npcname, npcmove, winner) => {\r\n    const playerline = playername + \" chose \"+ BattleMoveIndexToStr(playermove) + \". \";\r\n    const npcline = npcname+ \" chose \"+ BattleMoveIndexToStr(npcmove)+\". \";\r\n    let winnerline; \r\n    if(winner===1) {\r\n        winnerline = playername + \" wins this round!\";\r\n    } else if(winner===-1) {\r\n        winnerline = npcname+ \" wins this round!\";\r\n    } else {\r\n        winnerline = \"Its a DRAW!\";\r\n    }\r\n    return(playerline+npcline+winnerline);\r\n}\r\n\r\nexport const BattleHandleMove = (playerMove) => (dispatch, getState) => {\r\n    \r\n    playSoundEffect(LASER_SOUND);\r\n    let battle = getState().battle;\r\n    const playerMarkovMatrix = battle.player.markovMatrix;\r\n    const playerLastMove = battle.player.lastMove;\r\n    const npcMove = BattleGetNextMove(battle.npc.battlerType, playerMarkovMatrix, playerLastMove);\r\n    const winner = BattleGetWinner(playerMove, npcMove);\r\n    const summary = BattleSummary(battle.player.name, playerMove, battle.npc.name, npcMove, winner);\r\n    dispatch(UpdateBattleStatsAction(playerMove, npcMove, winner, summary));\r\n\r\n    const finalWinner = CheckBattleWinner(getState().battle);\r\n    if(finalWinner!==0) {\r\n        battle = getState().battle;\r\n        let newexp = battle.player.exp + getPlayerNewExp(battle.player.score, battle.player.level, battle.npc.level, finalWinner);\r\n        let newlevel = getPlayerLevel(newexp);\r\n        setTimeout( function() { \r\n            dispatch(EndBattle(finalWinner, {newlevel, newexp, gangMember:finalWinner===1 && battle.npc.battlerType===GANG_MEMBER?battle.npc.name:null}, battle.npc.id));\r\n        }, 1200);\r\n    }\r\n}\r\n\r\nconst getPlayerNewExp = (score, playerLevel, npcLevel, winner) => {\r\n    const BASE_EXP = 5, LEVEL_MULTIPLIER = 10, WIN_BONUS=10;\r\n    if(winner===1)\r\n        return(BASE_EXP + score + Math.max((npcLevel - (playerLevel-1))*LEVEL_MULTIPLIER, LEVEL_MULTIPLIER) + WIN_BONUS);\r\n    else \r\n        return(BASE_EXP + score);\r\n}\r\n\r\nconst getPlayerLevel = (exp) => {\r\n    if(exp < 60) \r\n        return 1;\r\n    else if(exp < 180)\r\n        return 2;\r\n    else if(exp < 360)\r\n        return 3;\r\n    else if(exp < 540)\r\n        return 4;\r\n    else if(exp < 1000)\r\n        return 5;\r\n    else \r\n        return 6;\r\n}\r\n\r\nconst CheckBattleWinner = (battle) => {\r\n    if(battle.player.lives===0) {\r\n        return -1;\r\n    } else if(battle.npc.lives===0) {\r\n        return 1;\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\nconst EndBattle = (battleWinner, updatedPlayerStats, npcId) => {\r\n    return({\r\n        type: ActionTypes.END_BATTLE,\r\n        payload: {\r\n            battleWinner,\r\n            player: updatedPlayerStats,\r\n            npcId,\r\n        }\r\n    });\r\n}\r\n\r\nexport const CloseBattleSequence = () => (dispatch, getState) => {\r\n    const npc = getNPC(getState().npc.list, getState().battle.npc.id), player = getState().player;\r\n    const VIEWPORT_HEIGHT=getState().viewport.viewportDims[1];\r\n    dispatch(CloseBattle());\r\n    \r\n    if(getState().battle.finalWinner===1) {\r\n        dispatch(SetConversationStatus(npc.id, \r\n            {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleLose.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleWin.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n    } else {\r\n        dispatch(SetConversationStatus(npc.id, \r\n            {name: npc.name, dialogs: NPCDIALOGS[npc.name].battleWin.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n            {name: player.name, dialogs: PLAYERDIALOGS[npc.name].battleLose.map(dialog => dialog.replace(\"$PLAYERNAME\", player.name))}, \r\n            mapToViewport(player.position, getState().viewport.start)[1]>(VIEWPORT_HEIGHT/3)? \"top\": \"bottom\", false));\r\n    }\r\n    \r\n} \r\n\r\nconst CloseBattle = () => {\r\n    return({\r\n        type: ActionTypes.CLOSE_BATTLE,\r\n    });\r\n}\r\n\r\nexport const BattleEndIntro = () => {\r\n    return({\r\n        type: ActionTypes.END_BATTLE_INTRO,\r\n    });\r\n}\r\n\r\n\r\n\r\nconst UpdateBattleStatsAction = (playermove, npcmove, winner, summary) => {\r\n    return({\r\n        type: ActionTypes.SUBMIT_MOVES,\r\n        payload: {\r\n            playermove,\r\n            npcmove,\r\n            winner,\r\n            summary,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdatePlayerAnimationAction = (isAnimating, newpos = []) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_PLAYER_ANIMATION,\r\n        payload: {\r\n            isAnimating,\r\n            newpos,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdateNPCAnimationAction = (id, isAnimating, newpos = []) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_NPC_ANIMATION,\r\n        payload: {\r\n            id,\r\n            isAnimating,\r\n            newpos,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdatePlayerPositionAction = (position) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_PLAYER_POSITION,\r\n        payload: {\r\n            position,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdateNPCPositionAction = (npcId, position) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_NPC_POSITION,\r\n        payload: {\r\n            id: npcId,\r\n            position,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdatePlayerDirectionAction = (direction) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_PLAYER_DIRECTION,\r\n        payload: {\r\n            direction,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdateNearbyNPCAction = (npcId=null) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_NEARBY_NPC,\r\n        payload: {\r\n            npcId: npcId,\r\n        }\r\n    });\r\n}\r\n\r\nconst UpdateNearbyGameObjAction = (gameobjId=null) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_NEARBY_GAMEOBJ,\r\n        payload: {\r\n            id: gameobjId,\r\n        }\r\n    });\r\n}\r\n\r\n\r\nconst UpdateNPCDirectionAction = (npcId, direction) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_NPC_DIRECTION,\r\n        payload: {\r\n            id: npcId,\r\n            direction,\r\n        }\r\n    });\r\n}\r\n\r\nconst ResetNPCWaiting = (npcId) => {\r\n    return({\r\n        type: ActionTypes.RESET_NPC_WAITING,\r\n        payload: {\r\n            id: npcId,\r\n        }\r\n    });\r\n}\r\n\r\nexport const UpdateOriginAction = (origin) => {\r\n    return({\r\n        type: ActionTypes.UPDATE_MAP_ORIGIN,\r\n        payload: {\r\n            origin\r\n        },\r\n    });\r\n}\r\n\r\n\r\nconst SetConversationStatus = (npcId, person1, person2, position, battleConversation) => {\r\n    playSoundEffect(DRIP_SOUND);\r\n    return({\r\n        type: ActionTypes.SET_DIALOG_STATUS,\r\n        payload: {\r\n            person1,\r\n            person2,\r\n            npcId,\r\n            position,\r\n            battleConversation,\r\n        }\r\n    });\r\n}\r\n\r\nconst ResetConversationStatus = (npcId) => {\r\n    return({\r\n        type: ActionTypes.RESET_DIALOG_STATUS,\r\n        payload: {\r\n            npcId,\r\n        }\r\n    });\r\n}\r\n\r\nconst NextDialogAction = () => {\r\n    playSoundEffect(DRIP_SOUND);\r\n    return({\r\n        type: ActionTypes.NEXT_DIALOG,\r\n    })\r\n}\r\n\r\nexport const ToggleInventory = () => {\r\n    playSoundEffect(PICK_SOUND);\r\n    return({\r\n        type: ActionTypes.TOGGLE_INVENTORY_DISPLAY,\r\n    })\r\n}\r\n\r\nconst AddObjecttoInventory = (object) => {\r\n    return({\r\n        type: ActionTypes.ADD_OBJECT_TO_INVENTORY,\r\n        payload: {\r\n            object,\r\n        }\r\n    });\r\n}\r\n\r\n\r\nconst SaveStateInitAction = () => {\r\n    return({\r\n        type: ActionTypes.SAVE_STATE_INITIATED,\r\n    })\r\n}\r\n\r\nconst SaveStateAction = (state) => {\r\n    return({\r\n        type: ActionTypes.SAVE_STATE,\r\n        payload: {\r\n            state,\r\n        }\r\n    })\r\n}\r\n\r\nconst SaveStateEndAction = () => {\r\n    return({\r\n        type: ActionTypes.SAVE_STATE_END,\r\n    })\r\n}\r\n\r\n\r\nconst RestoreStateAction = (currentMapInfo, state, prevStates) => {\r\n    return({\r\n        type: ActionTypes.RESTORE_STATE,\r\n        payload: {\r\n            mapinfo: currentMapInfo,\r\n            state,\r\n            prevStates,\r\n        }\r\n    })\r\n}\r\n\r\nconst RestoreStateFromDiskAction = (state) => {\r\n    return({\r\n        type: ActionTypes.RESTORE_STATE_FROM_DISK,\r\n        payload: {\r\n            state,\r\n        }\r\n    })\r\n}\r\n\r\nconst LoadingMapAction = () => {\r\n    return({\r\n        type: ActionTypes.MAP_LOADING,\r\n    });\r\n}\r\n\r\nconst getMergedNPCList = (base, diff) => {\r\n    let diffnpc = null;\r\n    return(base.map( npc => {\r\n                diffnpc = getNPC(diff, npc.id);\r\n                return({\r\n                    ...npc,\r\n                    battleFlag: diffnpc.battleFlag,\r\n                    defeatedCount: diffnpc.defeatedCount,\r\n                });\r\n            })\r\n    );\r\n}\r\n\r\nconst AddMapAction = (level, width, height ,playerPosition, vpstart, vpend, oldState, secondary) => { \r\n    return({\r\n        type: ActionTypes.ADD_MAP,\r\n        payload: {\r\n            secondary,\r\n            name: level.name,\r\n            tiles: level.map.tiles,\r\n            width,\r\n            height,\r\n            src: level.map.src,\r\n            audioSrc: level.map.audioSrc,\r\n            viewport: {\r\n                start: vpstart,\r\n                end: vpend,\r\n            },\r\n            player: {\r\n                ...level.player,\r\n                position: playerPosition,\r\n            },\r\n            npc: oldState? getMergedNPCList(level.npc, oldState.npc) : level.npc,\r\n            gameobjects: oldState? oldState.gameobjects: level.gameobjects.concat(level.portals),\r\n        },\r\n    });\r\n}","import { CHARACTER_SPRITES_BASE } from '../helpers/constants';\r\n\r\nconst _80 = 80;\r\nconst BASE_URL = CHARACTER_SPRITES_BASE;\r\n\r\nexport const SKINS = {\r\n    player_1: {  \r\n        src: BASE_URL + \"/player_1\",\r\n        width: 80,\r\n        height: 60,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    player_2: {\r\n        /*5*/\r\n        src: BASE_URL + \"/player_2\",\r\n        width: 80,\r\n        height: 60,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    prof: {\r\n        /*1*/\r\n        src: BASE_URL+\"/prof\",\r\n        width: _80,\r\n        height: _80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_1: {\r\n        /*2*/\r\n        src: BASE_URL + \"/friend_1\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_2:  {\r\n        /*3*/\r\n        src: BASE_URL+\"/friend_2\",\r\n        width: 70,\r\n        height: 70,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n    friend_3: {\r\n        /*4*/\r\n        src: BASE_URL + \"/friend_3\",\r\n        width: 70,\r\n        height: 70,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_4: {\r\n        /*4*/\r\n        src: BASE_URL + \"/friend_4\",\r\n        width: 70,\r\n        height: 70,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_5: {  \r\n        /*11*/\r\n       src: BASE_URL + \"/friend_5\",\r\n       width: 64,\r\n       height: 64,\r\n       UP: 1,\r\n       RIGHT: 2,\r\n       DOWN: 0,\r\n       LEFT: 3,\r\n       walkSpriteCount: 4,\r\n   },\r\n\r\n   friend_6: {  \r\n    /*11*/\r\n        src: BASE_URL + \"/friend_6\",\r\n        width: 68,\r\n        height: 72,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_7: {  \r\n    /*11*/\r\n        src: BASE_URL + \"/friend_7\",\r\n        width: 68,\r\n        height: 72,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_8: {  \r\n    /*11*/\r\n        src: BASE_URL + \"/friend_8\",\r\n        width: 64,\r\n        height: 91,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    friend_9: {  \r\n        /*11*/\r\n            src: BASE_URL + \"/friend_9\",\r\n            width: 68,\r\n            height: 72,\r\n            UP: 1,\r\n            RIGHT: 2,\r\n            DOWN: 0,\r\n            LEFT: 3,\r\n            walkSpriteCount: 4,\r\n    },\r\n\r\n\r\n    kid_1: {   \r\n        /*6*/\r\n        src: BASE_URL + \"/kid_1\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    kid_2: {  \r\n         /*7*/\r\n        src: BASE_URL + \"/kid_2\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n    \r\n    kid_3: {  \r\n         /*8*/\r\n        src: BASE_URL + \"/kid_3\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    nurse: {  \r\n         /*9*/\r\n        src: BASE_URL + \"/nurse\",\r\n        width: 68,\r\n        height: 72,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    chef: {  \r\n        /*9*/\r\n       src: BASE_URL + \"/chef\",\r\n       width: 80,\r\n       height: 80,\r\n       UP: 1,\r\n       RIGHT: 2,\r\n       DOWN: 0,\r\n       LEFT: 3,\r\n       walkSpriteCount: 4,\r\n   },\r\n\r\n    bully_1: {  \r\n        /*10*/\r\n        src: BASE_URL + \"/bully_1\",\r\n        width: 48,\r\n        height: 60,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n   },\r\n\r\n   crush_1: {  \r\n         /*11*/\r\n        src: BASE_URL + \"/crush_1\",\r\n        width: 68,\r\n        height: 72,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    crush_2: {  \r\n        /*11*/\r\n       src: BASE_URL + \"/crush_2\",\r\n       width: 68,\r\n       height: 72,\r\n       UP: 1,\r\n       RIGHT: 2,\r\n       DOWN: 0,\r\n       LEFT: 3,\r\n       walkSpriteCount: 4,\r\n   },\r\n\r\n   crush_3: {  \r\n            /*11*/\r\n        src: BASE_URL + \"/crush_3\",\r\n        width: 80,\r\n        height: 80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    crush_4: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/crush_4\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    tribe_1: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/tribe_1\",\r\n        width: 80,\r\n        height: 80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    tribe_2: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/tribe_2\",\r\n        width: 80,\r\n        height: 80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    tribe_3: {  \r\n        /*10*/\r\n        src: BASE_URL + \"/tribe_3\",\r\n        width: 64,\r\n        height: 64,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n        },\r\n\r\n    tribe_4: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/tribe_4\",\r\n        width: 80,\r\n        height: 80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    tribe_5: {  \r\n        /*11*/\r\n            src: BASE_URL + \"/tribe_5\",\r\n            width: 80,\r\n            height: 80,\r\n            UP: 1,\r\n            RIGHT: 2,\r\n            DOWN: 0,\r\n            LEFT: 3,\r\n            walkSpriteCount: 4,\r\n    },\r\n\r\n    boss: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/boss\",\r\n        width: 80,\r\n        height: 80,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    whitepuppy: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/puppy_white\",\r\n        width: 40,\r\n        height: 40,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    brownpuppy: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/puppy_brown\",\r\n        width: 40,\r\n        height: 40,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    blackcat: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/cat_black\",\r\n        width: 40,\r\n        height: 40,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    whitecat: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/cat_white\",\r\n        width: 40,\r\n        height: 40,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    orangecat: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/cat_orange\",\r\n        width: 40,\r\n        height: 40,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n\r\n    baby: {  \r\n        /*11*/\r\n        src: BASE_URL + \"/baby\",\r\n        width: 30,\r\n        height: 45,\r\n        UP: 1,\r\n        RIGHT: 2,\r\n        DOWN: 0,\r\n        LEFT: 3,\r\n        walkSpriteCount: 4,\r\n    },\r\n}","import { HEALER, EATABLE, CURRENCY, PORTAL, PORTAL_ENTER, PORTAL_LEAVE, PROPS_PATH } from \"../helpers/constants\";\r\n\r\nconst ITEMS_URL =  `${PROPS_PATH}/items.png`;\r\nconst PORTAL_URL = `${PROPS_PATH}/portal.png`; \r\nconst ENTER_URL = `${PROPS_PATH}/enter.png`; \r\nconst LEAVE_URL = `${PROPS_PATH}/leave.png`; \r\n\r\n\r\nexport const GAMEOBJECTS = [\r\n    {\r\n        /*0*/\r\n        id: 0,\r\n        name: \"redpotion\",\r\n        src: ITEMS_URL,\r\n        srcpos: [0,0],\r\n        width: 40,\r\n        height: 40,\r\n        type: HEALER,\r\n    },\r\n\r\n    {\r\n        /*1*/\r\n        id: 1,\r\n        name: \"vaccine\",\r\n        src: ITEMS_URL,\r\n        srcpos: [200,0],\r\n        width: 40,\r\n        height: 40,\r\n        type: HEALER,\r\n    },\r\n\r\n    {\r\n        /*2*/\r\n        id: 2,\r\n        name: \"water\",\r\n        src: ITEMS_URL,\r\n        srcpos: [240,0],\r\n        width: 40,\r\n        height: 40,\r\n        type: EATABLE,\r\n    },\r\n\r\n    {\r\n        /*3*/\r\n        id: 3,\r\n        name: \"berry\",\r\n        src: ITEMS_URL,\r\n        srcpos: [240,280],\r\n        width: 40,\r\n        height: 40,\r\n        type: EATABLE,\r\n    },\r\n\r\n    {\r\n        /*4*/\r\n        id: 4,\r\n        name: \"diamond\",\r\n        src: ITEMS_URL,\r\n        srcpos: [240,200],\r\n        width: 40,\r\n        height: 40,\r\n        type: CURRENCY,\r\n    },\r\n\r\n    {\r\n        /*5*/\r\n        id: 5,\r\n        name: \"meat\",\r\n        src: ITEMS_URL,\r\n        srcpos: [280,160],\r\n        width: 40,\r\n        height: 40,\r\n        type: EATABLE,\r\n    },\r\n\r\n    {\r\n        /*6*/\r\n        id: 6,\r\n        name: \"bone\",\r\n        src: ITEMS_URL,\r\n        srcpos: [200,160],\r\n        width: 40,\r\n        height: 40,\r\n        type: EATABLE,\r\n    },\r\n\r\n    {\r\n        /*7*/\r\n        id: 7,\r\n        name: \"goldcoin\",\r\n        src: ITEMS_URL,\r\n        srcpos: [280,120],\r\n        width: 40,\r\n        height: 40,\r\n        type: CURRENCY,\r\n    },\r\n\r\n    {\r\n        id:8,\r\n        name:'hen',\r\n        src:'assets/images/80/objectsAndProps/hen.png',\r\n        srcpos: [0,0],\r\n        width: 32,\r\n        height: 36,\r\n        effects: \"spotanimate\",\r\n        type: \"HEN\",\r\n    },\r\n];\r\n\r\nexport const PORTALS = [\r\n\r\n    {   /*0*/\r\n        id: 0,\r\n        name: PORTAL_ENTER,\r\n        src: ENTER_URL,\r\n        srcpos: [0,0],\r\n        width: 40,\r\n        height: 40,\r\n        //effects: \"blink\",\r\n        type: PORTAL,\r\n    },\r\n\r\n    {   /*1*/\r\n        id: 1,\r\n        name: PORTAL_LEAVE,\r\n        src: LEAVE_URL,\r\n        srcpos: [0,0],\r\n        width: 40,\r\n        height: 40,\r\n       // effects: \"blink\",\r\n        type: PORTAL,\r\n    },\r\n\r\n    {   /*2*/\r\n        id: 2,\r\n        name: \"portal\",\r\n        src: PORTAL_URL,\r\n        srcpos: [0,0],\r\n        width: 64,\r\n        height: 64,\r\n        effects: \"rotate\",\r\n        type: PORTAL,\r\n    },\r\n    \r\n]","import { TOWN_CENTER_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const townCenter = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,   0,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,  10,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [   0,   0,   0,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,   0,   0,  10,  10,  10,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,  10,   0,  10,  10,  10,  10,  10,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/town_center.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: TOWN_CENTER_MUSIC,\r\n}","import { DOWN, NON_GANG_MEMBER, LEFT } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { home } from '../../Maps/home';\r\n\r\n\r\nexport const _home = {\r\n    /* Compulsory */\r\n\r\n    name: \"home\",\r\n\r\n    map: home,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [7, 4],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //informational\r\n                id: 0,\r\n                name: \"Dad\",\r\n                skin: SKINS[\"prof\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[6,3], [6,4]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            { \r\n                //informational\r\n                id: 1,\r\n                name: \"Joey\",\r\n                skin: SKINS[\"baby\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[4,7],[4,8],[5,8],[6,8],[6,7],[5,7],[4,7]],\r\n                frameInterval: 200,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n                battle: true,\r\n                level: 1,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n\r\n            { \r\n                //informational\r\n                id: 2,\r\n                name: \"Ace\",\r\n                skin: SKINS[\"brownpuppy\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[3,1], [4,1],[5,1]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n            },\r\n\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [8, 4],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { HOME_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const home = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [   0,  10,  10,  10,  10,  10,  10,  10,   0,],\r\n        [   0,   0,  10,  10,  10,  10,  10,  10,   0,],\r\n        [   0,   0,  10,  10,  10,  10,  10,   0,   0,],\r\n        [   0,   0,  10,  10,  10,  10,  10,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,  10,   0,  10,   0,   0,   0,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/home.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: HOME_MUSIC,\r\n}","import { LEFT, RIGHT, NON_GANG_MEMBER, GANG_MEMBER, BATTLE_GM_MUSIC, UP } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { bakery } from '../../Maps/bakery';\r\n\r\n\r\nexport const _bakery = {\r\n    /* Compulsory */\r\n\r\n    name: \"bakery\",\r\n\r\n    map: bakery,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [8, 7],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //prop\r\n                id: 0,\r\n                name: \"Vincent\",\r\n                skin: SKINS[\"friend_3\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[3,0]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n            { \r\n                //prop\r\n                id: 1,\r\n                name: \"Chase\",\r\n                skin: SKINS[\"friend_2\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[3,1]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n            { \r\n                //battler\r\n                id: 2,\r\n                name: \"Samantha\",\r\n                skin: SKINS[\"crush_1\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[6,3], [6,4]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 4000,\r\n                battle: true,\r\n                level: 2,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n            { \r\n                //tribe\r\n                id: 3,\r\n                name: \"Eden\",\r\n                skin: SKINS[\"tribe_1\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[4,7], [4,8]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                battle: true,\r\n                level: 3,\r\n                battlerType: GANG_MEMBER,\r\n                battleMusic: BATTLE_GM_MUSIC,\r\n            },\r\n\r\n            {  //battler\r\n                id: 4,\r\n                name: \"John\",\r\n                skin: SKINS[\"kid_1\"],\r\n                direction: UP,\r\n                stationary: false,\r\n                pathArr: [[2,13]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                battle: true,\r\n                level: 1,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n\r\n            { \r\n                //prop\r\n                id: 5,\r\n                name: \"Cena\",\r\n                skin: SKINS[\"friend_4\"],\r\n                direction: UP,\r\n                stationary: false,\r\n                pathArr: [[2,11], [2,10]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 6000,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [9, 7],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { BAKERY_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const bakery = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [   0,   0,   0,   0,   0,  10,  10,  10,  10,  10,   0,   0,   0,   0,  10,],\r\n        [   0,   0,   0,   0,   0,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,  10,  10,  10,  10,   0,   0,   0,  10,  10,  10,  10,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,  10,   0,  10,   0,   0,   0,   0,   0,   0,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/bakery.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: BAKERY_MUSIC,\r\n}","import { TOWN_NORTH_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const townNorth = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,   0,   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,],\r\n        [  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,  10,  10,  10,   0,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,   0,  10,  10,  10,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/town_north.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: TOWN_NORTH_MUSIC,\r\n\r\n}","import { CAVE_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const cave = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,],\r\n        [   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,  10,],\r\n\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/cave.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n    audioSrc: CAVE_MUSIC,\r\n}","import { HELL_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const hell = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,   0,   0,   0,  10,  10,  10,],\r\n        [  10,  10,   0,   0,   0,   0,   0,  10,  10,],\r\n        [  10,  10,   0,   0,   0,   0,   0,  10,  10,],\r\n        [  10,  10,   0,   0,   0,   0,  10,  10,  10,],\r\n        [  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/hell.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: HELL_MUSIC,\r\n\r\n}","import { DOWN, RIGHT, GANG_MEMBER, BATTLE_GM_MUSIC, LEFT, NON_GANG_MEMBER } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { townNorth } from '../../Maps/town_north';\r\nimport { _cave } from \"./_cave\";\r\n\r\n\r\n\r\nexport const _townNorth = {\r\n    /* Compulsory */\r\n\r\n    name: \"townNorth\",\r\n\r\n    map: townNorth,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [19, 14],\r\n        direction: 'LEFT',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            {   //prop\r\n                id: 0,\r\n                name: \"Kaloo\",\r\n                skin: SKINS[\"blackcat\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[8,5],[8,6],[8,7]],\r\n                frameInterval: 50,\r\n                moveInterval: 250,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 1,\r\n                name: \"Goku\",\r\n                skin: SKINS[\"whitecat\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[10,7], [10,6], [10,5],[11,5],[12,5],[13,5], [14,5],[15,5]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 2,\r\n                name: \"bruno\",\r\n                skin: SKINS[\"brownpuppy\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[10,6], [10,5],[11,5],[12,5],[13,5], [14,5],[15,5],[16,5]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            {\r\n                //informational\r\n                id:3,\r\n                name: \"Maty\",\r\n                skin: SKINS[\"crush_1\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[13,11], [13,12]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {\r\n                //tribe\r\n                id:4,\r\n                name: \"Tegan\",\r\n                skin: SKINS[\"tribe_4\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[19, 6], [19,7], [19,8]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1500,\r\n                battle: true,\r\n                level: 5,\r\n                battlerType: GANG_MEMBER,\r\n                battleMusic: BATTLE_GM_MUSIC,\r\n            },\r\n\r\n            {   //prop\r\n                id: 5,\r\n                name: \"Matt\",\r\n                skin: SKINS[\"friend_2\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[11,6]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n            \r\n            {   //battler\r\n                id: 6,\r\n                name: \"Damon\",\r\n                skin: SKINS[\"friend_3\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[11,7]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                battle: true,\r\n                level: 4,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n\r\n            {\r\n                //informational\r\n                id:7,\r\n                name: \"Fattu\",\r\n                skin: SKINS[\"kid_2\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[6,5]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {   //battler\r\n                id: 8,\r\n                name: \"Hunt\",\r\n                skin: SKINS[\"friend_9\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[7,14]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                battle: true,\r\n                level: 4,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [6, 6],\r\n            type: PORTALS[0],\r\n            rotate:270,\r\n            target: _cave,\r\n        },\r\n        {\r\n            position: [19, 15],\r\n            type: PORTALS[1],\r\n            rotate:0,\r\n        },\r\n    ]\r\n};","import { DOWN, RIGHT } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { cave } from '../../Maps/cave';\r\nimport { _hell } from \"./_hell\";\r\n\r\n\r\nexport const _cave = {\r\n    /* Compulsory */\r\n\r\n    name: \"hauntedhouse\",\r\n\r\n    map: cave,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [3, 2],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //props\r\n                id: 0,\r\n                name: \"Misty\",\r\n                skin: SKINS[\"blackcat\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[1,0], [2,0], [3,0], [4,0],],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n            },\r\n\r\n            { \r\n                //props\r\n                id: 1,\r\n                name: \"Trigger\",\r\n                skin: SKINS[\"orangecat\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[1,1], [1,2], [1,3], [1,4],],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                talkFlag: false,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [1, 2],\r\n            type: PORTALS[0],\r\n            rotate:270,\r\n            target: _hell,\r\n        },\r\n        {\r\n            position: [4, 2],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { BOSS_BATTLE_LEVEL, BOSS, BATTLE_BOSS_MUSIC, RIGHT, LEFT } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { hell } from '../../Maps/hell';\r\n\r\n\r\nexport const _hell = {\r\n    /* Compulsory */\r\n\r\n    name: \"hell\",\r\n\r\n    map: hell,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [7, 4],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //tribe\r\n                id: 0,\r\n                name: \"Beast\",\r\n                skin: SKINS[\"boss\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[2,3]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                battle: true,\r\n                level: BOSS_BATTLE_LEVEL,\r\n                battlerType: BOSS,\r\n                battleMusic: BATTLE_BOSS_MUSIC,\r\n            },\r\n            { \r\n                //props\r\n                id: 1,\r\n                name: \"Rock\",\r\n                skin: SKINS[\"blackcat\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[5,3], [5,2], [4,2], [3,2], [3,3], [3,4], [3,5], [3,6]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            { \r\n                //props\r\n                id: 2,\r\n                name: \"Paper\",\r\n                skin: SKINS[\"whitecat\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[2,4], [2,5]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n            },\r\n\r\n            { \r\n                //props\r\n                id: 3,\r\n                name: \"Scissors\",\r\n                skin: SKINS[\"orangecat\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[4,2], [4,3],[4,4],[4,5],[4,6]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1000,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [8, 4],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { TOWN_SOUTH_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const townSouth = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   0,   0,   0,   0,],\r\n        [  10,  10,  10,  10,  10,   0,  10,  10,   0,   0,   0,   0,],\r\n        [  10,  10,  10,   0,   0,   0,   0,   0,   0,  10,  10,   0,],\r\n        [  10,  10,  10,   0,   0,   0,   0,   0,  10,   0,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n        [  10,   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [   0,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n        [  10,   0,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,],\r\n        [  10,   0,   0,   0,   0,   0,   0,   0,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n       \r\n    ],\r\n\r\n    src: `${MAPS_BASE}/town_south.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: TOWN_SOUTH_MUSIC,\r\n\r\n}","import { LIBRARY_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const library = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,   10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,  10,    0,   0,  10,  10,  10,  10,  10,   0,   0,  10,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,    0,   0,   0,   0,   0,   0,   0,   0,  10,  10,],\r\n        [   0,   0,   0,   0,   0,   0,   0,   0,    0,   0,   0,   0,   0,   0,   0,   0,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,  10,  10,  10,  10,  10,  10,  10,],\r\n        [    0,   0,   0,   0,  0,  0,   0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [  0,   0,   0,   0,  0,  0,   0,  0,   0,  0,  0,   0,   0,   0,   0,   10,  10,  10, ],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,   0,  10,  10,   0,   0,   0,   0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,  10,  0,   0,  0,  0,   0,  0,  0,  0,  0,  0,  0,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,   0,   0,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  0,   0,  0,  0,   0,   0,  10,  10,  10,  10,  10,],\r\n        [   0,   0,   0,   0,   0,   0,   0,  0,   0,  0,  0,   0,   0,   0,   0,   0,   0,   0,],\r\n        [   0,   0,  10,  10,   0,   0,   0,  0,   0,  0,  0,   0,   0,  10,  10,   0,   0,   0,],\r\n        [   0,   0,   0,  10,  10,   0,   0,  0,   0,  0,  0,   0,  10,  10,   0,   0,   0,   0,],\r\n        [   0,   0,   0,   0,   0,   0,   0,  10,   0, 10,  10,   0,  0,  0,  0,  0,  0,  0,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/library.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: LIBRARY_MUSIC,\r\n\r\n}","import { GAMEROOM_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const gameroom = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,],\r\n        [   0,   0,   0,   0,  10,],\r\n        [  10,   0,   0,   0,  10,],\r\n        [   0,   0,   0,   0,   0,],\r\n        [   0,  10,   0,  10,   0,],\r\n\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/gameroom.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: GAMEROOM_MUSIC,\r\n}","import { DOWN, UP, LEFT, RIGHT, NON_GANG_MEMBER } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { library } from '../../Maps/library';\r\nimport { _gameroom } from \"./_gameroom\";\r\n\r\n\r\nexport const _library = {\r\n    /* Compulsory */\r\n\r\n    name: \"library\",\r\n\r\n    map: library,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [16, 8],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n        { \r\n            //prop\r\n            id: 0,\r\n            name: \"Jordan\",\r\n            skin: SKINS[\"kid_2\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[14,0], [14,1], [14,2]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 3000,\r\n            battle: true,\r\n            level: 3,\r\n            battlerType: NON_GANG_MEMBER,\r\n        },\r\n\r\n        { \r\n            //prop\r\n            id: 1,\r\n            name: \"Prick\",\r\n            skin: SKINS[\"friend_5\"],\r\n            direction: RIGHT,\r\n            stationary: false,\r\n            pathArr: [[14,16]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n        },\r\n\r\n        { \r\n            //prop\r\n            id: 2,\r\n            name: \"Pom\",\r\n            skin: SKINS[\"friend_3\"],\r\n            direction: LEFT,\r\n            stationary: false,\r\n            pathArr: [[14,17]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n        },\r\n\r\n        { \r\n            //prop\r\n            id: 3,\r\n            name: \"Bam\",\r\n            skin: SKINS[\"friend_6\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[10,13], [10,14], [9,14]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n        },\r\n\r\n        { \r\n            //prop\r\n            id: 4,\r\n            name: \"Boo\",\r\n            skin: SKINS[\"friend_2\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[7,16]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n        },\r\n\r\n        {   //battler\r\n            id: 5,\r\n            name: \"Tori\",\r\n            skin: SKINS[\"kid_3\"],\r\n            direction: DOWN,\r\n            stationary: false,\r\n            pathArr: [[8,0]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n            battle: true,\r\n            level: 2,\r\n            battlerType: NON_GANG_MEMBER,\r\n        },\r\n\r\n        {\r\n            //informational\r\n            id:6,\r\n            name: \"Ghissu\",\r\n            skin: SKINS[\"kid_1\"],\r\n            direction: RIGHT,\r\n            stationary: false,\r\n            pathArr: [[4,3], [4,4], [4,5]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 1500,\r\n            talkFlag: false,\r\n        },\r\n\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [4, 15],\r\n            type: PORTALS[0],\r\n            rotate: 0,\r\n            target: _gameroom,\r\n        },\r\n        {\r\n            position: [17, 8],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { DOWN, GANG_MEMBER, BATTLE_GM_MUSIC, UP, NON_GANG_MEMBER } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { gameroom } from '../../Maps/gameroom';\r\n\r\n\r\nexport const _gameroom = {\r\n    /* Compulsory */\r\n\r\n    name: \"gameroom\",\r\n\r\n    map: gameroom,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [3, 2],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n        {   //tribe\r\n            id: 0,\r\n            name: \"Razor\",\r\n            skin: SKINS[\"tribe_3\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[1,2]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n            battle: true,\r\n            level: 4,\r\n            battlerType: GANG_MEMBER,\r\n            battleMusic: BATTLE_GM_MUSIC,\r\n        },\r\n        { \r\n            //prop\r\n            id: 1,\r\n            name: \"Prick\",\r\n            skin: SKINS[\"friend_1\"],\r\n            direction: DOWN,\r\n            stationary: false,\r\n            pathArr: [[1,0]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n            battle: true,\r\n            level: 3,\r\n            battlerType: NON_GANG_MEMBER,\r\n        },\r\n        { \r\n            //prop\r\n            id: 2,\r\n            name: \"Abu\",\r\n            skin: SKINS[\"friend_4\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[3,0]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n        },\r\n        { \r\n            //informational\r\n            id: 3,\r\n            name: \"LT\",\r\n            skin: SKINS[\"friend_7\"],\r\n            direction: UP,\r\n            stationary: false,\r\n            pathArr: [[3,4]],\r\n            frameInterval: 100,\r\n            moveInterval: 500,\r\n            waitInterval: 6000,\r\n            talkFlag: false,\r\n        },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [4, 2],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import { HOTEL_MUSIC, MAPS_BASE } from \"../../helpers/constants\";\r\n\r\nexport const hotel = {\r\n\r\n    tiles: [\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  10,],\r\n        [  10,  10,   0,   0,   0,  10,   0,  10,   0,   0,   0,  10,  10,],\r\n        [  10,  10,  10,   0,  10,  10,   0,  10,   0,   0,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,   0,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,   0,   0,  10,  10,   0,  10,  10,   0,   0,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n        [  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,  10,],\r\n\r\n    ],\r\n\r\n    src: `${MAPS_BASE}/hotel.png`,\r\n\r\n    backgroundColor: \"#ffffff\",\r\n\r\n    audioSrc: HOTEL_MUSIC,\r\n\r\n}","import {_townCenter} from \"./_town_center\";\r\n\r\n\r\nexport const level = _townCenter;","import { DOWN, GANG_MEMBER, NON_GANG_MEMBER, BATTLE_GM_MUSIC, LEFT, RIGHT } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { townCenter } from '../../Maps/town_center';\r\nimport { _home } from \"./_home\";\r\nimport { _bakery } from \"./_bakery\";\r\nimport { _townNorth } from \"./_town_north\";\r\nimport { _townSouth } from \"./_town_south\";\r\n\r\nexport const _townCenter = {\r\n    /* Compulsory */\r\n\r\n    name: \"townCenter\",\r\n\r\n    map: townCenter,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [14, 15],\r\n        direction: 'RIGHT',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //informational\r\n                id: 0,\r\n                name: \"Frank\",\r\n                skin: SKINS[\"friend_5\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[14,16], [14,15]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            { \r\n                //informational\r\n                id: 1,\r\n                name: \"Tia\",\r\n                skin: SKINS[\"crush_4\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[7,6], [7,7]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {\r\n                //battler\r\n                id:2,\r\n                name: \"Nathan\",\r\n                skin: SKINS[\"friend_2\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[3,6], [4,6]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1500,\r\n                battle: true,\r\n                level: 1,\r\n                battlerType: NON_GANG_MEMBER,\r\n                //battleMusic: BATTLE_GM_MUSIC,\r\n            },\r\n\r\n            {\r\n                //informational\r\n                id:3,\r\n                name: \"Tracer\",\r\n                skin: SKINS[\"friend_7\"],\r\n                direction: DOWN,\r\n                stationary: false,\r\n                pathArr: [[11,2], [12,2], [13,2], [14,2], [14,3]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1500,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {\r\n                //informational\r\n                id:4,\r\n                name: \"Sean\",\r\n                skin: SKINS[\"chef\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[21,11], [21,12], [21,13]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {\r\n                //tribe\r\n                id:5,\r\n                name: \"Gambit\",\r\n                skin: SKINS[\"tribe_2\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[20, 15]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1500,\r\n                battle: true,\r\n                level: 4,\r\n                battlerType: GANG_MEMBER,\r\n                battleMusic: BATTLE_GM_MUSIC,\r\n            },\r\n\r\n            {   //prop\r\n                id: 6,\r\n                name: \"Rocky\",\r\n                skin: SKINS[\"friend_8\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[20,16]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n\r\n            {\r\n                //battler\r\n                id:7,\r\n                name: \"Chop\",\r\n                skin: SKINS[\"bully_1\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[20,20], [20, 21], [21,21]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 1500,\r\n                battle: true,\r\n                level: 2,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [12, 15],\r\n            type: PORTALS[0],\r\n            rotate:270,\r\n            target: _home,\r\n        },\r\n        {\r\n            position: [6, 10],\r\n            type: PORTALS[0],\r\n            rotate:270,\r\n            target: _bakery,\r\n        },\r\n        {\r\n            position: [19, 0],\r\n            type: PORTALS[0],\r\n            rotate:180,\r\n            target: _townNorth,\r\n        },\r\n        {\r\n            position: [14, 21],\r\n            type: PORTALS[0],\r\n            rotate:0,\r\n            target: _townSouth,\r\n        }\r\n\r\n    ]\r\n};","import { LEFT, RIGHT, NON_GANG_MEMBER } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { townSouth } from '../../Maps/town_south';\r\nimport { _library } from \"./_library\";\r\nimport { _hotel } from \"./_hotel\";\r\n\r\n\r\nexport const _townSouth = {\r\n    /* Compulsory */\r\n\r\n    name: \"townSouth\",\r\n\r\n    map: townSouth,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [14, 1],\r\n        direction: 'RIGHT',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            { \r\n                //informational\r\n                id: 0,\r\n                name: \"Molly\",\r\n                skin: SKINS[\"crush_2\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[6,3], [6,4]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            { \r\n                //prop\r\n                id: 1,\r\n                name: \"Chambers\",\r\n                skin: SKINS[\"friend_2\"],\r\n                direction: LEFT,\r\n                stationary: false,\r\n                pathArr: [[4,11]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            \r\n            { \r\n                //prop\r\n                id: 2,\r\n                name: \"Ozil\",\r\n                skin: SKINS[\"friend_3\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[4,10]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            { \r\n                //battler\r\n                id: 3,\r\n                name: \"Grindel\",\r\n                skin: SKINS[\"friend_8\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[1,8], [2,8], [2,9], [1,9]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n                battle: true,\r\n                level: 3,\r\n                battlerType: NON_GANG_MEMBER,\r\n                //battleMusic: BATTLE_GM_MUSIC,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [4, 5],\r\n            type: PORTALS[0],\r\n            rotate:270,\r\n            target: _library,\r\n        },\r\n        {\r\n            position: [19, 7],\r\n            type: PORTALS[0],\r\n            rotate:270,\r\n            target: _hotel,\r\n        },\r\n        {\r\n            position: [14, 0],\r\n            type: PORTALS[1],\r\n            rotate:180,\r\n        },\r\n    ]\r\n};","import { DOWN, RIGHT, LEFT, GANG_MEMBER, BATTLE_GM_MUSIC, NON_GANG_MEMBER } from \"../../../helpers/constants\";\r\nimport { SKINS } from '../../skins';\r\nimport { PORTALS } from \"../../gameobjects\";\r\nimport { hotel } from '../../Maps/hotel';\r\n\r\n\r\nexport const _hotel = {\r\n    /* Compulsory */\r\n\r\n    name: \"hotel\",\r\n\r\n    map: hotel,\r\n\r\n    /* Compulsory */\r\n    player: {\r\n        position: [11, 6],\r\n        direction: 'UP',\r\n    },\r\n\r\n    /* Compulsory */\r\n    npc : [\r\n            {   //prop\r\n                id: 0,\r\n                name: \"Cruz\",\r\n                skin: SKINS[\"friend_2\"],\r\n                direction: RIGHT,\r\n                stationary: true,\r\n                pathArr: [[12,2]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 1,\r\n                name: \"Lillie\",\r\n                skin: SKINS[\"crush_1\"],\r\n                direction: LEFT,\r\n                stationary: true,\r\n                pathArr: [[12,3]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 2,\r\n                name: \"Lil\",\r\n                skin: SKINS[\"kid_2\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[12,9], [12,10]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            }, \r\n            {   //prop\r\n                id: 3,\r\n                name: \"Wayne\",\r\n                skin: SKINS[\"friend_7\"],\r\n                direction: DOWN,\r\n                stationary: true,\r\n                pathArr: [[8,3]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 4,\r\n                name: \"Spark\",\r\n                skin: SKINS[\"kid_3\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[8,8], [8,9]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            {   //prop\r\n                id: 5,\r\n                name: \"Sparkle\",\r\n                skin: SKINS[\"whitepuppy\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[6,9], [6,10]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 2000,\r\n            },\r\n\r\n            {   //tribe\r\n                id: 6,\r\n                name: \"Snyder\",\r\n                skin: SKINS[\"tribe_5\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[6,8]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                battle: true,\r\n                level: 5,\r\n                battlerType: GANG_MEMBER,\r\n                battleMusic: BATTLE_GM_MUSIC,\r\n                \r\n            },\r\n\r\n            {   //prop\r\n                id: 7,\r\n                name: \"Weisley\",\r\n                skin: SKINS[\"bully_1\"],\r\n                direction: LEFT,\r\n                stationary: true,\r\n                pathArr: [[6,11]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n            },\r\n\r\n            {   //informational\r\n                id: 8,\r\n                name: \"Rose\",\r\n                skin: SKINS[\"crush_3\"],\r\n                direction: DOWN,\r\n                stationary: true,\r\n                pathArr: [[5,6]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                talkFlag: false,\r\n            },\r\n\r\n            {   //battler\r\n                id: 9,\r\n                name: \"Max\",\r\n                skin: SKINS[\"friend_6\"],\r\n                direction: RIGHT,\r\n                stationary: false,\r\n                pathArr: [[7,2], [7,4]],\r\n                frameInterval: 100,\r\n                moveInterval: 500,\r\n                waitInterval: 3000,\r\n                battle: true,\r\n                level: 4,\r\n                battlerType: NON_GANG_MEMBER,\r\n            },\r\n        ],\r\n\r\n    /* Compulsory */\r\n    gameobjects : [\r\n                    \r\n    ],\r\n\r\n    /* Compulsory */\r\n    portals: [\r\n        {\r\n            position: [12, 6],\r\n            type: PORTALS[1],\r\n            rotate:90,\r\n        }\r\n    ]\r\n};","import React from 'react';\r\nimport { PROPS_PATH } from '../helpers/constants';\r\nimport { getFontSize } from '../helpers/funcs';\r\n\r\nconst Loading = (props) => {\r\n    return(\r\n    <div style={{width: '100%', height:'100%', display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n        <div id=\"loading\" style={{display:'flex', flexDirection:'column', padding: '5px', alignItems:'center'}}>\r\n            <div  style={{}}><img className=\"rotate\" style={{width:250, height:250}} src={`${PROPS_PATH}/loading.png`} alt=\"Loading\"></img></div>\r\n            <p style={{fontSize: getFontSize(2.5), fontFamily:'gameboy', color:'white'}}> {props.msg}</p>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { ROCK, PAPER, SCISSORS, SPACE_KEY, BATTLE_END_MUSIC, BEEP_SOUND, PROPS_PATH } from '../helpers/constants';\r\nimport { BattleHandleMove, BattleMoveIndexToStr, BattleEndIntro, CloseBattleSequence } from '../redux/ActionCreators';\r\nimport { centerBgImg, solidBorder, getKeyDiv, getLevelColor, playSoundEffect, getFontSize } from '../helpers/funcs';\r\nimport ReactHowler from 'react-howler';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        battle: state.battle,\r\n    })\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n    return({\r\n        submitMove: (move) => { dispatch(BattleHandleMove(parseInt(move))); } ,\r\n        endIntro: () => {dispatch(BattleEndIntro());}, \r\n        closeBattle: () => {dispatch(CloseBattleSequence())},\r\n    })\r\n}\r\n\r\nclass HealthBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.timeout = null;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.blink) {\r\n            this.timeout = setTimeout(function(){\r\n                this.hb.classList.add('blinkmomentary');\r\n            }.bind(this), 600);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    render() {\r\n        if(this.hb) {\r\n            this.hb.classList.remove('blinkmomentary');\r\n        }\r\n\r\n        return(\r\n            <div ref={hb => this.hb = hb} style={{width:'90%', height: '50%', display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems:'center' }}>\r\n                <div style={{fontSize: getFontSize(2), marginRight:'10px'}}>HP</div>\r\n                <div style={{width:'90%', height: '30%',...solidBorder(1, 'white', 0), backgroundColor: 'white' }}>\r\n                    <div style={{position: 'relative', width:`${(this.props.currhealth/this.props.maxhealth)*100}%`, height:'100%', ...solidBorder(0, 'white', 0), backgroundImage: 'linear-gradient(mediumseagreen, forestgreen, mediumseagreen)'}}>\r\n                        <div style={{position:'absolute', left:'50%', top:'50%', transform: 'translate(-50%, -50%)',fontSize:getFontSize(2)}}>{Math.floor((this.props.currhealth/this.props.maxhealth)*100)}%</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n     }\r\n}\r\n\r\n\r\nconst PlayerInfo = (props) => {\r\n\r\n    const style = {\r\n        width: '40%',\r\n        height: '100%',\r\n        backgroundColor: getLevelColor(props.player.level),\r\n        ...solidBorder(2, 'black', 5),\r\n        color: 'black',\r\n        fontSize: getFontSize(2.5),\r\n        fontFamily: 'gameboy_lg',\r\n        display: 'flex',\r\n        flexDirection: props.reverse? 'row-reverse' : 'row',\r\n        justifyContent:'space-between'\r\n    }\r\n    return(\r\n        <div style={style}>\r\n            <div style={{width:'30%', height:'90%', alignSelf:'center', margin: '5px', ...centerBgImg(`${props.player.src}/head.png`, \"lightgrey\"), ...solidBorder(2, 'grey', 5) }}/>\r\n            <div style={{width:'70%', height:'100%', display:'flex', flexDirection:'column', justifyContent:'space-around', alignSelf:'center', margin: '5px'}}>\r\n                <div style={{display: 'flex', justifyContent:'space-between'}}>\r\n                    <div>{props.player.name}</div>\r\n                    <div style={{color:'yellow', fontSize:getFontSize(2)}}>Lvl:{props.player.level}</div>\r\n                </div>\r\n                <HealthBar maxhealth={props.player.maxLives} currhealth={props.player.lives} blink={props.blink}/>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass MoveDiv extends Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.timeout = [];\r\n        this.className = this.props.reverse? \"moveInRL\": \"moveInLR\";\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.image.style.backgroundImage = `url('${PROPS_PATH}/${BattleMoveIndexToStr(this.props.move)}.png')`;\r\n        this.image.classList.add(this.className);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.timeout = [];\r\n        this.timeout.push(setTimeout(function() {\r\n            if(this.image) {\r\n                this.image.style.backgroundImage = `url('${PROPS_PATH}/${BattleMoveIndexToStr(this.props.move)}.png')`;\r\n                this.image.classList.add(this.className);\r\n            }\r\n        }.bind(this), 50));\r\n        if(this.props.blink) {\r\n            this.timeout.push(setTimeout(function() {\r\n                if(this.image) {\r\n                    this.image.classList.add(\"blinkmomentary\");\r\n                }\r\n            }.bind(this), 600));\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.timeout.map(timeout => clearTimeout(timeout));\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            position: \"relative\",\r\n            width: '50%',\r\n            height: '100%',\r\n        }\r\n\r\n        const imgStyle = {\r\n            width: '100%',\r\n            height: '100%',\r\n            position: \"absolute\",\r\n            backgroundRepeat: 'no-repeat', \r\n            backgroundPosition:'center',\r\n            backgroundSize: 'contain',\r\n            transform: this.props.reverse? 'rotate(180deg)' : 'rotate(0deg)',\r\n        }\r\n\r\n        if(this.image) {\r\n            this.image.classList.remove(this.className);\r\n            this.image.classList.remove(\"blinkmomentary\");\r\n        };\r\n\r\n        return(\r\n                <div style={style}>\r\n                    <div ref={image => this.image=image} style={imgStyle}></div>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Summary extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.timeout = null;\r\n    }\r\n\r\n    animateText(text) {\r\n        let idx = 0; const p = this.p;\r\n        const animate = function() {\r\n            if(idx > text.length)\r\n                return;\r\n            p.innerHTML = text.substring(0, idx);\r\n            idx++;\r\n            this.timeout = setTimeout(animate, 10);\r\n        }.bind(this);\r\n        animate();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.animateText(this.props.summary);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        clearTimeout(this.timeout);\r\n        this.animateText(this.props.summary);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    render() {\r\n\r\n        const style = {\r\n            border: '10px solid #db5435',\r\n            borderRadius:'20px',\r\n            width: '70%',\r\n            padding: '5px',\r\n            backgroundColor: '#639aa1',\r\n            color: 'white',\r\n            fontSize: getFontSize(3),\r\n            fontFamily: 'gameboy',\r\n            overflowWrap: 'break-word',\r\n        };\r\n\r\n        return(\r\n            <div id=\"summary\" style={style}>\r\n                <p ref={p => this.p = p}></p>\r\n            </div>\r\n        );\r\n    }     \r\n}\r\n\r\n\r\n\r\nclass BattleEnd extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.handleTouchEnd = this.handleTouchEnd.bind(this);\r\n        this.continue = false;\r\n        this.continueKey = isMobile? \"TAP\": \"SPACE\";\r\n        if(this.props.winner===1) {\r\n            this.winnerStr =  `${this.props.player.name} WON!`;\r\n            this.winnerClass = \"wonBlink\";\r\n        } else {\r\n            this.winnerStr = `${this.props.player.name} LOST!`;\r\n            this.winnerClass = \"lostBlink\";\r\n        }\r\n        this.levelColor =  getLevelColor(this.props.player.level);\r\n        this.levelArrow = this.props.player.level>this.props.player.initialStats.level?` <i class=\"fa fa-arrow-up blink\"></i>`:\"\";\r\n        this.animateText = this.animateText.bind(this);\r\n        this.timeout = null;\r\n    }\r\n\r\n    handleKeyDown(event) {        \r\n        if(SPACE_KEY.includes( event.keyCode) && this.continue)\r\n            this.props.closeBattle();\r\n    }\r\n\r\n    handleTouchEnd() {\r\n        this.props.closeBattle();\r\n    }\r\n\r\n\r\n    animateText(base, from, to, speed, ref, count) {\r\n        const animate = function() {\r\n            if(from>to) {\r\n                count++;\r\n                if(count===1) {\r\n                    this.timeout = setTimeout(function() {this.animateText(\"Exp\", this.props.player.initialStats.exp, this.props.player.exp, 40, this.exp, count)}.bind(this), 200);\r\n                } else if(count===2) {\r\n                    this.timeout = setTimeout(function() {this.animateText(\"Level\", this.props.player.initialStats.level, this.props.player.level, 100, this.level, count);}.bind(this),200);\r\n                } else if (count===3) {\r\n                    this.level.style.color = this.levelColor;\r\n                    this.level.innerHTML+=this.levelArrow;\r\n                    this.cont.style.opacity = 1;\r\n                    this.continue = true;\r\n                }\r\n                return;\r\n            }\r\n            playSoundEffect(BEEP_SOUND);\r\n            ref.innerHTML = `${base}: ${from}`;\r\n            from++;\r\n            this.timeout = setTimeout(animate, speed);\r\n        }.bind(this);\r\n\r\n        animate();\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n        window.addEventListener('touchend', this.handleTouchEnd);\r\n        this.timeout = setTimeout(function(){this.animateText(\"Score\", 0, this.props.player.score, 40, this.score, 0)}.bind(this), 600);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n        window.removeEventListener('touchend', this.handleTouchEnd);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div  id=\"battleEnd\" className=\"moveInLR\" style={{position:'absolute', width:'100%', height:'100%', display:'flex', flexDirection:'column', justifyContent:'center', fontSize: getFontSize(2.5) ,fontFamily:'gameboy',  backgroundImage: 'repeating-linear-gradient(#def3c6, #def3c6 20px, #e7f6db 20px, #e7f6db 23px)'}}>\r\n                <div style={{width:'100%', height:'60%', display:'flex', justifyContent:'center'}}>\r\n                    <div style={{width:'60%', height: '100%', display:'flex', justifyContent:'center', backgroundColor: '#f7f8f7',...solidBorder(10, '#00b1b7', 10), color:'#5d5f5b'}}> \r\n                            <div style={{width:'40%', height:'60%', display:'flex', flexDirection:'column', alignSelf:'center'}}>\r\n                                <div style={{width:'240px', height:'240px', alignSelf:'center', ...centerBgImg(`${this.props.player.src}/head.png`, \"lightgrey\"), ...solidBorder(2, 'grey', 5) }}/>\r\n                                <div style={{alignSelf:'center', fontSize: getFontSize(3)}}>{this.props.player.name}</div>\r\n                            </div> \r\n                            <div style={{width:'50%', height:'60%', display:'flex', flexDirection:'column', alignSelf:'center', fontSize: getFontSize(2.5)}}>\r\n                                <div className={this.winnerClass} style={{alignSelf:'center', fontSize: getFontSize(3.5), marginBottom:'20px'}}>{this.winnerStr}</div>\r\n                                <div ref={score => this.score=score} style={{margin:'5px 0px 0px 10px'}}></div>\r\n                                <div  ref={exp => this.exp=exp}  style={{margin:'5px 0px 0px 10px'}}></div>\r\n                                <div  ref={level => this.level=level} style={{margin:'5px 0px 0px 10px', color: this.levelColor}}></div>\r\n                            </div>\r\n                    </div>\r\n                </div> \r\n                <div className=\"blinkContinue\" ref={cont => this.cont=cont} style={{alignSelf:'center', marginTop:'40px', opacity:0, color:'#5d5f5b'}}>{getKeyDiv(this.continueKey, 25)} to continue...</div>          \r\n            </div> \r\n        );\r\n    }\r\n}\r\n\r\nclass BattleIntro extends Component {\r\n\r\n    render() {\r\n\r\n        const character_bg = 'lightgrey';\r\n\r\n        const style={\r\n            position:'absolute', \r\n            width:'100%', height:'100%',\r\n            display:'flex', flexDirection:'column', justifyContent:'space-between',\r\n            fontFamily:'gameboy', fontSize: getFontSize(6),\r\n            backgroundColor:'white'\r\n        }\r\n\r\n        return(\r\n            <div id=\"battleIntro\" style={style}>\r\n                <div style={{position:'relative', height: '35%', backgroundColor: character_bg}}>\r\n                    <div  className=\"battleIntroRL\" style={{position:'absolute', top: '30%', width: '120px', height: '120px', ...centerBgImg(`${this.props.npc.src}/head.png`), backgroundColor: character_bg, }}></div>\r\n                </div>\r\n                <div style={{position:'relative', height: '30%', display: 'flex', alignItems:'center', justifyContent:'center'}}>\r\n                    <div className=\"battleIntroVS\">\r\n                        VS\r\n                    </div>\r\n                </div>\r\n                <div style={{position:'relative', height: '35%', backgroundColor: character_bg}}>\r\n                    <div  className=\"battleIntroLR\" style={{position:'absolute', top: '30%', width: '120px', height: '120px', ...centerBgImg(`${this.props.player.src}/head.png`), backgroundColor: character_bg}} />\r\n                </div> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass BattleArena extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleMoveSelect = this.handleMoveSelect.bind(this);\r\n    }\r\n\r\n    handleMoveSelect(move) {\r\n        var moveelements = document.getElementsByClassName(\"move\");\r\n        for(var i = 0; i < moveelements.length; i++) {\r\n            moveelements[i].disabled = true;\r\n        }\r\n\r\n        this.props.submitMove(move);\r\n        setTimeout(function() {\r\n            var moveelements = document.getElementsByClassName(\"move\");\r\n            for(var i = 0; i < moveelements.length; i++) {\r\n                moveelements[i].disabled = false;\r\n            }\r\n        }, 1100);\r\n    }\r\n\r\n    render() {\r\n            return(\r\n                <div  id=\"battle\" style={{position:'absolute', width:'100%', height:'100%', display:'flex', flexDirection:'column', justifyContent:'space-between', backgroundImage: 'repeating-linear-gradient(#def3c6, #def3c6 20px, #e7f6db 20px, #e7f6db 23px)'}}>\r\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', width:'100%', height: '25%', marginBottom: '5px'}}>\r\n                         <PlayerInfo player={this.props.battle.player} reverse={false} blink={this.props.battle.lastWinner===-1} />    \r\n                         <PlayerInfo player={this.props.battle.npc} reverse={true} blink={this.props.battle.lastWinner===1}/>\r\n                    </div>\r\n                    <div style={{display: 'flex', flexDirection: 'row', justifyContent:'space-between', width:'100%', height: '50%', marginBottom: '5px'}}>\r\n                        <MoveDiv move={this.props.battle.player.lastMove} reverse={false} blink={this.props.battle.lastWinner===-1}/>\r\n                        <MoveDiv move={this.props.battle.npc.lastMove} reverse={true} blink={this.props.battle.lastWinner===1}/>\r\n                    </div>\r\n                    <div style={{display: 'flex', width: '100%', height: '25%'}}>\r\n                        <div style={{display:'flex', flexDirection:'column', justifyContent:'space-around', flexWrap:'nowrap' ,width: '30%', backgroundColor:'#f9f6d6', ...solidBorder(8, '#4d655e', 10)}}>\r\n                            <button className=\"move\" onClick={() => this.handleMoveSelect(ROCK)} style={{height:'32%',  fontFamily:'gameboy_lg', fontSize: getFontSize(3)}}>Rock</button>\r\n                            <button className=\"move\" onClick={() => this.handleMoveSelect(PAPER)} style={{height:'32%', fontFamily:'gameboy_lg', fontSize: getFontSize(3)}}>Paper</button>\r\n                            <button className=\"move\" onClick={() => this.handleMoveSelect(SCISSORS)} style={{height:'32%', fontFamily:'gameboy_lg', fontSize: getFontSize(3)}}>Scissors</button>\r\n                        </div>\r\n                        <Summary summary={this.props.battle.summary} />\r\n                    </div>\r\n                </div> \r\n            );\r\n    }\r\n}\r\n\r\n\r\n\r\nclass Battle extends Component {\r\n\r\n    componentDidMount() {\r\n        if(this.props.battle.inIntro){\r\n            setTimeout(function() {\r\n                if(this.props) \r\n                    this.props.endIntro();\r\n            }.bind(this), 3000);\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        let UI_COMPONENT = null, AUDIO_COMPONENT = null;\r\n        if(this.props.battle.inIntro) {\r\n               UI_COMPONENT =  <BattleIntro player={this.props.battle.player} npc={this.props.battle.npc} />;\r\n               AUDIO_COMPONENT = <ReactHowler src={this.props.battle.music} loop={true} html5={false} volume={0.5}/>;\r\n\r\n        } else if(this.props.battle.inEnd) {\r\n                UI_COMPONENT = <BattleEnd player={this.props.battle.player} winner={this.props.battle.finalWinner} closeBattle={this.props.closeBattle} />;\r\n                AUDIO_COMPONENT = <ReactHowler src={BATTLE_END_MUSIC} volume={0.3}/>;\r\n        \r\n        } else {\r\n               UI_COMPONENT = <BattleArena battle={this.props.battle} submitMove={this.props.submitMove} />;\r\n               AUDIO_COMPONENT = <ReactHowler src={this.props.battle.music} loop={true} html5={false} volume={0.5}/>;\r\n        } \r\n        return(\r\n            <div>\r\n                {UI_COMPONENT}\r\n                {AUDIO_COMPONENT}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Battle);","import React, { Component } from 'react';\r\nimport { BATTLE_NUM_GANG_MEMBERS} from '../helpers/constants';\r\nimport {connect} from 'react-redux';\r\nimport { solidBorder, centerBgImg, getRounded, getKeyDiv, getLevelColor, getWinPercColor, getFontSize } from '../helpers/funcs';\r\nimport { SaveGameToDisk } from '../redux/ActionCreators';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        player: state.player,\r\n    });\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n    return({\r\n        saveGame: () => { dispatch(SaveGameToDisk()); },\r\n    });\r\n}\r\n\r\nconst bgStyle = (bgcolor, bordercolor='white') => {\r\n    return({\r\n        padding: '5px',\r\n        backgroundColor: bgcolor,\r\n        ...solidBorder(2, bordercolor , 5),\r\n    });\r\n}\r\n\r\nconst AwareComponent = (props) => {\r\n\r\n    let instruction = props.player.nearbyNPC!==null? <div>{isMobile? getKeyDiv(\"TAP\"): getKeyDiv(\"SPACE\")} to talk</div> : null;\r\n    instruction = props.player.nearbyGameObj!==null? <div>{getKeyDiv(\"P\")} to pickup</div> : instruction;\r\n\r\n    return(\r\n        <div id=\"aware\" style={{display:props.player.interacting?'none':'block'}}>\r\n            {instruction}\r\n        </div>\r\n    );\r\n}\r\n\r\nclass Stats extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSaveBtnClick = this.handleSaveBtnClick.bind(this);\r\n    }\r\n\r\n\r\n    handleSaveBtnClick() {\r\n        this.props.saveGame();\r\n    }\r\n\r\n    render() {\r\n\r\n        const bg_color = 'lightgrey';\r\n\r\n        const style = {\r\n            width:  this.props.width,\r\n            height: 80,\r\n            margin:  'auto',\r\n            marginTop: '20px',\r\n            borderLeft:'10px solid white',\r\n            borderRight:'10px solid white',\r\n            borderTop: '5px solid white',\r\n            backgroundColor: bg_color,\r\n            color: 'black',\r\n            fontFamily: 'gameboy',\r\n            fontSize: getFontSize(1.5),\r\n            display:'flex',\r\n            justifyContent: 'space-between',\r\n            alignItems:'center',\r\n        }\r\n\r\n        const level = this.props.player.battle.level;\r\n        const winperc = getRounded(this.props.player.battle.won*100/(this.props.player.battle.won + this.props.player.battle.lost))\r\n\r\n        return(\r\n            <div id=\"stats\" style={style}>\r\n                <div style={{width:'55%', display:'flex', alignItems:'center'}}>\r\n                    <div style={{width:80, height:80, ...centerBgImg( `${this.props.player.skin.src}/head.png`), backgroundColor:bg_color}}/>\r\n                    <div style={{display:'flex', flexDirection:'column', justifyContent:'center'}}>\r\n                        <div style={{margin:'5px', alignSelf:'flex-start'}}> {this.props.player.name} </div>\r\n                        <div style={{display:'flex'}}>\r\n                            <div style={{margin:'5px', alignSelf:'flex-end', ...bgStyle(getLevelColor(level))}}> Lvl:{level} </div>\r\n                            <div style={{margin:'5px', alignSelf:'flex-end', ...bgStyle(getLevelColor(level))}}> Exp:{this.props.player.battle.exp} </div>\r\n                            <div style={{margin:'5px', alignSelf:'flex-end', ...bgStyle(getWinPercColor(winperc))}}> Win%:{winperc}</div>\r\n                            <div style={{margin:'5px', alignSelf:'flex-end', ...bgStyle('orange')}}>{`Tribes Defeated: ${Object.keys(this.props.player.battle.defeatedGangMembers).length}/${BATTLE_NUM_GANG_MEMBERS}`}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style={{width:'35%', height:'70%', ...solidBorder(2, '#DB5435', 10), backgroundColor:'#639AA1', color:'white', display:'flex', flexDirection:'column', justifyContent:'center', paddingLeft:'10px'}}>\r\n                    <AwareComponent player={this.props.player}/>\r\n                </div>\r\n                <div style={{display:'flex', alignItems: 'center'}}>\r\n                    <button disabled={(this.props.player.isAnimating || this.props.player.frozen || this.props.player.inBattle || this.props.player.interacting)} \r\n                            style={{margin:'5px', ...bgStyle(\"#FD974F\" , '#57ABB3'), backgroundColor: '#FD974F', fontFamily:'gameboy'}} onClick={this.handleSaveBtnClick}><FontAwesomeIcon style={{color:\"white\", marginBottom:'4px'}} size=\"2x\" icon={faSave}/> Save\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Stats);","import React, { Component } from 'react';\r\nimport { TILE_SIZE } from '../helpers/constants';\r\nimport { connect } from 'react-redux';\r\nimport { mapToViewport, getLevelColor } from '../helpers/funcs';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        player: state.player,\r\n    });\r\n}\r\n\r\nconst PlayerSprite = (props) => {\r\n    \r\n    const position = mapToViewport(props.player.position, props.viewport.start);\r\n    const playerStyle = {\r\n        position: 'absolute',\r\n        width: props.player.skin.width,\r\n        height: props.player.skin.height, \r\n        backgroundImage: `url('${props.player.skin.src}/sprite.png')`,\r\n        left: isNaN(position[0] + TILE_SIZE/2 - props.player.skin.width/2) ? 0: position[0] + (TILE_SIZE/2 - props.player.skin.width/2),\r\n        top: isNaN(position[1] + TILE_SIZE/2 - props.player.skin.height/2) ? 0: position[1] + (TILE_SIZE/2 - props.player.skin.height/2),\r\n        backgroundPosition: `${props.player.walkIndex * props.player.skin.width}px ${props.player.spriteLocation * props.player.skin.height}px`,\r\n        zIndex: 2,\r\n    };\r\n\r\n    const playermarkerstyle = {\r\n        position: 'absolute',\r\n        width: 25,\r\n        height: 25, \r\n        left: position[0],\r\n        top:  position[1],\r\n        transform: 'translate(110%, -60%)',\r\n        display: !props.player.interacting? 'block': 'none',\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div id=\"player\" style={playerStyle} />\r\n            <div style={playermarkerstyle}>\r\n                <FontAwesomeIcon className=\"wind\" style={{color:getLevelColor(props.player.battle.level), position:'absolute', left:'50%', top:'50%'}} icon={faCaretDown} size=\"2x\"/>\r\n            </div>\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nclass Player extends Component {\r\n\r\n    \r\n    render() {\r\n\r\n        return(\r\n            <PlayerSprite player={this.props.player} viewport={this.props.viewport}/>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(Player);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSkull, faExclamation, faEnvelope } from '@fortawesome/free-solid-svg-icons'\r\nimport { UpdateNPCPosition } from '../redux/ActionCreators';\r\nimport { TILE_SIZE, GANG_MEMBER, BOSS } from '../helpers/constants';\r\nimport { customSetInterval, intervalList, clearIntervals, getLevelColor, solidBorder } from '../helpers/funcs';\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        npc: state.npc,\r\n    });\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return({\r\n        updateNPCPosition: function(){ dispatch(UpdateNPCPosition(this.props.self.id));},\r\n    });\r\n}\r\n\r\nclass NPC extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.battlerMarkerIcon = faExclamation;\r\n        if(this.props.self.battle) {\r\n            if(this.props.self.battlerType===BOSS || this.props.self.battlerType===GANG_MEMBER)\r\n                this.battlerMarkerIcon = faSkull;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        customSetInterval(this.props.updateNPCPosition.bind(this), this.props.self.moveInterval, this.props.self.id);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(!this.props.frozen) {\r\n            if(!(\"_\"+this.props.self.id in intervalList)) {\r\n                customSetInterval(this.props.updateNPCPosition.bind(this), this.props.self.moveInterval, this.props.self.id);\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n\r\n        const npcStyle = {\r\n            position: 'absolute',\r\n            width: this.props.self.skin.width,\r\n            height: this.props.self.skin.height, \r\n            backgroundImage: `url('${this.props.self.skin.src}/sprite.png')`,\r\n            left: this.props.self.position[0] + ((TILE_SIZE/2) - (this.props.self.skin.width/2)),\r\n            top: this.props.self.position[1] + ((TILE_SIZE/2) - (this.props.self.skin.height/2)),\r\n            backgroundPosition: `${this.props.self.walkIndex * this.props.self.skin.width}px ${this.props.self.spriteLocation * this.props.self.skin.height}px`,\r\n        }\r\n\r\n        const battlemarkerstylebase = {\r\n            position: 'absolute',\r\n            width: 25,\r\n            height: 25, \r\n            left: this.props.self.position[0],\r\n            top: this.props.self.position[1],\r\n            transform: 'translate(100%, -100%)',\r\n            display: !this.props.self.interacting && this.props.self.battle && this.props.self.defeatedCount===0 ? 'block':'none',\r\n        }\r\n\r\n        const messagestylebase = {\r\n            position: 'absolute',\r\n            width: 25,\r\n            height: 25, \r\n            left: this.props.self.position[0],\r\n            top: this.props.self.position[1],\r\n            transform: 'translate(100%, -100%)',\r\n            display: !this.props.self.interacting && !this.props.self.talkFlag? 'block':'none',\r\n        }\r\n    \r\n        return(\r\n            <div>\r\n                <div id={`NPC${this.props.self.id}`} style={npcStyle}/>\r\n                <div className=\"blink\" style={battlemarkerstylebase}>\r\n                    <div style={{position:'relative', width:'100%', height:'100%', textAlign:'center',backgroundColor:getLevelColor(this.props.self.level), ...solidBorder(1,'black',5)}}><FontAwesomeIcon icon={this.battlerMarkerIcon}/></div>\r\n                </div>\r\n                <div className=\"blink\" style={messagestylebase}>\r\n                    <FontAwesomeIcon style={{color:\"white\",  position:'absolute', left:'50%', top:'50%', transform: 'translate(-50%, -50%)'}} size=\"lg\" icon={faEnvelope}/>\r\n                </div>\r\n            </div> \r\n        ); \r\n    }  \r\n}    \r\n\r\nclass NPCManager extends Component {\r\n\r\n    componentWillUnmount() {\r\n        clearIntervals();\r\n    }\r\n    \r\n    render() {\r\n        const NPCObj = this.props.npc.list.map( npc => <NPC self={npc}  key={npc.id} updateNPCPosition={this.props.updateNPCPosition} frozen={this.props.npc.frozen}/> );\r\n\r\n        return(\r\n            <ul id=\"NPCList\">\r\n                {NPCObj}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(NPCManager);","import React, { Component } from 'react';\r\nimport { TILE_SIZE } from '../helpers/constants';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        gameobjects: state.gameobjects,\r\n    });\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return({\r\n\r\n    });\r\n}\r\n\r\n    \r\nconst GameObject = (props) => {\r\n    const objStyle = {\r\n        position: 'absolute',\r\n        width: props.self.type.width,\r\n        height: props.self.type.height, \r\n        backgroundImage: `url('${props.self.type.src}')`,\r\n        left: props.self.position[0] + (TILE_SIZE/2 - props.self.type.width/2),\r\n        top: props.self.position[1] + (TILE_SIZE/2 - props.self.type.height/2),\r\n        backgroundPosition: `${props.self.type.srcpos[0]}px ${props.self.type.srcpos[1]}px`,\r\n        backgroundSize: 'contain',\r\n        transform: `rotate(${props.self.rotate}deg)`\r\n    }\r\n\r\n    return(\r\n        <div id={`GObj${props.self.id}`} className={props.self.type.effects} style={objStyle}/>\r\n    ); \r\n}      \r\n\r\nclass GameObjectManager extends Component {\r\n    \r\n    render() {\r\n        const GameObj = this.props.gameobjects.map( gameobject => <GameObject self={gameobject}  key={gameobject.id} /> );\r\n\r\n        return(\r\n            <ul id=\"GameObjList\">\r\n                {GameObj}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(GameObjectManager);","import React, { Component } from 'react';\r\nimport NPCManager from './NPCManagerComponent';\r\nimport GameObjectManager from './GameObjectManagerComponent';\r\nimport ReactHowler  from 'react-howler';\r\n\r\n\r\n\r\nclass Map extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"map\" ref={map => this.map = map} style={{width: this.props.map.width,\r\n                        height: this.props.map.height, \r\n                        left: `${this.props.viewport.start[0]}px`,\r\n                        top: `${this.props.viewport.start[1]}px`,\r\n                        position: \"absolute\",\r\n                        backgroundImage: `url('${this.props.map.src}')`,\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundColor: 'black', }}>\r\n                <GameObjectManager />\r\n                <NPCManager />\r\n                <ReactHowler src={this.props.map.audioSrc} loop={true} volume={0.4} html5={false}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Map;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getKeyDiv, getFontSize } from '../helpers/funcs';\r\nimport { isMobile } from 'react-device-detect';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return({\r\n        dialog: state.dialog,\r\n    });\r\n}\r\n\r\nconst FONT_ANIMATION = 25;\r\n\r\nclass Dialog extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.animateConversation = this.animateConversation.bind(this);\r\n        this.timeout = null;\r\n        this.next = isMobile? \"TAP\": \"SPACE\";\r\n    }\r\n\r\n    animateConversation(speakerIdx, name, content, idx, objref) {\r\n        \r\n        const animate = function() {\r\n            if(idx>content.length) {\r\n                return;\r\n            }\r\n            if(speakerIdx!==this.props.speakerIdx) {\r\n                if(speakerIdx===0) {\r\n                    objref.innerHTML = name + \": \" + content;\r\n                    return;\r\n                } else {\r\n                    objref.innerHTML = \"\";\r\n                    return;\r\n                }\r\n            }\r\n            objref.innerHTML = name + \": \" + content.substring(0, idx);\r\n            idx++;\r\n            this.timeout = setTimeout(animate, FONT_ANIMATION);\r\n        }.bind(this);\r\n        animate();\r\n    }\r\n\r\n    cleanBoard() {\r\n        this.p1.innerHTML = \"\";\r\n        this.p2.innerHTML = \"\";\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if(this.props.isOpen) {\r\n            if(this.props.speakerIdx===0) {\r\n                const person = this.props.person1;\r\n                this.cleanBoard();\r\n                this.animateConversation(0, person.name, person.dialogs[this.props.dialogIdx], 1, this.p1);\r\n            } else {\r\n                const person = this.props.person2;\r\n                this.animateConversation(1, person.name, person.dialogs[this.props.dialogIdx], 1, this.p2);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeout);\r\n    }\r\n\r\n    render() {\r\n\r\n        let POS = {};\r\n        if(this.props.position===\"top\") {\r\n            POS[\"top\"] = 0;\r\n        } else {\r\n            POS[\"bottom\"] = 0;\r\n        }\r\n\r\n        const style = {\r\n            position: 'absolute',\r\n            height: '25%',\r\n            border: '10px solid #00b4bc',\r\n            left: 0,\r\n            right: 0,\r\n            borderRadius: '10px',\r\n            padding: '5px',\r\n            backgroundColor: '#f7f8f7',\r\n            color: '#5d5f5b',\r\n            fontSize: getFontSize(2),\r\n            fontFamily: 'gameboy_lg',\r\n            display: this.props.isOpen? 'block': 'none',\r\n            overflowWrap: 'break-word',\r\n            ...POS,\r\n        };\r\n\r\n        return(\r\n            <div id=\"conversation\" style={style}>\r\n                <div style={{position:\"relative\", width:'100%', height:'100%'}}>\r\n                    <p ref={p1 => this.p1 = p1}></p>\r\n                    <p ref={p2 => this.p2 = p2}></p>\r\n                    <div className='blink' style={{position:'absolute', right:20, bottom:20}}>{getKeyDiv(this.next)}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass ConversationDisplay extends Component {\r\n\r\n    render() {\r\n        const dialog = this.props.dialog;\r\n        return(\r\n            <Dialog isOpen={dialog.isOpen}\r\n                    position={dialog.position}\r\n                    person1={dialog.person1}\r\n                    person2={dialog.person2}\r\n                    dialogIdx={dialog.dialogIdx}\r\n                    speakerIdx={dialog.speakerIdx}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(ConversationDisplay);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { EATABLE, HEALER, CURRENCY } from '../helpers/constants';\r\nimport { GAMEOBJECTS } from '../data/gameobjects';\r\nimport { getFontSize } from '../helpers/funcs';\r\n\r\n\r\n\r\nfunction GetInventoryItemCounts(list) {\r\n    let countObj = {}, item;\r\n    for(item of list) {\r\n        if(item.type.name in countObj)\r\n            countObj[item.type.name]+=1;\r\n        else\r\n            countObj[item.type.name] = 1;\r\n    }\r\n    return countObj;\r\n}\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        inventory: state.inventory,\r\n    })\r\n}\r\n\r\nconst InventoryItem = (props) => {\r\n\r\n    const divSize = 120;\r\n\r\n    const imageStyle = {\r\n        backgroundImage: `url('${props.self.src}')`,\r\n        backgroundPosition: `${props.self.srcpos[0]}px ${props.self.srcpos[1]}px`,\r\n        width: props.self.width,\r\n        height: props.self.height,\r\n        position: 'absolute',\r\n        left: divSize/2 - props.self.width/2,\r\n        top: divSize/2 - props.self.height/2,\r\n    };\r\n\r\n    return(\r\n        <div className=\"inventorybtn\">\r\n            <div style={imageStyle}/>\r\n            <p style={{fontSize: getFontSize(2), position: 'absolute', margin: '5px', left: 5, bottom: 5}}>{props.count}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst InventoryRow = (props) => {\r\n\r\n    const countObj = GetInventoryItemCounts(props.inventorylist);\r\n    const validgameobjects = GAMEOBJECTS.filter(gameobj => gameobj.type === props.type);\r\n\r\n    const rendergameobjects = validgameobjects.map( gameobj => <InventoryItem self={gameobj} key={gameobj.id} count={ (gameobj.name in countObj)? countObj[gameobj.name]:0} />);\r\n\r\n    const style = {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        margin: '5px',\r\n        padding: '6px',\r\n        backgroundColor: 'forestgreen',\r\n        boxShadow: 'inset 0 0 5px black',\r\n        borderRadius: '10px'\r\n    };\r\n\r\n    return(\r\n        <div style={style}>\r\n            <div style={{ writingMode: 'vertical-lr', textOrientation: 'sideways-right', margin:'auto 5px', padding: '5px' }} >{props.type}</div>\r\n            {rendergameobjects}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst InventoryDialog = (props) => {\r\n\r\n    const inventoryStyle = {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        top: '50%',\r\n        transform: 'translate(-50%,-50%)',\r\n        backgroundColor: 'darkgreen',\r\n        border: '5px solid white',\r\n        borderRadius: '10px',\r\n        boxShadow: 'inset 0 0 5px black',\r\n        fontFamily: 'gameboy',\r\n        color: 'white',\r\n        padding: \"5px\",\r\n        zIndex: 5,\r\n        display: props.inventory.isOpen? 'inline-block' : 'none',\r\n    };\r\n\r\n    return(\r\n            <div id=\"inventory\" style={inventoryStyle}>\r\n                <div style={{ fontSize: getFontSize(2), padding: '5px', margin:'5px', textAlign: 'center'}}>\r\n                    <p style={{ fontSize: getFontSize(2), padding: '3px', margin:'0px', display:'inline-block', border: '2px groove white'}}>Inventory</p>\r\n                </div>\r\n                <div style={{display: 'flex', padding: '5px', flexDirection: 'column', justifyContent: 'center'}}>\r\n                    <InventoryRow type={HEALER} inventorylist={props.inventory[HEALER]} />\r\n                    <InventoryRow type={EATABLE} inventorylist={props.inventory[EATABLE]} />\r\n                    <InventoryRow type={CURRENCY} inventorylist={props.inventory[CURRENCY]} />\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\nclass Inventory extends Component {\r\n\r\n    render() {\r\n        return( \r\n            <InventoryDialog inventory={this.props.inventory} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(Inventory);\r\n","import React from 'react';\r\nimport { solidBorder, getFontSize } from '../helpers/funcs';\r\nimport { faCheckSquare, faWindowClose } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst bgStyle = (bgcolor, bordercolor) => {\r\n    return({\r\n        padding: '5px',\r\n        backgroundColor: bgcolor,\r\n        ...solidBorder(2, bordercolor, 5),\r\n    });\r\n}\r\n\r\nconst CustomModal = (props) => {\r\n    const style = {\r\n        position: 'absolute',\r\n        width: 600,\r\n        height: 250,\r\n        ...solidBorder(5, 'grey', 5), \r\n        left:'50%',\r\n        top:'50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        zIndex: 5,\r\n        backgroundColor:'whitesmoke',\r\n        display: props.show? \"flex\": \"none\",\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n        fontFamily: 'gameboy',\r\n        fontSize: getFontSize(2.5),\r\n    };\r\n\r\n    return(\r\n        <div style={style}>\r\n            <p style={{color:'black'}}>Exit to Main Menu?</p>\r\n            <div style={{display:'flex', justifyContent:'space-between'}}>\r\n                <button style={{width:'230px',  fontFamily:'gameboy', fontSize: getFontSize(2.3), ...bgStyle('MediumSeaGreen', 'green'), margin:'10px'}} onClick={props.confirmLink}>\r\n                    Confirm <FontAwesomeIcon style={{color:\"white\"}} size=\"1x\" icon={faCheckSquare}/></button>\r\n                <button style={{width:'230px', fontFamily:'gameboy', fontSize: getFontSize(2.3), ...bgStyle('OrangeRed', 'red'), margin:'10px'}} onClick={props.cancelLink}>\r\n                    Cancel <FontAwesomeIcon style={{color:\"white\"}} size=\"1x\" icon={faWindowClose}/></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CustomModal;","import React, {Component} from 'react';\r\nimport Player from './PlayerComponent';\r\nimport Map from './MapComponent';\r\nimport ConversationDisplay from './ConversationDisplayComponent';\r\nimport Inventory from './InventoryComponent';\r\nimport { UpdatePlayerPosition, PickupGameObject, ToggleInventory, HandleConversation } from '../redux/ActionCreators';\r\nimport { VALID_KEYCODES, ARROW_KEYCODES, SPACE_KEY, PICKUP_KEY, INVENTORY_KEY, ESC_KEY, BEEP_3_SOUND, KEYCODES } from '../helpers/constants';\r\nimport CustomModal from './CustomModalComponent';\r\nimport { playSoundEffect } from '../helpers/funcs';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return({\r\n        updatePlayerPosition: (keyCode) => { dispatch(UpdatePlayerPosition(keyCode)); },\r\n        handleConversation: () => { dispatch(HandleConversation()); },\r\n        pickupObject: () => { dispatch(PickupGameObject()); },\r\n        toggleInventory: () => { dispatch(ToggleInventory()); },\r\n    });\r\n}\r\n\r\nclass World extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.touchstartX = null;\r\n        this.touchstartY = null;\r\n        this.touchendX = null;\r\n        this.touchendY = null;\r\n\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n        this.handleTouchStart = this.handleTouchStart.bind(this);\r\n        this.handleTouchMove = this.handleTouchMove.bind(this);\r\n        this.handleTouchEnd = this.handleTouchEnd.bind(this);\r\n        this.toggleExitModalState = this.toggleExitModalState.bind(this);\r\n        this.state = {\r\n            showExitModal: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n        window.addEventListener('touchstart', this.handleTouchStart, false);\r\n        window.addEventListener('touchmove', this.handleTouchMove, false);\r\n        window.addEventListener('touchend', this.handleTouchEnd, false);\r\n    }\r\n    \r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n        window.removeEventListener('touchstart', this.handleTouchStart);\r\n        window.removeEventListener('touchmove', this.handleTouchMove);\r\n        window.removeEventListener('touchend', this.handleTouchEnd);\r\n\r\n    }\r\n\r\n    toggleExitModalState() {\r\n        playSoundEffect(BEEP_3_SOUND);\r\n        this.setState({\r\n            showExitModal: !this.state.showExitModal,\r\n        })\r\n    }\r\n\r\n\r\n    handleTouchStart(event) {\r\n        event.preventDefault();\r\n        this.touchstartX = this.touchendX = event.touches[0].clientX;\r\n        this.touchstartY = this.touchendY = event.touches[0].clientY;\r\n    }\r\n\r\n    handleTouchMove(event) {\r\n        event.preventDefault();\r\n        this.touchendX = event.touches[0].clientX;\r\n        this.touchendY = event.touches[0].clientY;\r\n        var xDiff = this.touchendX - this.touchstartX, \r\n            yDiff = this.touchendY - this.touchstartY;\r\n        if(Math.abs(xDiff) > Math.abs(yDiff)) {\r\n            if(xDiff > 0) {\r\n                this.props.updatePlayerPosition(KEYCODES.right);\r\n            } else if(xDiff < 80) {\r\n                this.props.updatePlayerPosition(KEYCODES.left);\r\n            }\r\n        } else {\r\n            if(yDiff > 0) {\r\n                this.props.updatePlayerPosition(KEYCODES.down);\r\n            } else if(yDiff < 0) {\r\n                this.props.updatePlayerPosition(KEYCODES.up);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleTouchEnd() {\r\n        var xDiff = Math.abs(this.touchendX - this.touchstartX), \r\n            yDiff = Math.abs(this.touchendY - this.touchstartY);\r\n        if(xDiff===0 && yDiff===0)\r\n            this.props.handleConversation();\r\n    }\r\n\r\n    handleKeyDown(event) {\r\n        var keyCode = event.keyCode;\r\n        //console.log(keyCode);\r\n        if(VALID_KEYCODES.includes(keyCode)) {\r\n            //console.log(keyCode);\r\n            event.preventDefault();\r\n            event.stopImmediatePropagation();\r\n            if(ARROW_KEYCODES.includes(keyCode)) {\r\n                this.props.updatePlayerPosition(keyCode);\r\n            } else if(SPACE_KEY.includes(keyCode)) {\r\n                this.props.handleConversation();\r\n            } else if(PICKUP_KEY.includes(keyCode)) {\r\n                this.props.pickupObject();\r\n            } else if(INVENTORY_KEY.includes(keyCode)) {\r\n                this.props.toggleInventory();\r\n            } else if(ESC_KEY.includes(keyCode)) {\r\n                this.toggleExitModalState();\r\n            }\r\n        } \r\n    }\r\n\r\n   \r\n\r\n\r\n    render() {\r\n        \r\n        const style = {\r\n            position: 'relative',\r\n            margin:  'auto',\r\n            width: this.props.width,\r\n            height: this.props.height,\r\n            border: '10px solid white',\r\n            overflow: 'hidden',\r\n            backgroundColor: 'black',\r\n        }\r\n\r\n        return(\r\n            <div ref={world => this.world = world} id=\"world\" style={style}>\r\n                    <Map map={this.props.map} viewport={this.props.viewport}/>\r\n                    <Player viewport={this.props.viewport} />\r\n                    <ConversationDisplay />\r\n                    <Inventory />\r\n                    <CustomModal show={this.state.showExitModal} confirmLink={this.props.handleBack} cancelLink={this.toggleExitModalState} />\r\n            </div>\r\n        );\r\n        }\r\n    }\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(World);","import React, {Component} from 'react';\r\nimport { AddMap, LoadGameFromDisk, InitViewportAction  } from '../redux/ActionCreators';\r\nimport { level } from '../data/Levels/1/index';\r\nimport { connect } from 'react-redux';\r\nimport Loading from './LoadingComponent';\r\nimport Battle from './BattleComponent';\r\nimport Stats from './StatsComponent';\r\nimport World from './WorldComponent';\r\n\r\nconst mapStatetoProps = state => {\r\n    return({\r\n        map: state.map,\r\n        viewport: state.viewport,\r\n        battle: state.battle,\r\n        statemanager: state.statemanager,\r\n    });\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => {\r\n    return({\r\n        loadMap: (level) => { dispatch(AddMap(level)); },\r\n        loadGameFromDisk: () => { dispatch(LoadGameFromDisk()); },\r\n        initViewport: (dims) => { dispatch(InitViewportAction(dims)); },\r\n    });\r\n}\r\n\r\nclass Game extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.initViewport([this.props.width, this.props.height]);\r\n        if(!this.props.loadgame)\r\n            this.props.loadMap(level);\r\n        else {\r\n            this.props.loadGameFromDisk()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        \r\n        const style = {\r\n            position: 'relative',\r\n            margin:  'auto',\r\n            width: this.props.width,\r\n            height: this.props.height,\r\n            border: '10px solid white',\r\n            overflow: 'hidden',\r\n            backgroundColor: 'black',\r\n        }\r\n\r\n        if(this.props.map.isLoading) {\r\n            return(\r\n                <div id=\"game\"  style={{...style, backgroundColor:'SlateGrey', marginTop:'60px'}}>\r\n                    <Loading msg=\"Loading Map\"/>\r\n                </div>\r\n            );\r\n        } else if (this.props.statemanager.savingState) {\r\n            return(\r\n                <div id=\"game\"  style={{...style, backgroundColor:'SlateGrey',marginTop:'60px'}}>\r\n                    <Loading msg=\"Freezing state\"/>\r\n                </div>\r\n            );\r\n        } else if(this.props.battle.isOpen) {\r\n            return(\r\n                <div id=\"game\"  style={{...style, marginTop:'60px'}}>\r\n                    <Battle battle={this.props.battle} />\r\n                </div> \r\n            );\r\n        } \r\n        else {\r\n            return(\r\n                <React.Fragment>\r\n                    <Stats width={this.props.width} />\r\n                    <World width={this.props.width} height={this.props.height} map={this.props.map} viewport={this.props.viewport} handleBack={this.props.handleBack} />\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps, mapDispatchtoProps)(Game);","import React, {Component} from 'react';\r\nimport { SAVED_GAME, PROPS_PATH } from '../helpers/constants';\r\nimport { solidBorder, centerBgImg, getFontSize } from '../helpers/funcs';\r\n\r\n\r\n\r\nconst checkSavedGame = () => {\r\n    try {\r\n        const serializedState = localStorage.getItem(SAVED_GAME);\r\n        return serializedState!==null;\r\n      } catch (err) {\r\n        alert(\"Issue accessing local storage. There will be problem in saving the game!\");\r\n        return false;\r\n      }\r\n}\r\n\r\n\r\n\r\nconst MenuBtn = (props) => {\r\n    \r\n    const basestyle = {\r\n        width:'350px',\r\n        padding: '10px',\r\n        fontFamily: 'pixel',\r\n        fontSize: getFontSize(2),\r\n        margin:'10px',\r\n        backgroundColor: '#FD974F',\r\n        ...solidBorder(2, '#57ABB3', 5),\r\n    };\r\n\r\n    const disbaledstyle = {\r\n        ...basestyle,\r\n        color: 'black',\r\n        opacity: '0.5',\r\n    };\r\n\r\n    if(props.disabled) {\r\n        return(\r\n            <button disabled style={disbaledstyle}>{props.title}</button>\r\n        )\r\n    } else {\r\n        return(\r\n            <button onClick={function() {props.onClick();}} style={basestyle}>{props.title}</button>\r\n        )\r\n    }\r\n}\r\n\r\nclass MainMenu extends Component {\r\n    render() {\r\n\r\n        const style = {\r\n            position: 'absolute',\r\n            left: 0, top: 0,\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent:'center',\r\n            alignItems: 'center',\r\n        }\r\n\r\n        return(\r\n            <div style={{...style, width: this.props.width, height: this.props.height}}>\r\n                <div style={{position:'relative', width:'100%', height: '60%', overflow:'hidden'}}>\r\n                    <div className=\"animateTitle\" style={{position:'absolute',width:\"100%\", height:\"100%\",...centerBgImg(`${PROPS_PATH}/title.png`, null, 'auto')}}/>\r\n                </div>\r\n                <div className=\"showMenu\" style={{position:'relative', width:'100%', height: '40%', display:'flex', flexDirection:'column', alignItems:'center', opacity:0}}>\r\n                    <MenuBtn title=\"Start New Game\" disabled={false} onClick={this.props.startNewGame}/>\r\n                    <MenuBtn title=\"Load Game\" disabled={!checkSavedGame()} onClick={this.props.loadGame}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainMenu;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport { centerBgImg, solidBorder, playSoundEffect, getFontSize } from '../helpers/funcs';\r\nimport { SetPlayerInfoAction, StartNewJourneyAction } from '../redux/ActionCreators';\r\nimport { BEEP_3_SOUND, PROPS_PATH } from '../helpers/constants';\r\n\r\nconst SELECT_URL = `${PROPS_PATH}/playerselect/`;\r\nconst NAME_MIN = 3, NAME_MAX = 15;\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return({\r\n        initPlayerInfo: ({name, character}) => { dispatch(SetPlayerInfoAction(name, character)) },\r\n        startNewJourney: () => { dispatch(StartNewJourneyAction()); },\r\n    });\r\n}\r\n\r\nconst checkName = (name) => {\r\n    var pattern = /^[a-z]{3,15}$/i;\r\n    return pattern.test(name);\r\n}\r\n\r\nconst CharacterPane = (props) => {\r\n    return(\r\n        <div style={{width:220, height:300}} onClick={function(){ props.click(props.option);}} >\r\n            <button className={props.option===props.selected?\"selected\":\"\"}  style={{width:'100%', height:'100%', ...centerBgImg(`${SELECT_URL}${props.option}.png`, props.bgColor, 'crop')}}></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass PlayerSelect extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleCharacterClick = this.handleCharacterClick.bind(this);\r\n        this.handleNameChange = this.handleNameChange.bind(this);\r\n        this.validateAndSend = this.validateAndSend.bind(this);\r\n        this.state = {\r\n            character: null,\r\n            name: \"\",\r\n            errmsg:\"\"\r\n        }\r\n    }\r\n\r\n    handleNameChange(event) {\r\n        playSoundEffect(BEEP_3_SOUND);\r\n        this.setState({\r\n            name: event.target.value,\r\n            errmsg:\"\"\r\n        })\r\n    }\r\n\r\n    handleCharacterClick(option) {\r\n        playSoundEffect(BEEP_3_SOUND);\r\n        this.setState({\r\n            character: option,\r\n            errmsg:\"\"\r\n        });\r\n    }\r\n\r\n    validateAndSend() {\r\n        if(this.state.character===null) {\r\n            this.setState(\r\n                { errmsg: \"Please select an avatar!\", }\r\n            );\r\n            return;\r\n        } else if(!checkName(this.state.name)) {\r\n            this.setState(\r\n                { errmsg: `Invalid Name!`,}\r\n            );\r\n            return;\r\n        } else {\r\n            this.props.startNewJourney();\r\n            this.props.initPlayerInfo(this.state);\r\n            this.props.startJourney();\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const style = {\r\n            position: 'absolute',\r\n            left: '50%',\r\n            marginTop: 10,\r\n            transform: 'translate(-50%, 0%)',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center',\r\n            fontFamily: 'pixel',\r\n            fontSize: getFontSize(3),\r\n        }\r\n\r\n        return(\r\n            <div className=\"animateTitle\" style={{...style, width: '100%', height: '100%'}}>\r\n                <button onClick= {this.props.handleBack} style={{padding:'5px', marginLeft:'5px', backgroundColor: '#FD974F', alignSelf:'flex-start',...solidBorder(1, '#57ABB3', 5)}}><i className=\"fa fa-arrow-left fa-2x\"></i></button>\r\n                <div style={{margin:'20px', padding:'10px', color:'black', backgroundColor:'#FD974F', borderTop:'2px #57ABB3 solid', borderBottom:'2px #57ABB3 solid'}}>Select Your Avatar</div>\r\n                <div style={{width:'80%', height:'60%', display: 'flex', flexDirection: 'row', justifyContent:'space-between', alignItems: 'center',}}>\r\n                    <CharacterPane option=\"player_1\" click={this.handleCharacterClick} selected={this.state.character} bgColor='#FFE0C9'/>\r\n                    <CharacterPane option=\"player_2\" click={this.handleCharacterClick} selected={this.state.character} bgColor='#B0F8FF'/>\r\n                </div>\r\n                <div style={{width:'90%', height: '50px' , margin:'10px',display:'flex', justifyContent:'center', alignItems:'center'}}>\r\n                    <label htmlFor = \"player\" style={{marginRight:'20px', fontSize:getFontSize(2), color:'black'}}> Avatar name </label> \r\n                    <div style={{width:'60%', fontFamily:'pixel',}}>\r\n                        <input onChange={this.handleNameChange} type = \"text\" name = \"player\" id = \"player\" style={{width:'100%', fontFamily:'pixel' ,fontSize:getFontSize(2), color:'#57ABB3'}} value={this.state.name}/>\r\n                        <div style={{width:'100%', fontSize: getFontSize(1), color:'grey'}}>{NAME_MIN} to {NAME_MAX} english alphabet characters</div>\r\n                    </div>\r\n                </div>\r\n                <button onClick={this.validateAndSend} style={{width:350, fontFamily:'pixel',fontSize:getFontSize(2.5), margin:'50px', padding:'10px' ,backgroundColor: '#FD974F', ...solidBorder(2, '#57ABB3', 5),}}>Start Journey</button>\r\n                <p style={{color:'red', fontSize:getFontSize(2)}}>{this.state.errmsg}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(PlayerSelect);","export const RESOURCES = [\r\n    'assets/images/80/characters/baby/head.png',\r\n    'assets/images/80/characters/baby/sprite.png',\r\n    'assets/images/80/characters/boss/head.png',\r\n    'assets/images/80/characters/boss/sprite.png',\r\n    'assets/images/80/characters/bully_1/head.png',\r\n    'assets/images/80/characters/bully_1/sprite.png',\r\n    'assets/images/80/characters/cat_black/sprite.png',\r\n    'assets/images/80/characters/cat_orange/sprite.png',\r\n    'assets/images/80/characters/cat_white/sprite.png',\r\n    'assets/images/80/characters/chef/sprite.png',\r\n    'assets/images/80/characters/crush_1/head.png',\r\n    'assets/images/80/characters/crush_1/sprite.png',\r\n    'assets/images/80/characters/crush_2/head.png',\r\n    'assets/images/80/characters/crush_2/sprite.png',\r\n    'assets/images/80/characters/crush_3/head.png',\r\n    'assets/images/80/characters/crush_3/sprite.png',\r\n    'assets/images/80/characters/crush_4/head.png',\r\n    'assets/images/80/characters/crush_4/sprite.png',\r\n    'assets/images/80/characters/extras/player_tmp/head.png',\r\n    'assets/images/80/characters/extras/player_tmp/sprite_long.png',\r\n    'assets/images/80/characters/extras/player_tmp/sprite_tmp.png',\r\n    'assets/images/80/characters/extras/prof/head.png',\r\n    'assets/images/80/characters/extras/prof/professor_80.png',\r\n    'assets/images/80/characters/extras/prof/sprite.png',\r\n    'assets/images/80/characters/friend_1/head.png',\r\n    'assets/images/80/characters/friend_1/sprite.png',\r\n    'assets/images/80/characters/friend_2/head.png',\r\n    'assets/images/80/characters/friend_2/sprite.png',\r\n    'assets/images/80/characters/friend_3/head.png',\r\n    'assets/images/80/characters/friend_3/sprite.png',\r\n    'assets/images/80/characters/friend_4/head.png',\r\n    'assets/images/80/characters/friend_4/sprite.png',\r\n    'assets/images/80/characters/friend_5/head.png',\r\n    'assets/images/80/characters/friend_5/sprite.png',\r\n    'assets/images/80/characters/friend_6/head.png',\r\n    'assets/images/80/characters/friend_6/sprite.png',\r\n    'assets/images/80/characters/friend_7/head.png',\r\n    'assets/images/80/characters/friend_7/sprite.png',\r\n    'assets/images/80/characters/friend_8/head.png',\r\n    'assets/images/80/characters/friend_8/sprite.png',\r\n    'assets/images/80/characters/friend_9/head.png',\r\n    'assets/images/80/characters/friend_9/sprite.png',\r\n    'assets/images/80/characters/kid_1/head.png',\r\n    'assets/images/80/characters/kid_1/sprite.png',\r\n    'assets/images/80/characters/kid_2/head.png',\r\n    'assets/images/80/characters/kid_2/sprite.png',\r\n    'assets/images/80/characters/kid_3/head.png',\r\n    'assets/images/80/characters/kid_3/sprite.png',\r\n    'assets/images/80/characters/nurse/head.png',\r\n    'assets/images/80/characters/nurse/sprite.png',\r\n    'assets/images/80/characters/player_1/head.png',\r\n    'assets/images/80/characters/player_1/sprite.png',\r\n    'assets/images/80/characters/player_2/head.png',\r\n    'assets/images/80/characters/player_2/sprite.png',\r\n    'assets/images/80/characters/prof/head.png',\r\n    'assets/images/80/characters/prof/sprite.png',\r\n    'assets/images/80/characters/puppy_brown/sprite.png',\r\n    'assets/images/80/characters/puppy_white/head.png',\r\n    'assets/images/80/characters/puppy_white/sprite.png',\r\n    'assets/images/80/characters/tribe_1/head.png',\r\n    'assets/images/80/characters/tribe_1/sprite.png',\r\n    'assets/images/80/characters/tribe_2/head.png',\r\n    'assets/images/80/characters/tribe_2/sprite.png',\r\n    'assets/images/80/characters/tribe_3/head.png',\r\n    'assets/images/80/characters/tribe_3/sprite.png',\r\n    'assets/images/80/characters/tribe_4/head.png',\r\n    'assets/images/80/characters/tribe_4/sprite.png',\r\n    'assets/images/80/characters/tribe_5/head.png',\r\n    'assets/images/80/characters/tribe_5/sprite.png',\r\n    'assets/images/80/objectsAndProps/enter.png',\r\n    'assets/images/80/objectsAndProps/hen.png',\r\n    'assets/images/80/objectsAndProps/items.png',\r\n    'assets/images/80/objectsAndProps/leave.png',\r\n    'assets/images/80/objectsAndProps/loading.png',\r\n    'assets/images/80/objectsAndProps/PAPER.png',\r\n    'assets/images/80/objectsAndProps/portal.png',\r\n    'assets/images/80/objectsAndProps/ROCK.png',\r\n    'assets/images/80/objectsAndProps/SCISSORS.png',\r\n    'assets/images/80/objectsAndProps/title.png',\r\n    'assets/images/80/objectsAndProps/town.png',\r\n    'assets/images/80/objectsAndProps/playerselect/player_1.png',\r\n    'assets/images/80/objectsAndProps/playerselect/player_2.png',\r\n]","import React, {Component} from 'react';\r\nimport Game from './GameComponent';\r\nimport MainMenu from './MainMenuComponent';\r\nimport PlayerSelectComponent from './PlayerSelectComponent';\r\nimport { getViewportDim, playSoundEffect, centerBgImg} from '../helpers/funcs';\r\nimport ReactHowler from 'react-howler';\r\nimport { MAIN_MENU_MUSIC, BEEP_2_SOUND, BEEP_LONG_SOUND, PROPS_PATH } from '../helpers/constants';\r\nimport Loading from './LoadingComponent';\r\nimport { RESOURCES } from '../data/resourcepaths';\r\n\r\n\r\nconst LoadingResources = (props) => {\r\n\r\n    const style = {\r\n        position: 'relative',\r\n        margin: '60px auto',\r\n        border: '10px solid white',\r\n        overflow: 'hidden',\r\n        width: props.width,\r\n        height: props.height,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        backgroundColor:'black',\r\n    }\r\n\r\n    return(\r\n        <div style={style}>\r\n            <div style={{width:'100%', height:'60%'}}>\r\n                <Loading msg={props.msg}/>\r\n            </div>\r\n            <div style={{width:'60%', height:'40%'}}>\r\n                <progress style={{position:'relative', width:'100%', height:20}} value={props.done} max={props.total}>\r\n                    {`${Math.ceil(props.done/props.total*100)}%`}\r\n                </progress>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true,\r\n            menu: false,\r\n            playerselect: false,\r\n            game: false,\r\n            loadgame: false,\r\n            screenDim: getViewportDim(window.screen.width, window.screen.height),\r\n            resourceTotal: RESOURCES.length,\r\n            resourceDone: 0,\r\n        }\r\n        this.bg = `${PROPS_PATH}/town.png`;\r\n        this.handleStartNewGame = this.handleStartNewGame.bind(this);\r\n        this.handleLoadGame = this.handleLoadGame.bind(this);\r\n        this.handleStartJourney = this.handleStartJourney.bind(this);\r\n        this.handleBack = this.handleBack.bind(this);\r\n    }\r\n\r\n    \r\n\r\n    preloadPictures (pictureUrls, callback) {\r\n        let i,\r\n            j,\r\n            loaded = 0;\r\n    \r\n        for (i = 0, j = pictureUrls.length; i < j; i++) {\r\n            (function (img, src) {\r\n                img.onload = function () {\r\n                    this.setState({\r\n                        resourceDone: ++loaded,\r\n                    });                               \r\n                    if (loaded >= pictureUrls.length && callback) {\r\n                        callback();\r\n                    }\r\n                }.bind(this);\r\n                img.src = src;\r\n            }.bind(this) (new Image(), pictureUrls[i]));\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        \r\n        const renderMenu = function() {\r\n            this.setState({\r\n                loading: false,\r\n                menu: true,\r\n                playerselect: false,\r\n                game: false,\r\n                loadgame: false,\r\n            });\r\n        }.bind(this);\r\n\r\n        this.preloadPictures(RESOURCES, renderMenu);\r\n    }\r\n\r\n    handleStartNewGame() {\r\n        playSoundEffect(BEEP_2_SOUND);\r\n        this.setState({\r\n            menu: false,\r\n            playerselect: true,\r\n            game: false,\r\n            loadgame: false,\r\n        });\r\n    }\r\n\r\n    handleLoadGame() {\r\n        playSoundEffect(BEEP_LONG_SOUND);\r\n        this.setState({\r\n            menu: false,\r\n            playerselect: false,\r\n            game: true,\r\n            loadgame: true,\r\n        });\r\n    }\r\n\r\n    handleStartJourney() {\r\n        playSoundEffect(BEEP_LONG_SOUND);\r\n        this.setState({\r\n            menu: false,\r\n            playerselect: false,\r\n            game: true,\r\n            loadgame: false,\r\n        })\r\n    }\r\n\r\n    handleBack() {\r\n        playSoundEffect(BEEP_2_SOUND);\r\n        this.setState({\r\n            menu: true,\r\n            playerselect: false,\r\n            game: false,\r\n            loadgame: false,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        \r\n        const style = {\r\n            position: 'relative',\r\n            margin: '60px auto',\r\n            border: '10px solid white',\r\n            overflow: 'hidden',\r\n            width: this.state.screenDim[0],\r\n            height: this.state.screenDim[1],\r\n            ...centerBgImg(this.bg, 'black', 'cover'),\r\n        }\r\n\r\n        let UI_COMPONENT = null, AUDIO_COMPONENT = null;\r\n\r\n        if(this.state.loading) {\r\n            UI_COMPONENT = <LoadingResources width={this.state.screenDim[0]} height={this.state.screenDim[1]} msg=\"Loading Resources\" total={this.state.resourceTotal} done={this.state.resourceDone}/>;\r\n            AUDIO_COMPONENT = null;\r\n        } else if(this.state.menu) {\r\n            UI_COMPONENT = <div style={style}><MainMenu width={this.state.screenDim[0]} height={this.state.screenDim[1]} startNewGame={this.handleStartNewGame} loadGame={this.handleLoadGame} /></div>;\r\n            AUDIO_COMPONENT = <ReactHowler src={MAIN_MENU_MUSIC} loop={true} html5={false} volume={0.4}/>;\r\n        } else if(this.state.playerselect) {\r\n            UI_COMPONENT = <div style={style}><PlayerSelectComponent width={this.state.screenDim[0]} height={this.state.screenDim[1]}  startJourney={this.handleStartJourney} handleBack={this.handleBack}/></div>;\r\n            AUDIO_COMPONENT = <ReactHowler src={MAIN_MENU_MUSIC} loop={true} html5={false}  volume={0.4}/>;\r\n        } else if(this.state.game) {\r\n            UI_COMPONENT = <Game width={this.state.screenDim[0]} height={this.state.screenDim[1]} loadgame={this.state.loadgame} handleBack={this.handleBack}/>;\r\n            AUDIO_COMPONENT = null;\r\n        } else {\r\n            UI_COMPONENT = <div style={{fontFamily:'gameboy', fontSize:'20px', color:'white'}}>Unknown error. PLEASE RELOAD PAGE.</div>;\r\n            AUDIO_COMPONENT = null;\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                {UI_COMPONENT}\r\n                {AUDIO_COMPONENT}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import * as ActionTypes from './ActionTypes';\r\nimport { DOWN } from '../helpers/constants';\r\nimport { getValue } from '../helpers/funcs';\r\nimport { SKINS } from '../data/skins';\r\n\r\nconst DEFAULT_SKIN = \"player_1\";\r\n\r\nconst INITIAL_STATE = { \r\n                        name: \"PLAYER\",\r\n                        skin: SKINS[DEFAULT_SKIN],\r\n                        position: [0, 0],\r\n                        direction: DOWN,\r\n                        spriteLocation: SKINS[DEFAULT_SKIN][DOWN],\r\n                        isAnimating: false,\r\n                        nextPosition: [],\r\n                        walkIndex: 0,\r\n                        frameInterval: 0,\r\n                        interacting: false,\r\n                        frozen: false,\r\n                        nearbyNPC: null,\r\n                        nearbyGameObj: null,\r\n                        inBattle: false,\r\n                        battle: {\r\n                                level: 1,\r\n                                exp: 0,\r\n                                won: 0,\r\n                                lost: 0,\r\n                                defeatedGangMembers:{},\r\n                        }\r\n        };\r\n\r\nconst getUpdatedGangMembersList = (defeatedGangMembers, newGangMember) => {\r\n        let newDefeatedGangMembers = {...defeatedGangMembers};\r\n        if(newGangMember!==null) {\r\n                newDefeatedGangMembers[newGangMember] = 1;\r\n        } \r\n        return(newDefeatedGangMembers);\r\n}\r\n\r\n\r\nexport const Player = (state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n                return({\r\n                        ...INITIAL_STATE,\r\n                });\r\n        case ActionTypes.ADD_MAP:\r\n                return({\r\n                        ...state, \r\n                        position: action.payload.player.position, \r\n                        direction: getValue(state.direction, action.payload.player.direction),\r\n                        spriteLocation: state.skin[getValue(state.direction, action.payload.player.direction)],\r\n                        isAnimating: false,\r\n                        nextPosition: [],\r\n                        walkIndex: 0,\r\n                        interacting: false,\r\n                        frozen: false,\r\n                        nearbyNPC: null,\r\n                        nearbyGameObj: null,\r\n                        inBattle: false,\r\n                        battle: {\r\n                                ...action.payload.secondary? state.battle:INITIAL_STATE.battle, \r\n                        }\r\n                });\r\n        case ActionTypes.SET_PLAYER_INFO:\r\n                return({\r\n                        ...state,\r\n                        name: action.payload.name,\r\n                        skin: SKINS[action.payload.skinIdx],\r\n\r\n                });\r\n        case ActionTypes.UPDATE_PLAYER_POSITION:\r\n                return({...state, \r\n                        position: action.payload.position, \r\n                        walkIndex: (state.walkIndex+1)%state.skin.walkSpriteCount\r\n                });\r\n        case ActionTypes.UPDATE_PLAYER_DIRECTION:\r\n                return({...state, \r\n                        direction: action.payload.direction, \r\n                        spriteLocation: state.skin[action.payload.direction]\r\n                });\r\n        case ActionTypes.UPDATE_PLAYER_ANIMATION:\r\n                return({...state, \r\n                        isAnimating: action.payload.isAnimating, \r\n                        nextPosition: action.payload.newpos, \r\n                        walkIndex: 0\r\n                });\r\n        case ActionTypes.SET_DIALOG_STATUS:\r\n                return({\r\n                        ...state,\r\n                        interacting: true,\r\n                });\r\n        case ActionTypes.RESET_DIALOG_STATUS:\r\n                return({\r\n                        ...state,\r\n                        interacting: false,\r\n                });\r\n        \r\n        case ActionTypes.SAVE_STATE_INITIATED:\r\n                return({\r\n                        ...state,\r\n                        frozen: true,\r\n                });\r\n        case ActionTypes.SAVE_STATE_END:\r\n                return({\r\n                        ...state,\r\n                        frozen: false,\r\n                });\r\n\r\n        case ActionTypes.RESTORE_STATE:\r\n                return({\r\n                        ...action.payload.state.player,\r\n                        battle: {...state.battle},\r\n                        direction: state.direction,\r\n                        spriteLocation: state.skin[state.direction],\r\n                        frozen: false,\r\n                });\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n                return({\r\n                        ...action.payload.state.player,\r\n                                frozen: false,\r\n                });\r\n        case ActionTypes.UPDATE_NEARBY_NPC: \r\n                return({\r\n                        ...state,\r\n                        nearbyNPC: action.payload.npcId,\r\n                });\r\n        case ActionTypes.UPDATE_NEARBY_GAMEOBJ: \r\n                return({\r\n                        ...state,\r\n                        nearbyGameObj: action.payload.id,\r\n                });\r\n        case ActionTypes.START_BATTLE:\r\n                return({\r\n                        ...state,\r\n                        inBattle: true,\r\n                });\r\n        case ActionTypes.END_BATTLE:\r\n                return({\r\n                        ...state,\r\n                        inBattle: false,\r\n                        battle: {\r\n                                level: action.payload.player.newlevel,\r\n                                exp: action.payload.player.newexp,\r\n                                won: action.payload.battleWinner===1? state.battle.won+1: state.battle.won,\r\n                                lost: action.payload.battleWinner===-1? state.battle.lost+1: state.battle.lost,\r\n                                defeatedGangMembers: getUpdatedGangMembersList(state.battle.defeatedGangMembers, action.payload.player.gangMember),\r\n                        },\r\n                });\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nconst INITIAL_STATE = { \r\n                        name: null,\r\n                        tiles: [],\r\n                        width: 0,\r\n                        height: 0,\r\n                        isLoading: true,\r\n                        src: null,\r\n                        audioSrc: null,\r\n                    }\r\n\r\nexport const Map = (state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n            return({\r\n                ...INITIAL_STATE,\r\n            });\r\n\r\n        case ActionTypes.ADD_MAP:\r\n            return({...state, \r\n                    name: action.payload.name,\r\n                    tiles: action.payload.tiles, \r\n                    width: action.payload.width,\r\n                    height: action.payload.height,\r\n                    src: action.payload.src,\r\n                    audioSrc: action.payload.audioSrc,\r\n                    isLoading: false,\r\n                    });\r\n        case ActionTypes.MAP_LOADING:\r\n            return({\r\n                ...state,\r\n                isLoading: true,\r\n            });\r\n        case ActionTypes.RESTORE_STATE:\r\n            return({\r\n                ...action.payload.state.map,\r\n                isLoading: false,\r\n            });\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n            return({\r\n                ...action.payload.state.map,\r\n                isLoading: false,\r\n            });\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n                        start: [0, 0],\r\n                        end: [],\r\n                        width:0,\r\n                        height:0,\r\n                        viewportDims:[0, 0], //width X height\r\n                        camera:[[0,0],[0,0]],\r\n                    }\r\n\r\nexport const ViewPort = ( state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.INIT_VIEWPORT_DIMS:\r\n            return({\r\n                ...state,\r\n                viewportDims: action.payload.viewportDims,\r\n                camera: action.payload.camera,\r\n            })\r\n        case ActionTypes.ADD_MAP:\r\n            return({...state,\r\n                        start: action.payload.viewport.start,\r\n                        end: action.payload.viewport.end,\r\n                        width:action.payload.width, \r\n                        height: action.payload.height,\r\n                    });\r\n        case ActionTypes.UPDATE_MAP_ORIGIN:\r\n            return({...state,  start: action.payload.origin,\r\n                                end: [action.payload.origin[0]+state.width, action.payload.origin[1]+state.height]});\r\n\r\n        case ActionTypes.RESTORE_STATE:\r\n            return({\r\n                ...action.payload.state.viewport,\r\n            });\r\n\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n            return({\r\n                ...action.payload.state.viewport,\r\n            });\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\nimport {tileToMapCoordinates} from '../helpers/funcs';\r\nimport {TILE_SIZE } from '../helpers/constants';\r\n\r\nconst INITIAL_STATE = {\r\n    list:  [],\r\n    frozen: false,\r\n  }\r\n\r\nexport const NPC = (state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n            return({\r\n                ...INITIAL_STATE,\r\n            });\r\n\r\n        case ActionTypes.ADD_MAP:\r\n            if(!action.payload.npc)\r\n                return state;\r\n            return(\r\n                { \r\n                    frozen: false,\r\n                    list :action.payload.npc.map( npc => {\r\n                        return({...npc, \r\n                                position: tileToMapCoordinates(npc.pathArr[0], TILE_SIZE),\r\n                                spriteLocation: npc.skin[npc.direction],\r\n                                defaultDirection: npc.direction,\r\n                                isAnimating: false,\r\n                                nextPosition: [],\r\n                                walkIndex: 0,\r\n                                pathIdx: 0,\r\n                                pathDir: 1,\r\n                                lastUpdated: performance.now(),\r\n                                isWaiting: false,\r\n                                interacting: false,\r\n                                battle: 'battle' in npc? npc.battle: false,\r\n                                battlerType: 'battlerType' in npc? npc.battlerType: null,\r\n                                inBattle: false,\r\n                                battleFlag: 'battleFlag' in npc? npc.battleFlag : false,\r\n                                defeatedCount: 'defeatedCount' in npc? npc.defeatedCount: 0,\r\n                                talkFlag: 'talkFlag' in npc? npc.talkFlag: true,\r\n                            })\r\n                        })\r\n                }\r\n            );\r\n        case ActionTypes.UPDATE_NPC_POSITION:\r\n                return({\r\n                    ...state,\r\n                    list: state.list.map( npc => {\r\n                            if(npc.id===action.payload.id)\r\n                                return({...npc, \r\n                                        position: action.payload.position, \r\n                                        walkIndex: (npc.walkIndex+1)%npc.skin.walkSpriteCount,\r\n                                });\r\n                            else\r\n                                return npc;\r\n                    })\r\n                });\r\n                    \r\n        case ActionTypes.UPDATE_NPC_DIRECTION:\r\n                return({\r\n                    ...state,\r\n                    list: state.list.map( npc => {\r\n                        if(npc.id===action.payload.id)\r\n                            return({...npc,  \r\n                                    direction: action.payload.direction, \r\n                                    spriteLocation: npc.skin[action.payload.direction]\r\n                                });\r\n                        else\r\n                            return npc;\r\n                    })\r\n                });\r\n\r\n        case ActionTypes.UPDATE_NPC_ANIMATION:\r\n                return({\r\n                    ...state,\r\n                    list: state.list.map( npc => {\r\n                        if(npc.id===action.payload.id) {\r\n                            let pathIdx = npc.pathIdx, \r\n                                pathDir = npc.pathDir,\r\n                                isWaiting = npc.isWaiting, lastUpdated = npc.lastUpdated;\r\n                            \r\n                            if(!action.payload.isAnimating) {\r\n                                lastUpdated = performance.now();\r\n                                pathIdx = pathIdx + pathDir;\r\n                                if(pathDir===1 && pathIdx===(npc.pathArr.length-1)) {\r\n                                    isWaiting = true;\r\n                                    pathDir = -1;\r\n                                } else if(pathDir===-1 && pathIdx===0) {\r\n                                    isWaiting = true;\r\n                                    pathDir = 1;\r\n                                }\r\n                            }\r\n                            return({...npc,  \r\n                                    isAnimating: action.payload.isAnimating, \r\n                                    nextPosition: action.payload.newpos, \r\n                                    pathIdx: pathIdx, \r\n                                    pathDir: pathDir,\r\n                                    isWaiting: isWaiting,\r\n                                    lastUpdated: lastUpdated\r\n                            });\r\n                        } else\r\n                            return npc;\r\n                    })\r\n                });\r\n                    \r\n        case ActionTypes.RESET_NPC_WAITING:\r\n                return({\r\n                    ...state,\r\n                    list: state.list.map( npc => {\r\n                        if(npc.id===action.payload.id)\r\n                            return({...npc,  \r\n                                    isWaiting: false,\r\n                                });\r\n                        else\r\n                            return npc;\r\n                    })\r\n                });\r\n        case ActionTypes.SET_DIALOG_STATUS:\r\n                return({\r\n                    ...state,\r\n                    list:  state.list.map( npc => {\r\n                        if(npc.id===action.payload.npcId)\r\n                            return({...npc,  \r\n                                    interacting: true,\r\n                                });\r\n                        else\r\n                            return npc;\r\n                    })\r\n                });\r\n        case ActionTypes.RESET_DIALOG_STATUS:\r\n                    return({\r\n                        ...state,\r\n                        list: state.list.map( npc => {\r\n                            if(npc.id===action.payload.npcId)\r\n                                return({...npc,  \r\n                                        interacting: false,\r\n                                        talkFlag: true,\r\n                                    });\r\n                            else\r\n                                return npc;\r\n                        })\r\n                    });\r\n        case ActionTypes.SAVE_STATE_INITIATED:\r\n                return({\r\n                    ...state,\r\n                    frozen: true,\r\n                });\r\n        case ActionTypes.SAVE_STATE_END:\r\n                return({\r\n                    ...state,\r\n                    frozen: false,\r\n                });\r\n        case ActionTypes.RESTORE_STATE:\r\n                return({\r\n                    list: action.payload.state.npc.list.map( npc => {\r\n                        return({\r\n                            ...npc,\r\n                            isWaiting: false,\r\n                        });\r\n                    } ),\r\n                    frozen: false,\r\n                });\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n                return({\r\n                    list: action.payload.state.npc.list.map( npc => {\r\n                        return({\r\n                            ...npc,\r\n                            isWaiting: false,\r\n                        });\r\n                    } ),\r\n                    frozen: false,\r\n                });\r\n\r\n        case ActionTypes.START_BATTLE:\r\n                return({\r\n                    ...state,\r\n                    list:  state.list.map( npc => {\r\n                        if(npc.id===action.payload.npc.id)\r\n                            return({...npc,  \r\n                                    inBattle: true,\r\n                                });\r\n                        else\r\n                            return npc;\r\n                    })\r\n                });\r\n        case ActionTypes.END_BATTLE:\r\n                    return({\r\n                        ...state,\r\n                        list: state.list.map( npc => {\r\n                            if(npc.id===action.payload.npcId)\r\n                                return({...npc,  \r\n                                        inBattle: false,\r\n                                        defeatedCount: action.payload.battleWinner===1? npc.defeatedCount+1:npc.defeatedCount,\r\n                                        battleFlag: true,\r\n                                    });\r\n                            else\r\n                                return npc;\r\n                        })\r\n                    });\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\nimport {tileToMapCoordinates} from '../helpers/funcs';\r\nimport {TILE_SIZE } from '../helpers/constants';\r\n\r\n\r\nexport const GameObject = (state = [], action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n            return([]);\r\n            \r\n        case ActionTypes.ADD_MAP:\r\n            let id=0;\r\n            if(!action.payload.gameobjects)\r\n                return state;\r\n            return(\r\n                action.payload.gameobjects.map( gameobject => {\r\n                    return({...gameobject, \r\n                            id: id++,\r\n                            position: tileToMapCoordinates(gameobject.position, TILE_SIZE),\r\n                    })\r\n                })\r\n            );\r\n        case ActionTypes.ADD_OBJECT_TO_INVENTORY:\r\n            return(state.filter( gameobject => (gameobject.id !== action.payload.object.id)));\r\n\r\n        case ActionTypes.RESTORE_STATE:\r\n            return(\r\n                action.payload.state.gameobjects.concat()\r\n            );\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n            return(\r\n                    action.payload.state.gameobjects.concat()\r\n            );\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    isOpen: false, \r\n    position: \"top\",\r\n    person1: {},\r\n    person2: {},\r\n    dialogIdx: 0,\r\n    speakerIdx: 0,\r\n    npcId: null,\r\n    battleConversation: false,\r\n };\r\n\r\nexport const Dialog = (state = {...INITIAL_STATE}, action) => {\r\n            switch(action.type) {\r\n                case ActionTypes.START_NEW_JOURNEY:\r\n                    return({\r\n                        ...INITIAL_STATE\r\n                    });\r\n                case ActionTypes.SET_DIALOG_STATUS:\r\n                    return({\r\n                        ...INITIAL_STATE,\r\n                        isOpen: true,\r\n                        position: action.payload.position,\r\n                        person1: action.payload.person1,\r\n                        person2: action.payload.person2,\r\n                        npcId: action.payload.npcId,\r\n                        dialogIdx: 0,\r\n                        speakerIdx: 0,\r\n                        battleConversation: action.payload.battleConversation, \r\n                    });\r\n                case ActionTypes.RESET_DIALOG_STATUS:\r\n                        return({\r\n                            ...INITIAL_STATE,\r\n                        });\r\n                case ActionTypes.NEXT_DIALOG:\r\n                    if(state.speakerIdx===0) {\r\n                        return({\r\n                            ...state,\r\n                            speakerIdx: 1,\r\n                        })\r\n                    } else {\r\n                        return({\r\n                            ...state,\r\n                            speakerIdx: 0,\r\n                            dialogIdx: (state.dialogIdx + 1) % state.person1.dialogs.length,\r\n                        })\r\n                    }\r\n                default: \r\n                    return state;\r\n            }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n    isOpen: false, \r\n    HEALER : [],\r\n    CURRENCY: [],\r\n    EATABLE: [],\r\n };\r\n\r\nexport const Inventory = (state = {...INITIAL_STATE}, action) => {\r\n            switch(action.type) {\r\n                case ActionTypes.START_NEW_JOURNEY:\r\n                    return({\r\n                        ...INITIAL_STATE,\r\n                    });\r\n                    \r\n                case ActionTypes.TOGGLE_INVENTORY_DISPLAY:\r\n                    return({\r\n                        ...state,\r\n                        isOpen: !state.isOpen,\r\n                    });\r\n\r\n                case ActionTypes.ADD_OBJECT_TO_INVENTORY:\r\n                    let statecpy = {...state};\r\n                    statecpy[action.payload.object.type.type] = state[action.payload.object.type.type].concat(action.payload.object);\r\n                    return(statecpy);\r\n\r\n                case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n                    return({\r\n                        ...action.payload.state.inventory,\r\n                    });\r\n\r\n                default: \r\n                    return state;\r\n            }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nconst INITIAL_STATE = {\r\n                        savingState: false,\r\n                        prevStates: [],\r\n                    }\r\n\r\nexport const StateManager = ( state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n            return({\r\n                ...INITIAL_STATE,\r\n            })\r\n        case ActionTypes.SAVE_STATE_INITIATED:\r\n            return({\r\n                    ...state,\r\n                    savingState: true,\r\n            });\r\n        case ActionTypes.SAVE_STATE:\r\n            const cpyPrevStates = [...state.prevStates];\r\n            cpyPrevStates.push(action.payload.state);\r\n            return({\r\n                ...state,\r\n                prevStates: cpyPrevStates,\r\n                savingState: false,\r\n            });\r\n        case ActionTypes.SAVE_STATE_END:\r\n            return({\r\n                    ...state,\r\n                    savingState: false,\r\n            });\r\n        case ActionTypes.RESTORE_STATE:\r\n            let statecpy = {\r\n                ...state,\r\n                prevStates: action.payload.prevStates,\r\n                savingState: false,\r\n            };\r\n            statecpy[action.payload.mapinfo.map] = {\r\n                gameobjects: action.payload.mapinfo.gameobjects,\r\n                npc: action.payload.mapinfo.npc,\r\n            }\r\n            return(statecpy);\r\n        case ActionTypes.RESTORE_STATE_FROM_DISK:\r\n            return({\r\n                ...action.payload.state.statemanager,\r\n                savingState: false,\r\n            });\r\n        default: \r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\nimport { BATTLE_MUSIC } from '../helpers/constants';\r\n\r\n\r\nconst squareMatrix = (n) => {\r\n    let matrix = [];\r\n    for(let i=0; i<n; i++) {\r\n        matrix.push(new Array(n).fill(0));\r\n    }\r\n    return matrix;\r\n}\r\n\r\nconst BASE_LIVES = 5;\r\n\r\n\r\nconst getLives = (level) => {\r\n    return(BASE_LIVES + (level-1)*2);\r\n}\r\n\r\nconst INITIAL_STATE = { \r\n                        isOpen: false,\r\n                        inIntro: true,\r\n                        inEnd: false,\r\n                        currRound: 0,\r\n                        player: {\r\n                            name: \"Player\",\r\n                            src: \"\",\r\n                            level: 1,\r\n                            exp: 0,\r\n                            lastMove: null,\r\n                            score: 0,\r\n                            lives: BASE_LIVES,\r\n                            maxLives: BASE_LIVES,\r\n                            markovMatrix: squareMatrix(3), \r\n                            initialStats: {\r\n                                level: 1,\r\n                                exp: 0,\r\n                            },\r\n                        },\r\n                        npc: {\r\n                            id: null,\r\n                            name: \"NPC\",\r\n                            src:\"\",\r\n                            level: 1,\r\n                            battlerType: null,\r\n                            lastMove: null,\r\n                            lives: BASE_LIVES,\r\n                            maxLives: BASE_LIVES,\r\n                            score: 0,\r\n                        },\r\n                        lastWinner: 0,\r\n                        finalWinner: 0,\r\n                        summary: \"Use mouse/touch to select your move.\",\r\n                        music: null,\r\n                    };\r\n\r\nexport const Battle = (state = {...INITIAL_STATE}, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.START_NEW_JOURNEY:\r\n            return({\r\n                ...INITIAL_STATE,\r\n            });\r\n        case ActionTypes.START_BATTLE:\r\n            return({\r\n                ...INITIAL_STATE,\r\n                isOpen: true,\r\n                player: {\r\n                    ...INITIAL_STATE.player,\r\n                    name: action.payload.player.name,\r\n                    src:action.payload.player.skin.src,\r\n                    level: action.payload.player.battle.level,\r\n                    exp: action.payload.player.battle.exp,\r\n                    lives: getLives(action.payload.player.battle.level),\r\n                    maxLives: getLives(action.payload.player.battle.level), \r\n                    markovMatrix: squareMatrix(3), \r\n                    initialStats: {\r\n                        level: action.payload.player.battle.level,\r\n                        exp: action.payload.player.battle.exp,\r\n                    },\r\n                },\r\n                npc: {\r\n                    ...INITIAL_STATE.npc,\r\n                    id: action.payload.npc.id,\r\n                    name: action.payload.npc.name,\r\n                    src: action.payload.npc.skin.src,\r\n                    level: action.payload.npc.level,\r\n                    battlerType: action.payload.npc.battlerType,\r\n                    lives: getLives(action.payload.npc.level),\r\n                    maxLives: getLives(action.payload.npc.level),  \r\n                },\r\n                music: 'battleMusic' in action.payload.npc? action.payload.npc.battleMusic: BATTLE_MUSIC,\r\n            })\r\n\r\n        case ActionTypes.END_BATTLE_INTRO:\r\n            return({\r\n                ...state,\r\n                inIntro: false,\r\n            });\r\n        case ActionTypes.SUBMIT_MOVES:\r\n            let cpyMatrix = [...state.player.markovMatrix];\r\n            if(state.player.lastMove!==null) {\r\n                cpyMatrix[state.player.lastMove][action.payload.playermove]+=1;   \r\n            } \r\n            return({\r\n                ...state,\r\n                currRound: state.currRound+1,\r\n                player: {\r\n                    ...state.player,\r\n                    lastMove: action.payload.playermove,\r\n                    score: action.payload.winner===1? state.player.score+1: state.player.score,\r\n                    lives: action.payload.winner===-1? Math.max(state.player.lives-1,0): state.player.lives,\r\n                    markovMatrix: cpyMatrix,\r\n                },\r\n                npc: {\r\n                    ...state.npc,\r\n                    lastMove: action.payload.npcmove,\r\n                    score: action.payload.winner===-1? state.npc.score+1: state.npc.score,\r\n                    lives: action.payload.winner===1? Math.max(state.npc.lives-1,0): state.npc.lives,\r\n                },\r\n                lastWinner: action.payload.winner,\r\n                summary: action.payload.summary,\r\n            });\r\n\r\n        case ActionTypes.END_BATTLE:\r\n            return({\r\n                ...state,\r\n                inEnd: true,\r\n                player: {\r\n                    ...state.player,\r\n                    level: action.payload.player.newlevel,\r\n                    exp: action.payload.player.newexp,\r\n                },\r\n                finalWinner: action.payload.battleWinner,\r\n            })\r\n        case ActionTypes.CLOSE_BATTLE:\r\n                return({\r\n                    ...state,\r\n                    isOpen: false,\r\n                })\r\n        default: \r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Player } from './player';\r\nimport { Map } from './map';\r\nimport { ViewPort } from './viewport';\r\nimport { NPC } from './npc';\r\nimport { GameObject } from './gameobject'\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Dialog } from './dialog';\r\nimport { Inventory } from './inventory';\r\nimport { StateManager } from './statemanager';\r\nimport { Battle } from './battle';\r\n\r\nconst rootReducer = combineReducers({\r\n    player : Player,\r\n    map: Map,\r\n    viewport: ViewPort,\r\n    npc: NPC,\r\n    gameobjects: GameObject,\r\n    dialog: Dialog,\r\n    inventory: Inventory,\r\n    statemanager: StateManager,\r\n    battle: Battle,\r\n});\r\n\r\n\r\nexport const ConfigureStore = () =>  createStore(\r\n    rootReducer,\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n    \r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport './App.css';\r\nimport Main from './components/MainComponent';\r\nimport { ConfigureStore } from './redux/ConfigureStore';\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={ConfigureStore()}>\r\n        <Main />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}